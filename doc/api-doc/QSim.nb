(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    858379,      17031]
NotebookOptionsPosition[    837381,      16392]
NotebookOutlinePosition[    843998,      16577]
CellTagsIndexPosition[    842206,      16531]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QSim` Documentation", "Chapter",
 CellChangeTimes->{{3.6333515346579514`*^9, 3.63335154627586*^9}, {
  3.633364320690548*^9, 3.63336432261762*^9}, {3.633369638229841*^9, 
  3.633369639626734*^9}}],

Cell[CellGroupData[{

Cell["Preamble", "Subsection",
 CellChangeTimes->{{3.633351558518317*^9, 3.633351560041299*^9}, {
  3.633781221006772*^9, 3.633781223062866*^9}, {3.6362144455740547`*^9, 
  3.636214450140772*^9}}],

Cell["\<\
QSim is a stand-alone package, and does not require other packages to run.\
\>", "Text",
 CellChangeTimes->{{3.633443468023219*^9, 3.6334434910153923`*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<QSim`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.633351696261045*^9, 3.633351701530016*^9}, {
  3.633369630403097*^9, 3.633369649792616*^9}, {3.633371974503627*^9, 
  3.633371979509849*^9}, {3.6334434946691303`*^9, 3.633443495411319*^9}}],

Cell["\<\
The following packages are needed to run some code found in this \
documentation notebook.\
\>", "Text",
 CellChangeTimes->{{3.633443504920109*^9, 3.6334435391598387`*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<QuantumSystems`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Tensor`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Visualization`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<GRAPE`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.633887955330262*^9, 3.633887977596451*^9}, {
  3.636810179378859*^9, 3.636810186142601*^9}, {3.6368102184693117`*^9, 
  3.63681022192907*^9}, {3.6368215842938538`*^9, 3.6368215894289637`*^9}, {
  3.63682474651178*^9, 3.636824750332809*^9}, {3.636894735607376*^9, 
  3.6368947372171583`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6351824420646763`*^9, 3.635182446927919*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Open Source Code\"\>",
  Appearance->Automatic,
  ButtonFunction:>(Needs["QUDevTools`"]; NotebookOpen[
     FileNameJoin[{QUDevTools`$QUSourcePath, 
       StringJoin[
        FileBaseName[
         NotebookFileName[]], ".m"]}]]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.635182609676621*^9, 3.6351826444407997`*^9}, {
  3.635182842680962*^9, 3.63518284820653*^9}, {3.635182903083259*^9, 
  3.635182906619155*^9}, {3.635182952870352*^9, 3.635182956778173*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction and Overview", "Section",
 CellChangeTimes->{{3.633351563673402*^9, 3.633351567143589*^9}}],

Cell[TextData[{
 StyleBox["QSim`", "Input"],
 " is a general purpose quantum system time-evolution simulator whose primary \
objective is ease of use. This is in keeping with one of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s main advantages over most other languages; rapid and \
intuitive development of ideas with minimal overhead. A description of the \
the quantum system, usually a Hamiltonian, and an action on that quantum \
system are provided, and some observable, quantum state, propogator, etc. is \
monitored as the system evolves. "
}], "Text",
 CellChangeTimes->{{3.63336976465697*^9, 3.6333698346703863`*^9}, {
  3.633369866272846*^9, 3.633369887648974*^9}, {3.633369949703978*^9, 
  3.633369955653768*^9}, {3.633370004311841*^9, 3.633370006392604*^9}, {
  3.633370062385489*^9, 3.633370284437573*^9}, {3.633370463585658*^9, 
  3.6333704707289658`*^9}}],

Cell[TextData[{
 "As a quick example, the following computes the expectation value of X\
\[CircleTimes]Y of the initial state |00\[RightAngleBracket] undergoing \
evolution with the time-dependent Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"H", "(", "t", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"cos", "(", "t", ")"}], 
      RowBox[{"X", "\[CircleTimes]", "X"}]}], "+", 
     RowBox[{
      RowBox[{"sin", "(", "t", ")"}], 
      RowBox[{"Y", "\[CircleTimes]", "Y"}]}]}]}], TraditionalForm]]],
 ". Note that over half the code is for plotting and not for simulating -- it \
is really a one liner!"
}], "Text",
 CellChangeTimes->{{3.633372742814391*^9, 3.6333727744476213`*^9}, {
  3.633372805181459*^9, 3.633372857765842*^9}, {3.633894601505192*^9, 
  3.633894639738811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{
     RowBox[{"PulseSim", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "#", "]"}], 
          RowBox[{"TP", "[", "XX", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "#", "]"}], 
          RowBox[{"TP", "[", "XX", "]"}]}]}], "&"}], ",", "4", ",", 
       RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
       RowBox[{"InitialState", "\[Rule]", 
        RowBox[{"Projector", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ",", 
       RowBox[{"Observables", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"TP", "[", "XY", "]"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Expectation value of X\[CircleTimes]Y\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.633371988065483*^9, 3.6333720701854362`*^9}, {
  3.633372104294569*^9, 3.633372175515564*^9}, {3.633372338087254*^9, 
  3.63337235155048*^9}, {3.633372390491395*^9, 3.633372427698889*^9}, {
  3.633372559844575*^9, 3.6333727200679197`*^9}, {3.633372916631035*^9, 
  3.6333729261829367`*^9}, {3.636818905072874*^9, 3.636818919909801*^9}, {
  3.636991679522462*^9, 3.63699168047691*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxlUmtIU1Ecn8/pNDUYMiksMcxSCnz3sP8BKydJoiWpW6KmVgipBUFKkeU+
OCk/hJbrJWoRFMMk0ko6kTpLXWk+5pyY0zk3tnk0Uytf7d57PtUPDpdzzj2/
1zkBOYUpeY48Hi/CPpjvvygVKuP1Ja/gQr72QfieTszNO8A9zFTw4d4QbvWX
WZJbv4DkjGV5FE3Q/UE46pvwPlUyjRW1DLTwXafim7vM9P9xiO4MehgaYcPW
ZGZFDy3i2G6PNELPG+DON7WlaJ1ggaahKFYwA/V8mTTXk1A+M0zYSrMlMive
Ja36uBhshd0n+4+PVZoo/yxYsxv8DmRO4Ub7aU3DHExudjB0PB6levOgMDwK
1PN6cDiLBRBvKZtvupVF9X9CRv3ydXn1Z2hfDGYUYCWkzLhfOQKcn2UwCcar
s27rIYUV/AWGfcb0AMs0cP5+g6xNnvspxwz6EobwD1wdCDcdXrMA53cVzqbV
TbT32aCYsVe0BlPek+m61Vng/K9DqNOxlpEnBOg1oOH1d8LncwS4PDzULNKK
nm0QELMCDqjWffBIlH2fy+eA+hVLkjgtAUZNWuWIrjSRgIxuAlxeJ3Rz3vnp
zh4CbByNE1Id2l6QoCPA5XdGXwtS25J+ENjG2PF3QeLxmJhFux7XhwvqJ9fE
9VYC+SxcUXVvcV6ugtB++Ohlh2tmhXEWGDahko/w6cQowQsb7csN9ZGFxDGV
BZbYet1Q18zKOT+Rmfbnjg4Kb1jeyqchliNEPqfiSs6L9LRPARqqncSS+xpg
7ck8UHnKcIUqrIv264mUd42RJ+JrsLqXgSfa2xN0saZSjbm+N6HiwnLv1UEd
ZuMKvdDWYGHnpZkp+n68UEjSm2bfFRNm6aTeKPp14OW6ASvmrsMHLag35Dsi
yX/zv+mlnnQ=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {
     FormBox["\"time\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotLabel->FormBox[
   "\"Expectation value of X\[CircleTimes]Y\"", TraditionalForm],
  PlotRange->{{0, 4.}, {-0.999809704355885, 0.9999948595131594}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.63337233100599*^9, 3.633372430544815*^9, 3.63337256632266*^9, {
   3.633372604081015*^9, 3.633372720348208*^9}, 3.633372926974234*^9, 
   3.633888100001267*^9, 3.633891748204486*^9, 3.634584455874152*^9, 
   3.636818922941682*^9, 3.636820524244831*^9, 3.636820777554223*^9, 
   3.636989033113483*^9, 3.636989088888538*^9, 3.6369895388308764`*^9, 
   3.63698957067657*^9, 3.636992117280031*^9, 3.6369996618445997`*^9, 
   3.637000529717662*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation Output", "Section",
 CellChangeTimes->{{3.63388908556599*^9, 3.6338890958432083`*^9}, {
  3.6368151886725197`*^9, 3.636815191767315*^9}, {3.6368181804795437`*^9, 
  3.6368181858622923`*^9}, {3.6374465126454067`*^9, 3.6374465127728167`*^9}},
 CellTags->"SimulationOutput::section"],

Cell[TextData[{
 "The output of a simulation using ",
 StyleBox["PulseSim", "Input"],
 " is determined by the option ",
 StyleBox["SimulationOutput", "Input"],
 ". Usually the default value of ",
 StyleBox["Automatic", "Input"],
 " will be sufficient."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6368181332582197`*^9, 3.636818136304289*^9}, {
  3.636818392143011*^9, 3.636818478951355*^9}, {3.636818515272621*^9, 
  3.636818544503964*^9}, {3.636991696308408*^9, 3.6369916986987753`*^9}}],

Cell[TextData[{
 StyleBox["SimulationOutput", "Input"],
 " is a simulation option. Set this option to be one of, or a list of, the \
output types ",
 StyleBox["Unitaries", "Input"],
 ", ",
 StyleBox["States", "Input"],
 ", ",
 StyleBox["Functions", "Input"],
 ", ",
 StyleBox["Observables", "Input"],
 ", and ",
 StyleBox["Superoperators", "Input"],
 ". The output type  ",
 StyleBox["TimeVector", "Input"],
 " is always included. The default value is ",
 StyleBox["Automatic", "Input"],
 ", described below. The output of a simulation has the form ",
 StyleBox["simulationOutput={Type1", "Input"],
 "\[Rule]",
 StyleBox["data1,Type2", "Input"],
 "\[Rule]",
 StyleBox["data2,...}", "Input"],
 ". Data of a given type can generally be retrieved by using, for example, ",
 StyleBox["Type2[simulationOutput]", "Input"],
 " which returns ",
 StyleBox["data2", "Input"],
 ".\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["Automatic", "Input"],
 " output types returned by a given simulation are chosen using these rules:\n\
\[KeyBar] If no ",
 StyleBox["InitialState", "Input"],
 " or ",
 StyleBox["Functions", "Input"],
 " options are given, ",
 StyleBox["Unitaries", "Input"],
 " is the only output type\n\[KeyBar] If ",
 StyleBox["InitialState", "Input"],
 " is given as an option, but neither ",
 StyleBox["Observables", "Input"],
 " nor ",
 StyleBox["Functions", "Input"],
 " is, ",
 StyleBox["States", "Input"],
 " is the only output type",
 StyleBox["\n", "Input"],
 "\[KeyBar] If ",
 StyleBox["InitialState", "Input"],
 " is given as an option, and either of Observables or ",
 StyleBox["Functions", "Input"],
 " is also, ",
 StyleBox["Observables", "Input"],
 " or ",
 StyleBox["Functions", "Input"],
 " will be the output type\n\[KeyBar] If ",
 StyleBox["Unitaries", "Input"],
 " was supposed to be an automatic output type but the evolution was not pure \
(e.g. using ",
 StyleBox["LindbladForm", "Input"],
 ") ",
 StyleBox["Superoperators", "Input"],
 " will be the return type."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.633889840872843*^9, 3.633889993072253*^9}, {
   3.633890497773944*^9, 3.6338905129468412`*^9}, {3.636809990160427*^9, 
   3.636809991116722*^9}, {3.636810331643569*^9, 3.636810348111565*^9}, {
   3.636810739198202*^9, 3.636810840366452*^9}, {3.636816584237658*^9, 
   3.636816614270336*^9}, {3.636816690676446*^9, 3.6368170209071903`*^9}, {
   3.6368187472984324`*^9, 3.6368187957296677`*^9}, {3.636890986903913*^9, 
   3.63689099489459*^9}, 3.636891033140176*^9, 3.636993320975004*^9, 
   3.636993443071439*^9},
 CellTags->"SimulationOutput::usage"],

Cell[CellGroupData[{

Cell["TimeVector", "Subsection",
 CellChangeTimes->{{3.636810444344623*^9, 3.636810462753154*^9}, {
  3.636818203289257*^9, 3.636818205192032*^9}}],

Cell[TextData[{
 StyleBox["TimeVector[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["TimeVector", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{t1,t2,t3,...,tN}", "Input"],
 " where ",
 StyleBox["t1=0", "Input"],
 " and ",
 StyleBox["tN", "Input"],
 " is the total simulation time; the intermediate values are determined by \
the ",
 StyleBox["PollingInterval", "Input"],
 " option.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["TimeVector", "Input"],
 " is the only output type always returned by ",
 StyleBox["PulseSim", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
  3.6368106360343437`*^9, 3.636810709503875*^9}, {3.6368124932194977`*^9, 
  3.636812641993246*^9}, {3.6369917078043547`*^9, 3.636991714174667*^9}},
 CellTags->"TimeVector::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unitaries", "Subsection",
 CellChangeTimes->{{3.636810464770484*^9, 3.6368104656555634`*^9}, {
  3.636818208722436*^9, 3.6368182102974787`*^9}}],

Cell[TextData[{
 StyleBox["Unitaries[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["Unitaries", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{U1,U2,U3,...,UN}", "Input"],
 " where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " unitary matrix specifies to the total propagation up to the time specified \
by the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element of the ",
 StyleBox["TimeVector", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
  3.6368106360343437`*^9, 3.636810709503875*^9}, {3.636810904382935*^9, 
  3.636810920974127*^9}, {3.63681267033633*^9, 3.636812759111268*^9}, {
  3.6369917178532248`*^9, 3.6369917187396727`*^9}},
 CellTags->"Unitaries::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["States", "Subsection",
 CellChangeTimes->{{3.6368104700022707`*^9, 3.636810470620623*^9}, {
  3.636818363752165*^9, 3.636818364887681*^9}}],

Cell[TextData[{
 StyleBox["States[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["States", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ".These data will be of the form ",
 StyleBox["{\[Rho]1,\[Rho]2,\[Rho]3,...,\[Rho]N}", "Input"],
 " where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " density matrix specifies the quantum state at the time specified by the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element of the ",
 StyleBox["TimeVector", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
  3.6368106360343437`*^9, 3.636810709503875*^9}, {3.63681093672716*^9, 
  3.636810945891905*^9}, {3.6368127763565197`*^9, 3.6368128188405533`*^9}, {
  3.636991720820292*^9, 3.636991721829061*^9}},
 CellTags->"States::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.636810474424481*^9, 3.6368104751977787`*^9}, {
  3.6368183683440027`*^9, 3.636818369658342*^9}}],

Cell[TextData[{
 StyleBox["Functions", "Input"],
 " is a simulation option that specifies a list of functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["f", "1"], ",", 
     SubscriptBox["f", "2"], ",", "...", ",", 
     SubscriptBox["f", "K"]}], "}"}], TraditionalForm]]],
 " to evaluate during simulation. If an ",
 StyleBox["InitialState", "Input"],
 " has been set, the functions are evaluated on the density matrix at each ",
 StyleBox["PollingInterval", "Input"],
 ", otherwise, the functions are evaluated on the propagator (either unitary \
or superoperator) at each ",
 StyleBox["PollingInterval", "Input"],
 ". The default value is ",
 StyleBox["None", "Input"],
 ".",
 StyleBox["\n\nFunctions[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["Functions", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{fun1,fun2,..,funK}", "Input"],
 " where ",
 StyleBox["funk", "Input"],
 " is a list of the form ",
 StyleBox["funk={funk1,funk2,funk3,...,funkN}", "Input"],
 ", where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element corresponds to the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]]],
 " function\[CloseCurlyQuote]s value at the time specified by the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element of the ",
 StyleBox["TimeVector", "Input"],
 ".\n\n",
 StyleBox["Functions[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",TimeVector\[Rule]True]", "Input"],
 " returns the ",
 StyleBox["Functions", "Input"],
 " data including time information from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{fun1,fun2,..,funK}", "Input"],
 " where ",
 StyleBox["funk", "Input"],
 " is of the form ",
 StyleBox["funk={{t1,funk1},{t2,funk2},...,{tN,funkN}}", "Input"],
 ", a list of tuples of TimeVector values and function values.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["Functions[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " always outputs in a format that is accepted by ",
 StyleBox["ListPlot", "Input"],
 ", assuming the functions have plotable values (which need not be true)."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
   3.6368106360343437`*^9, 3.636810709503875*^9}, {3.636810959165307*^9, 
   3.636810966005823*^9}, {3.63681307020426*^9, 3.6368133684052343`*^9}, 
   3.636813413131289*^9, {3.636813783518887*^9, 3.636813860401071*^9}, 
   3.6368173377527018`*^9, {3.6368175072082167`*^9, 3.6368175295379543`*^9}, {
   3.636817944598916*^9, 3.6368180310436573`*^9}, {3.636821001512167*^9, 
   3.636821029529652*^9}, {3.636891150893757*^9, 3.636891165902966*^9}, {
   3.636991726433605*^9, 3.636991733209341*^9}},
 CellTags->"Functions::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observables", "Subsection",
 CellChangeTimes->{{3.6368104846102552`*^9, 3.63681048598748*^9}, {
  3.636818376201442*^9, 3.6368183779938917`*^9}}],

Cell[TextData[{
 StyleBox["Observables", "Input"],
 " is a simulation option that specifies a list of observables ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["A", "1"], ",", 
     SubscriptBox["A", "2"], ",", "...", ",", 
     SubscriptBox["A", "K"]}], "}"}], TraditionalForm]]],
 " (square matrices) to keep track of during simulation. Given an observable ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 ", the observable value is computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Tr", "(", 
    RowBox[{"\[Rho]", ".", "A"}], ")"}], TraditionalForm]]],
 " where \[Rho] is the density matrix at a given time. The default value is \
",
 StyleBox["None", "Input"],
 ".\n",
 StyleBox["\nObservables[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["Observables", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{obs1,obs2,..,obsK}", "Input"],
 " where ",
 StyleBox["obsk", "Input"],
 " is a list of the form ",
 StyleBox["obsk={obsk1,obsk2,obsk3,...,obskN}", "Input"],
 ", where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element corresponds to the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]]],
 " observable value at the time specified by the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element of the ",
 StyleBox["TimeVector", "Input"],
 ".\n\n",
 StyleBox["Observables[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",TimeVector\[Rule]True]", "Input"],
 " returns the ",
 StyleBox["Observables", "Input"],
 " data including time information from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{obs1,obs2,..,obsK}", "Input"],
 " where ",
 StyleBox["obsk", "Input"],
 " is of the form ",
 StyleBox["obsk={{t1,obsk1},{t2,obsk2},...,{tN,obskN}}", "Input"],
 ", a list of tuples of TimeVector values and observable values.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["Observables[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " always outputs in a format that is accepted by ",
 StyleBox["ListPlot", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
   3.6368106360343437`*^9, 3.636810709503875*^9}, 3.636813415589134*^9, {
   3.6368134503393793`*^9, 3.636813778940969*^9}, {3.636817320977504*^9, 
   3.636817445139929*^9}, {3.63682034356767*^9, 3.6368203441959677`*^9}, {
   3.636821020944718*^9, 3.636821024575725*^9}, {3.636991736940987*^9, 
   3.636991741059442*^9}},
 CellTags->"Observables::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Superoperators", "Subsection",
 CellChangeTimes->{{3.636810451377986*^9, 3.636810457186223*^9}, {
  3.636818382141609*^9, 3.636818383865299*^9}}],

Cell[TextData[{
 StyleBox["Superoperators[", "Input"],
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["Superopercators", "Input"],
 " data from ",
 StyleBox["simulationOutput", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", as output by ",
 StyleBox["PulseSim", "Input"],
 ". These data will be of the form ",
 StyleBox["{S1,S2,S3,...,SN}", "Input"],
 " where the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " superoperator specifies to the total super propagation up to the time \
specified by the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " element of the ",
 StyleBox["TimeVector", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636810513845413*^9, 3.636810572344235*^9}, {
  3.6368106360343437`*^9, 3.636810709503875*^9}, {3.636812828190827*^9, 
  3.63681284024478*^9}, {3.6368129902846813`*^9, 3.636813015476818*^9}, {
  3.636813047565032*^9, 3.6368130548522043`*^9}, {3.636991743625449*^9, 
  3.636991747315199*^9}},
 CellTags->"Superoperators::usage"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PulseSim", "Section",
 CellChangeTimes->{{3.63335202563237*^9, 3.6333520385490847`*^9}, {
  3.633372936258585*^9, 3.6333729402331753`*^9}, {3.634584380977016*^9, 
  3.6345843822918787`*^9}, {3.636891610934351*^9, 3.636891622576968*^9}, {
  3.636993735556673*^9, 3.636993736468484*^9}}],

Cell[TextData[{
 StyleBox["PulseSim[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " simulates the ",
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " under the Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", which can be time independent, a square hermitian matrix, or \
time dependent, a function with a single argument that returns a square \
hermitian matrix.",
  FontWeight->"Plain"],
 "\n\n",
 StyleBox["PulseSim[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",{", "Input"],
 StyleBox["p1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p3", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["}]", "Input"],
 " evaluates the pulse sequence ",
 StyleBox["{", "Input"],
 StyleBox["p1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p3", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",...}", "Input"],
 " by evaluting each ",
 StyleBox["PulseSim[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pi", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " and properly joining the results together. The pulse ",
 StyleBox["p1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is applied first, and then ",
 StyleBox["p2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", etc. The initial state for one pulse is taken to be the final state of \
the previous pulse, likewise propagators are properly sewn together, etc.\n\n",
 StyleBox["PulseSim[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["distribution", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " evaluates ",
 StyleBox["PulseSim[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " for each member of the ",
 StyleBox["distribution", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " and takes the expectation value over results. In the case of ",
 StyleBox["Unitaries", "Input"],
 ", the expectation value is taken in superoperator space. The ",
 StyleBox["distribution", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " should be formatted as ",
 StyleBox["{{prob1,prob2,...},{{symb1", "Input"],
 "\[Rule]",
 StyleBox["val11,symb2", "Input"],
 "\[Rule]",
 StyleBox["val12,...},{symb1", "Input"],
 "\[Rule]",
 StyleBox["val21,symb2", "Input"],
 "\[Rule]",
 StyleBox["val22,...},...}}", "Input"],
 ", the same as ",
 StyleBox["ParameterDistribution", "Input"],
 " from GRAPE`. These symbols can appear anywhere in the Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", the ",
 StyleBox["pulse", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", or the options.\n\n",
 StyleBox["PulseSim[LindbladForm[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",{", "Input"],
 StyleBox["L1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["L2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",...,", "Input"],
 StyleBox["LK", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["}],", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " simulates the pulse or pulse sequence (with or without a distribution) \
under the Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " with Lindblad dissipators ",
 StyleBox["L1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ",",
 StyleBox["L2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ",...,",
 StyleBox["LK", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". Any of the Lindblad dissipators can be time dependent or independent, as \
with the Hamiltonian.\n\n",
 StyleBox["Pulse Types",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nPulses can be any of the following. See corresponding predicate functions \
for more details.\n\[Bullet] ",
 StyleBox["Drift Pulse.",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 " Matched by predicate ",
 StyleBox["DriftPulseQ", "Input"],
 ", a number or symbol representing evolution time under the given \
Hamiltonian.\n\[Bullet] ",
 StyleBox["Shaped Pulse.",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 " Matched by predicate ",
 StyleBox["ShapedPulseQ", "Input"],
 ", a tuple of control amplitudes and control Hamiltonians; ",
 StyleBox["{amps,{Hctl1,Hctl2,...}", "Input"],
 ", where amps is a filename string or matrix of the form ",
 StyleBox["{{dt1,a11,a12,...},{dt2,a21,a22,...},{dt2,a21,a22,...},...}", 
  "Input"],
 ", where ",
 StyleBox["dti", "Input"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]]],
 " time step length and ",
 StyleBox["aik", "Input"],
 " is the amplitude of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]]],
 " control Hamiltonian at the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["i", "th"], TraditionalForm]]],
 " step.\n\[Bullet] ",
 StyleBox["Unitary Pulse.",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 " Matched by predicate ",
 StyleBox["UnitaryPulseQ", "Input"],
 ", a tuple ",
 StyleBox["{U,t}", "Input"],
 " where ",
 StyleBox["U", "Input"],
 " is a unitary to apply and ",
 StyleBox["t", "Input"],
 " is the time it is assigned to take.\n\[Bullet] ",
 StyleBox["Channel Pulse.",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 " Matched by predicate ",
 StyleBox["ChannelPulseQ", "Input"],
 ", a tuple ",
 StyleBox["{C,t}", "Input"],
 " where ",
 StyleBox["C", "Input"],
 " is a ",
 StyleBox["QuantumChannel", "Input"],
 " and ",
 StyleBox["t", "Input"],
 " is the time it is assigned to take.\n\n",
 StyleBox["Output",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThe output of a simulation has the form ",
 StyleBox["simulationOutput={Type1", "Input"],
 "\[Rule]",
 StyleBox["data1,Type2", "Input"],
 "\[Rule]",
 StyleBox["data2,...}", "Input"],
 ". where the types can be any of ",
 StyleBox["TimeVector", "Input"],
 ", ",
 StyleBox["Unitaries", "Input"],
 ", ",
 StyleBox["States", "Input"],
 ", ",
 StyleBox["Functions", "Input"],
 ", ",
 StyleBox["Observables", "Input"],
 ", and ",
 StyleBox["Superoperators", "Input"],
 ". Data of a given type can generally be retrieved by using, for example, ",
 StyleBox["Type2[simulationOutput]", "Input"],
 " which returns ",
 StyleBox["data2", "Input"],
 ". See the option ",
 StyleBox["SimulationOutput", "Input"],
 " and the documentation section ",
 StyleBox["Simulation Output",
  FontSlant->"Italic"],
 " for details.\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["StepSize", "Input"],
 ", ",
 StyleBox["PollingInterval", "Input"],
 ", ",
 StyleBox["InitialState", "Input"],
 ", ",
 StyleBox["Observables", "Input"],
 ", ",
 StyleBox["Functions", "Input"],
 ", ",
 StyleBox["SimulationOutput", "Input"],
 ", ",
 StyleBox["NumericEvaluation", "Input"],
 ", ",
 StyleBox["SequenceMode,ForceSuperoperator", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/WmDd4m48GvHyC3ilSDajOVnDYhelLhgEojmXMq4
A0S3JPftBNG6ftfbpYD0IShtUt4qYQGk7ZYFyoLoircvPNdKvHYsMt0fBKJD
pit6XAbSb86xBYJoft6WUBDtJAiha6b/jgfRWbXKCSC64PKvk7+AtLHJHzAt
72W1hUHytaNR2Xow7XiC8SETkL423+wZiO6vbRNiBtJXShaKgegl3XlSIJpF
iVULRMss9rUE0X9b9ruBaL3Wam8QvazaLxBEP/H2DQXR5/JsGkB0cPb7iSA6
qvbBZBA94dONGSDarqNhNoj2+fxuEYjWCf0Mpu10LJaD6LnpMzaDaKvN046D
6Btcr0+A6Fcs/BfYgPR1Y+7bIDrn8Lt7IPqS828wDQC9v6Yi
  "],
 CellTags->"PulseSim::usage"],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 CellChangeTimes->{{3.6333730907777243`*^9, 3.633373091656231*^9}, {
   3.633378288498308*^9, 3.633378289345796*^9}, 3.633888861496685*^9}],

Cell[CellGroupData[{

Cell["StepSize", "Subsubsection",
 CellChangeTimes->{{3.636815516356564*^9, 3.636815518068101*^9}}],

Cell[TextData[{
 StyleBox["StepSize", "Input"],
 " is a simulation option that chooses the time discretization when the \
internal Hamiltonian is time dependent. The default value is ",
 StyleBox["Automatic", "Input"],
 ", which maximizes the norm of the internal Hamiltonian over the simulation \
period and uses a tenth of the inverse."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636815597445808*^9, 3.6368156330111523`*^9}, {
  3.63681568032304*^9, 3.636815739779598*^9}},
 CellTags->"StepSize::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PollingInterval", "Subsubsection",
 CellChangeTimes->{{3.636815523181465*^9, 3.636815525587625*^9}}],

Cell[TextData[{
 StyleBox["PollingInterval", "Input"],
 " is a simulation option that specifies the time interval at which results \
of the simulation should be returned. The default value is ",
 StyleBox["Off", "Input"],
 ", where only values at time zero and final time returned. Each ouput type \
returns a value at each polling time. If used as an option with a pulse \
sequence, this option can be a list specifying a different polling interval \
for each pulse in the sequence. ",
 StyleBox["Fraction[", "Input"],
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " may also be used to  specify that the polling interval should be a \
fraction ",
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " of the total time ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ".\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThe ",
 StyleBox["PollingInterval", "Input"],
 " does not affect the resolution at which the system is simulated, it only \
affects the interval at which an output is demanded; ",
 StyleBox["PollingInterval", "Input"],
 " is completely unrelated to the ",
 StyleBox["StepSize", "Input"],
 " of a time dependent Hamiltonian, or the pulse widths of a ",
 StyleBox["ShapedPulseQ", "Input"],
 ". These times need not be even multiples of each other."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636815765530238*^9, 3.636815961478491*^9}, {
  3.636899477247518*^9, 3.636899511862937*^9}, {3.636991814901814*^9, 
  3.636991821576047*^9}, {3.7009347477720137`*^9, 3.700934748244566*^9}},
 CellTags->"PollingInterval::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["InitialState", "Subsubsection",
 CellChangeTimes->{{3.636815533264976*^9, 3.636815534566328*^9}}],

Cell[TextData[{
 StyleBox["InitialState", "Input"],
 " is a simulation option that specifies the initial density matrix of the \
simulation. The default value is ",
 StyleBox["None", "Input"],
 " where only propagators will be computed."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636815992760309*^9, 3.6368160502983217`*^9}},
 CellTags->"InitialState::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observables", "Subsubsection",
 CellChangeTimes->{{3.636815538676424*^9, 3.636815539988666*^9}}],

Cell[TextData[{
 StyleBox["Observables", "Input"],
 " is a simulation option that specifies a list of observables (square \
matrices) to keep track of during simulation. Given an observable ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 ", the observable value is computed as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Tr", "(", 
    RowBox[{"\[Rho]", ".", "A"}], ")"}], TraditionalForm]]],
 " where \[Rho] is the density matrix at a given time. The default value is \
",
 StyleBox["None", "Input"],
 ".\n\nSee the section ",
 ButtonBox["Observables",
  BaseStyle->"Hyperlink",
  ButtonData->"Observables::usage"],
 " for more information."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636816078719314*^9, 3.636816082783742*^9}, {
  3.636817457775495*^9, 3.6368175005844517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.636815544924485*^9, 3.6368155456995783`*^9}}],

Cell[TextData[{
 StyleBox["Functions", "Input"],
 " is a simulation option that specifies a list of functions to evaluate \
during simulation. If an ",
 StyleBox["InitialState", "Input"],
 " has been set, the functions are evaluated on the density matrix at each ",
 StyleBox["PollingInterval", "Input"],
 ", otherwise, the functions are evaluated on the propagator (either unitary \
or superoperator) at each ",
 StyleBox["PollingInterval", "Input"],
 ". The default value is ",
 StyleBox["None", "Input"],
 ".\n\nSee the section ",
 ButtonBox["Functions",
  BaseStyle->"Hyperlink",
  ButtonData->"Functions::usage"],
 " for more information."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636818055650929*^9, 3.636818086300993*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SimulationOutput", "Subsubsection",
 CellChangeTimes->{{3.63681554938872*^9, 3.636815551429922*^9}}],

Cell[TextData[{
 StyleBox["SimulationOutput", "Input"],
 " is a simulation option which should be one of, or a list of, the output \
types ",
 StyleBox["Unitaries", "Input"],
 ", ",
 StyleBox["States", "Input"],
 ", ",
 StyleBox["Functions", "Input"],
 ", ",
 StyleBox["Observable", "Input"],
 ", and ",
 StyleBox["Superoperators", "Input"],
 ". \n\nSee the full section ",
 ButtonBox["Simulation Output",
  BaseStyle->"Hyperlink",
  ButtonData->"SimulationOutput::section"],
 " for details."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636817078847381*^9, 3.636817094113203*^9}, {
   3.6368171301700993`*^9, 3.636817161132016*^9}, 3.6368181954886436`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["NumericEvaluation", "Subsubsection",
 CellChangeTimes->{{3.636815563845676*^9, 3.6368155659586363`*^9}}],

Cell[TextData[{
 StyleBox["NumericEvaluation", "Input"],
 " is a simulation option which, when set to ",
 StyleBox["True", "Input"],
 ", ",
 StyleBox["N", "Input"],
 " is explicitly called inside ",
 StyleBox["MatrixExp", "Input"],
 ", and if set to ",
 StyleBox["False", "Input"],
 ", ",
 StyleBox["N", "Input"],
 " is not explicitly called. The default value is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636816291127542*^9, 3.6368163465355883`*^9}, {
  3.636819051597025*^9, 3.636819051864758*^9}},
 CellTags->"NumericEvaluation::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SequenceMode", "Subsubsection",
 CellChangeTimes->{{3.636815558548745*^9, 3.636815560380784*^9}, {
  3.63698043311906*^9, 3.6369804339254093`*^9}}],

Cell[TextData[{
 StyleBox["SequenceMode", "Input"],
 " is a simulation option which when set to ",
 StyleBox["True", "Input"],
 ", ",
 StyleBox["PulseSim", "Input"],
 " returns the final state (or ",
 StyleBox["None", "Input"],
 ") in addition to the usual output. This option is used internally to \
implement pulse sequences and should not be ordinarily be used otherwise."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636816183255726*^9, 3.636816252463192*^9}, {
  3.636991848785548*^9, 3.636991862523716*^9}},
 CellTags->"SequenceMode::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ForceSuperoperator", "Subsubsection",
 CellChangeTimes->{{3.636987142053123*^9, 3.636987147092849*^9}}],

Cell[TextData[{
 StyleBox["ForceSuperoperator", "Input"],
 " is a simulation option which forces output propagators to be in \
superoperator space, even if unitary space is sufficient. In this case, ",
 StyleBox["Functions", "Input"],
 " which would normally act on unitaries instead act on superoperators. Note \
that all computations that can still be done in unitary space will still be \
done that way.\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nAlternatively, this can be acheived by listing ",
 StyleBox["Superoperators", "Input"],
 " in the ",
 StyleBox["SimulationOutput", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636987150741417*^9, 3.6369872447730513`*^9}, {
  3.637065627136381*^9, 3.6370656677072067`*^9}},
 CellTags->"ForceSuperoperator::usage"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples: Single Pulse", "Subsection",
 CellChangeTimes->{{3.6338891194940033`*^9, 3.63388913179596*^9}, {
  3.636816569978331*^9, 3.636816570802538*^9}, {3.636993653691897*^9, 
  3.636993670731946*^9}, {3.637065721095036*^9, 3.6370657211799707`*^9}}],

Cell[CellGroupData[{

Cell["Basic Simulation", "Subsubsection",
 CellChangeTimes->{{3.636818845032395*^9, 3.6368188472292347`*^9}, {
  3.636825288603307*^9, 3.636825290099942*^9}}],

Cell[TextData[{
 "To run a simulation, specify a Hamiltonian and a pulse. Interpretting the \
output is discussed in the section ",
 ButtonBox["Simulation Output",
  BaseStyle->"Hyperlink",
  ButtonData->"SimulationOutput::section"],
 "."
}], "Text",
 CellChangeTimes->{{3.6338896337057047`*^9, 3.633889694528308*^9}, {
  3.636809928605713*^9, 3.636809978517956*^9}, {3.636820212435267*^9, 
  3.636820241944441*^9}, {3.636825301205007*^9, 3.636825303809044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"Spin", "[", "X", "]"}], "[", 
    RowBox[{"1", "/", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PulseSim", "[", 
  RowBox[{"H", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6338894061309433`*^9, 3.63388941113804*^9}, {
  3.6368102275600567`*^9, 3.63681024580265*^9}, {3.636810281023687*^9, 
  3.636810311577586*^9}, {3.636991868930887*^9, 3.636991873741199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unitaries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.47942553860420295`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.633889411366568*^9, 3.633889427382352*^9}, {
   3.636810213115189*^9, 3.6368103119238243`*^9}, 3.636820787514168*^9, {
   3.63688854392456*^9, 3.636888563192541*^9}, 3.6369895884031067`*^9, 
   3.637000023045341*^9, 3.637000534350381*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numeric vs Symbolic Computation", "Subsubsection",
 CellChangeTimes->{{3.633889480756652*^9, 3.6338894865379753`*^9}}],

Cell[TextData[{
 "By default, the option ",
 StyleBox["NumericEvaluation", "Input"],
 " is ",
 StyleBox["True", "Input"],
 ":"
}], "Text",
 CellChangeTimes->{{3.633889488411524*^9, 3.633889510770359*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulseSim", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Spin", "[", "X", "]"}], "[", 
    RowBox[{"1", "/", "2"}], "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.636820272894618*^9, 3.636820285218384*^9}, {
  3.636991905711928*^9, 3.636991906689706*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unitaries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.47942553860420295`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.479425538604203`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.8775825618903728`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.63388951657432*^9, {3.636820276375613*^9, 3.636820294285201*^9}, 
   3.636820790328226*^9, 3.6369895921117487`*^9, 3.6370000245705423`*^9, 
   3.637000537263686*^9}]
}, Open  ]],

Cell[TextData[{
 "If set to ",
 StyleBox["False", "Input"],
 ", ",
 StyleBox["PulseSim", "Input"],
 " will atempt to solve the system symbolically. This will of course only \
succeed in a reasonable amount of time for simple systems."
}], "Text",
 CellChangeTimes->{{3.633889531291685*^9, 3.633889601770529*^9}, {
  3.6369920704067507`*^9, 3.636992071475563*^9}, {3.6370005377719173`*^9, 
  3.63700053872154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulseSim", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Spin", "[", "X", "]"}], "[", 
    RowBox[{"1", "/", "2"}], "]"}], ",", "t", ",", 
   RowBox[{"NumericEvaluation", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633889608816267*^9, 3.6338896179632998`*^9}, 
   3.633889726916603*^9, {3.6368202906028757`*^9, 3.636820291771359*^9}, {
   3.636991908660347*^9, 3.6369919096240187`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unitaries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           FractionBox["t", "2"], "]"}], ",", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["t", "2"], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"Sin", "[", 
            FractionBox["t", "2"], "]"}]}], ",", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "2"], "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "t"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.633889618233161*^9, 3.633889727320833*^9, 
  3.6368202599319677`*^9, 3.636820295671987*^9, 3.636820791217599*^9, 
  3.636989593876072*^9, 3.637000025649675*^9, 3.637000539726713*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Changing the Polling Interval", "Subsubsection",
 CellChangeTimes->{{3.6368203753761187`*^9, 3.636820380656114*^9}}],

Cell["\<\
Our total simulation time is 5, and the polling interval is 1. We therefore \
expect output sampled at the times 0,1,2,3,4, and 5.\
\>", "Text",
 CellChangeTimes->{{3.63682042231207*^9, 3.63682044980892*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputdata", "=", 
  RowBox[{"PulseSim", "[", 
   RowBox[{
    RowBox[{"TP", "[", "X", "]"}], ",", "5", ",", 
    RowBox[{"PollingInterval", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6368203926021843`*^9, 3.6368204085776587`*^9}, {
  3.636991918223475*^9, 3.6369919191686783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unitaries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.5403023058681397`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.8414709848078965`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.8414709848078965`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.5403023058681398`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.41614683654714246`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.9092974268256817`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.9092974268256817`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{
           RowBox[{"-", "0.4161468365471423`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.9899924966004454`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.14112000805986724`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.14112000805986724`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{
           RowBox[{"-", "0.9899924966004454`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.6536436208636118`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.7568024953079282`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.7568024953079282`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{
           RowBox[{"-", "0.6536436208636119`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.2836621854632263`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.9589242746631383`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.9589242746631383`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.28366218546322614`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.636820409109851*^9, 3.636820794203394*^9, 
  3.636989597028141*^9, 3.6370000275070553`*^9, 3.637000542304997*^9, 
  3.7009348368862247`*^9}]
}, Open  ]],

Cell[TextData[{
 "We can also use the notation ",
 StyleBox["Fraction[1/2]", "Input"],
 " to specify that the ",
 StyleBox["PollingInterval", "Input"],
 " be 1/2 of the total time."
}], "Text",
 CellChangeTimes->{{3.700934865920116*^9, 3.7009348909125757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputdata", "=", 
  RowBox[{"PulseSim", "[", 
   RowBox[{
    RowBox[{"TP", "[", "X", "]"}], ",", "5", ",", 
    RowBox[{"PollingInterval", "\[Rule]", 
     RowBox[{"Fraction", "[", 
      RowBox[{"1", "/", "2"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70093484630127*^9, 3.7009348552717667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Unitaries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.8011436155469337`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.5984721441039564`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.5984721441039564`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{
           RowBox[{"-", "0.8011436155469336`"}], "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.2836621854632263`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.9589242746631383`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.9589242746631383`", " ", "\[ImaginaryI]"}]}], ",", 
          RowBox[{"0.2836621854632261`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["5", "2"], ",", "5"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.700934857137642*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tracking Observables", "Subsubsection",
 CellChangeTimes->{{3.6338931598032103`*^9, 3.6338931610215883`*^9}, {
  3.636823002637645*^9, 3.6368230036710567`*^9}}],

Cell["\<\
We compute the observables Y and Z as we rotate about the X axis, starting \
with the initial state |0\[RightAngleBracket]\[LeftAngleBracket]0|. The \
observables are computed every 0.1 time units.\
\>", "Text",
 CellChangeTimes->{{3.636820822404644*^9, 3.636820921478075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputdata", "=", 
  RowBox[{"PulseSim", "[", 
   RowBox[{
    RowBox[{"TP", "[", "X", "]"}], ",", "1", ",", 
    RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
    RowBox[{"InitialState", "\[Rule]", 
     RowBox[{"TP", "[", "U", "]"}]}], ",", 
    RowBox[{"Observables", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TP", "[", "Y", "]"}], ",", 
       RowBox[{"TP", "[", "Z", "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.633893553481814*^9, 3.633893576231687*^9}, {
  3.633893649145504*^9, 3.633893670384593*^9}, {3.633893780320011*^9, 
  3.6338937893201838`*^9}, {3.6368204695263033`*^9, 3.63682048953034*^9}, {
  3.636991922834305*^9, 3.636991924062903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "0.19866933079506127`"}], ",", 
        RowBox[{"-", "0.38941834230865063`"}], ",", 
        RowBox[{"-", "0.5646424733950356`"}], ",", 
        RowBox[{"-", "0.7173560908995232`"}], ",", 
        RowBox[{"-", "0.8414709848078972`"}], ",", 
        RowBox[{"-", "0.9320390859672272`"}], ",", 
        RowBox[{"-", "0.9854497299884611`"}], ",", 
        RowBox[{"-", "0.9995736030415062`"}], ",", 
        RowBox[{"-", "0.9738476308781965`"}], ",", 
        RowBox[{"-", "0.9092974268256828`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0.9800665778412417`", ",", "0.9210609940028853`", ",", 
        "0.8253356149096787`", ",", "0.6967067093471658`", ",", 
        "0.54030230586814`", ",", "0.3623577544766737`", ",", 
        "0.16996714290024084`", ",", 
        RowBox[{"-", "0.029199522301289027`"}], ",", 
        RowBox[{"-", "0.2272020946930875`"}], ",", 
        RowBox[{"-", "0.4161468365471432`"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["1", "10"], ",", 
      FractionBox["1", "5"], ",", 
      FractionBox["3", "10"], ",", 
      FractionBox["2", "5"], ",", 
      FractionBox["1", "2"], ",", 
      FractionBox["3", "5"], ",", 
      FractionBox["7", "10"], ",", 
      FractionBox["4", "5"], ",", 
      FractionBox["9", "10"], ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6338935671083717`*^9, {3.63389364971294*^9, 3.633893670841331*^9}, {
   3.6338937812717257`*^9, 3.633893789660407*^9}, {3.636820477442153*^9, 
   3.636820509476993*^9}, 3.63682079693011*^9, 3.636989604712658*^9, 
   3.637000029447316*^9, 3.63700054509533*^9, 3.637010518580299*^9, 
   3.637010665078046*^9}]
}, Open  ]],

Cell[TextData[{
 "Data can be collected with ",
 StyleBox["Observables", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.633893680927047*^9, 3.633893732711205*^9}, {
  3.633893809568169*^9, 3.633893825590701*^9}, {3.6368209302197943`*^9, 
  3.636820936893948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Observables", "[", "outputdata", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Observables", "[", "outputdata", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.633893713436782*^9, 3.633893725802437*^9}, {
  3.63682094661386*^9, 3.636820956596013*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.19866933079506127`"}], ",", 
     RowBox[{"-", "0.38941834230865063`"}], ",", 
     RowBox[{"-", "0.5646424733950356`"}], ",", 
     RowBox[{"-", "0.7173560908995232`"}], ",", 
     RowBox[{"-", "0.8414709848078972`"}], ",", 
     RowBox[{"-", "0.9320390859672272`"}], ",", 
     RowBox[{"-", "0.9854497299884611`"}], ",", 
     RowBox[{"-", "0.9995736030415062`"}], ",", 
     RowBox[{"-", "0.9738476308781965`"}], ",", 
     RowBox[{"-", "0.9092974268256828`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0.9800665778412417`", ",", "0.9210609940028853`", ",", 
     "0.8253356149096787`", ",", "0.6967067093471658`", ",", 
     "0.54030230586814`", ",", "0.3623577544766737`", ",", 
     "0.16996714290024084`", ",", 
     RowBox[{"-", "0.029199522301289027`"}], ",", 
     RowBox[{"-", "0.2272020946930875`"}], ",", 
     RowBox[{"-", "0.4161468365471432`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.633893723188435*^9, 3.633893726025558*^9}, 
   3.6338937950371017`*^9, {3.63682093744914*^9, 3.6368209575644197`*^9}, 
   3.6369896070595713`*^9, 3.637000031228497*^9, 3.637000546211267*^9, 
   3.637010523658375*^9, 3.6370106676259212`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., -0.19866933079506127`}, {
      3., -0.38941834230865063`}, {4., -0.5646424733950356}, {
      5., -0.7173560908995232}, {6., -0.8414709848078972}, {
      7., -0.9320390859672272}, {8., -0.9854497299884611}, {
      9., -0.9995736030415062}, {10., -0.9738476308781965}, {
      11., -0.9092974268256828}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 0.9800665778412417}, {3., 0.9210609940028853}, {
      4., 0.8253356149096787}, {5., 0.6967067093471658}, {6., 
      0.54030230586814}, {7., 0.3623577544766737}, {8., 
      0.16996714290024084`}, {9., -0.029199522301289027`}, {
      10., -0.2272020946930875}, {11., -0.4161468365471432}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 11.}, {-0.9995736030415062, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.633893723188435*^9, 3.633893726025558*^9}, 
   3.6338937950371017`*^9, {3.63682093744914*^9, 3.6368209575644197`*^9}, 
   3.6369896070595713`*^9, 3.637000031228497*^9, 3.637000546211267*^9, 
   3.637010523658375*^9, 3.6370106677136517`*^9}]
}, Open  ]],

Cell[TextData[{
 "Note that the ",
 StyleBox["TimeVector", "Input"],
 " option adds corresponding times to the data:"
}], "Text",
 CellChangeTimes->{{3.633893737150906*^9, 3.633893751879657*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Observables", "[", 
  RowBox[{"outputdata", ",", 
   RowBox[{"TimeVector", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Observables", "[", 
   RowBox[{"outputdata", ",", 
    RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.633893761889097*^9, 3.633893764233719*^9}, {
  3.636820966458406*^9, 3.6368209745300426`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "10"], ",", 
       RowBox[{"-", "0.19866933079506127`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "5"], ",", 
       RowBox[{"-", "0.38941834230865063`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "10"], ",", 
       RowBox[{"-", "0.5646424733950356`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "5"], ",", 
       RowBox[{"-", "0.7173560908995232`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{"-", "0.8414709848078972`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "5"], ",", 
       RowBox[{"-", "0.9320390859672272`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "10"], ",", 
       RowBox[{"-", "0.9854497299884611`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "5"], ",", 
       RowBox[{"-", "0.9995736030415062`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "10"], ",", 
       RowBox[{"-", "0.9738476308781965`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "0.9092974268256828`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "10"], ",", "0.9800665778412417`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "5"], ",", "0.9210609940028853`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "10"], ",", "0.8253356149096787`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "5"], ",", "0.6967067093471658`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", "0.54030230586814`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "5"], ",", "0.3623577544766737`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "10"], ",", "0.16996714290024084`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["4", "5"], ",", 
       RowBox[{"-", "0.029199522301289027`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "10"], ",", 
       RowBox[{"-", "0.2272020946930875`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "0.4161468365471432`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.633893764915202*^9, 3.633893799912567*^9, {3.636820964410894*^9, 
   3.636820974779708*^9}, 3.636989611324643*^9, 3.63700003291858*^9, 
   3.6370005487081223`*^9, 3.637010669801868*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 0.}, {0.1, -0.19866933079506127`}, {
      0.2, -0.38941834230865063`}, {0.3, -0.5646424733950356}, {
      0.4, -0.7173560908995232}, {0.5, -0.8414709848078972}, {
      0.6, -0.9320390859672272}, {0.7, -0.9854497299884611}, {
      0.8, -0.9995736030415062}, {0.9, -0.9738476308781965}, {
      1., -0.9092974268256828}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 1.}, {0.1, 0.9800665778412417}, {0.2, 
      0.9210609940028853}, {0.3, 0.8253356149096787}, {0.4, 
      0.6967067093471658}, {0.5, 0.54030230586814}, {0.6, 
      0.3623577544766737}, {0.7, 0.16996714290024084`}, {
      0.8, -0.029199522301289027`}, {0.9, -0.2272020946930875}, {
      1., -0.4161468365471432}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1.}, {-0.9995736030415062, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.633893764915202*^9, 3.633893799912567*^9, {3.636820964410894*^9, 
   3.636820974779708*^9}, 3.636989611324643*^9, 3.63700003291858*^9, 
   3.6370005487081223`*^9, 3.6370106699316196`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tracking Arbitrary Functions", "Subsubsection",
 CellChangeTimes->{{3.633893153708068*^9, 3.633893154628105*^9}, {
  3.636823006293232*^9, 3.636823019531826*^9}}],

Cell["\<\
We evolve the initial state |0\[RightAngleBracket]\[LeftAngleBracket]0|\
\[CircleTimes]\[DoubleStruckOne]/2 under the Hamiltonian X\[CircleTimes]X+Y\
\[CircleTimes]Y+\[DoubleStruckOne]\[CircleTimes]X for 5 time units. We \
compute three functions; one that traces out the first subsystem, one that \
traces out the second subsystem, and one that takes the purity of the second \
subsystem.\
\>", "Text",
 CellChangeTimes->{{3.636821353832738*^9, 3.6368214357615*^9}, {
  3.636821569592725*^9, 3.636821570193138*^9}, {3.6368216188729773`*^9, 
  3.6368216399287233`*^9}, {3.636821822540325*^9, 3.6368218420791273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"TP", "[", 
      RowBox[{"XX", "+", "YY", "+", "IX"}], "]"}], ",", "5", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.05"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{
       RowBox[{"TP", "[", "UI", "]"}], "/", "2"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Functions", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"PartialTr", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PartialTr", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Rho]", "=", 
             RowBox[{"PartialTr", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2"}], "}"}], ",", 
               RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Re", "@", 
            RowBox[{"Tr", "[", 
             RowBox[{"\[Rho]", ".", "\[Rho]"}], "]"}]}]}], "]"}], "&"}]}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.633893553481814*^9, 3.633893576231687*^9}, {
   3.633893649145504*^9, 3.633893670384593*^9}, {3.633893780320011*^9, 
   3.6338937893201838`*^9}, {3.633894134832122*^9, 3.633894136115155*^9}, {
   3.633894175094647*^9, 3.633894241385557*^9}, 3.63389427786481*^9, {
   3.636821089099022*^9, 3.636821132318832*^9}, {3.636821163558351*^9, 
   3.636821231831806*^9}, {3.636821296190008*^9, 3.6368213260014343`*^9}, {
   3.636821538141047*^9, 3.636821538282518*^9}, {3.6368216505397253`*^9, 
   3.636821665150773*^9}, {3.636821735440662*^9, 3.6368217364469147`*^9}, {
   3.6369919271448193`*^9, 3.636991928120091*^9}}],

Cell[TextData[{
 "Output ",
 StyleBox["Functions", "Input"],
 " data can be collected with ",
 StyleBox["Functions", "Input"],
 ". This consists of three lists, one list for each function."
}], "Text",
 CellChangeTimes->{{3.633893680927047*^9, 3.633893732711205*^9}, {
  3.633893809568169*^9, 3.633893825590701*^9}, {3.6338943077082653`*^9, 
  3.633894311367701*^9}, {3.63682147347399*^9, 3.636821486185446*^9}, {
  3.636821675512285*^9, 3.636821677127432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Functions", "[", "outputdata", "]"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{{3.633893713436782*^9, 3.633893725802437*^9}, {
  3.633894304202394*^9, 3.633894305050096*^9}, {3.636821462367774*^9, 
  3.636821464103532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "101"}], "}"}]], "Output",
 CellChangeTimes->{{3.633893723188435*^9, 3.633893726025558*^9}, 
   3.6338937950371017`*^9, {3.633894301967884*^9, 3.633894321725281*^9}, {
   3.636821440998497*^9, 3.636821464378181*^9}, 3.63682167872941*^9, 
   3.6368217396088047`*^9, 3.636989618727933*^9, 3.637000036792081*^9, 
   3.6370005538481083`*^9, {3.637061901640232*^9, 3.637061929441401*^9}, 
   3.637062308533943*^9}]
}, Open  ]],

Cell["\<\
Plot the purity of the second subsystem as a function of time:\
\>", "Text",
 CellChangeTimes->{{3.6368214980964603`*^9, 3.636821502704975*^9}, {
  3.636821560713106*^9, 3.636821563526322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Last", "@", 
    RowBox[{"Functions", "[", 
     RowBox[{"outputdata", ",", 
      RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.636821504290011*^9, 3.636821552120124*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV03tM21UUB/BSoC1Q6Ivxx7ZkwKYwQOQxHtPgOSovUZkZYiStU5k0iJOH
AbYsOKqSlAEugw0GdQ41MxSiBBUmMB/MIWNMBGRTICUU2vJqRxkC4z1hu4fE
mzTNL797P/fc8/1dj+SMwylcDoeTsvnb+v//0IOmamvUgotqUZq6/dwCGphy
V/D0EPxwXAc/f/9h7h56fxP0d454bij08MjphVeFXSMBt2l+P3QXrYTvKB8F
5cPxN/TPR9wv1Y6x9YNQ4rB/0MPZCN1/bA0dpP8+KB9oMgHVVdY7xE0vnmDz
RyGvuGbNLWOK+QbI6j8lO/uMma03wqFnBUOVAxa23zgcjLh4U+Axw7xJyExL
rOixtTJvCvgVV9pycq3MM4Na0/q14ISVeRZodl/hfyeyMm8GlKm3W7PiyJsF
zTV1pzb8Lps/C8NBlysMZjPz70G5f8x4Ws40Wz8HwrCl+jrTJNvvX9BlXXFI
fGmCefMQnBKaPdlsYt48XPL+/tzjTxuZtwAqyBCKDWPMW4TqPdVzHm2jzLsP
/P6nMnpGKI8lWDhyICr3RT3zluCJWxsjkTzKbxm+iv3o7mUnPfNWoMFJLmyK
p/xWYfBdxTv+V8lbg7frlN2dYaPMW4PP1l87PVg7yrx16G7QKaqWKe8N8FFn
i+Pcxpj3ABIeS55Sbr5nHx7u/nGl0U9L8zm4syi/RRRMPgc7RFa/nT9QPTaY
YnSIqIyi+m1w2cv3z14e1cfFOBv+0TYhnYeLpgehxr5kOj8XJ6LKHFP41C9b
vJGkzLhopvpt0fN4l33+whjz7FB57OWTAjsj8+zwwguTH6bO0/dqh+UdBdV5
NSbm2WN8XM50CW+cefZoZ5N5QrX5/MjjoXbBp1dSa2IeDxvfyL03u0oeDzN7
s1T73IzM42NxuGl3rKuBeXw8f/1z/TFXqk+Aa9oChSKI+ifA0na1318FdF4B
FnZ3zi7tov45YK7VFOBlQ/1zwI9j1s+VhVH/HHH1wJcdn/xM/XPEWuiLLvmU
8nDE2Omf9idVU55O6C7v85+boPqcUB4s25WdRPdXiMLDw51nxsaZJ8RfU1rq
g9InmSdE9TWXL3QGus/O2OMrDezxpvvjjBWROc/He1qY54Ib8ktmbTPdbxc0
G7N9NUMW5rmgtoLbIFdZmCdCg6uX5eq35IlQffJ8a80H08wTY1rYK/8MTdF9
FKMTv8DSHjLBfDGudSiKRHkmtl6MM4tnYvP1BrafGE/rBAU7VJSHBJvvzP+S
+D59XxIMV7cffaue+inBJkNCUUQE9V+Cje/F3Ip2pLwkWPjkmwkhHMpDit+E
PKfkO1B+UtQclFfdkJInRdNe5WisjDwpCrPBZ++2J8W9uvTCym1PhkP7Si4c
55Mnw7nXB07lBJMnw8TQ1EPtleTJUIi/BXZFU/4yLC0KbOmOpPO6Ykm4d13A
WQP8BzrxxZk=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.47582987195542825`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Purity\"", TraditionalForm],
  PlotRange->{{0, 5.}, {0.5, 0.9834025608914353}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.63682155247563*^9, 3.6368216805015593`*^9, 
  3.636821740433282*^9, 3.636989619915955*^9, 3.637000039837134*^9, 
  3.637000554836499*^9, 3.637061931843339*^9, 3.6370623098221607`*^9}]
}, Open  ]],

Cell["Plot the Bloch ball trajectories of the two subsystems.", "Text",
 CellChangeTimes->{{3.6368218646051807`*^9, 3.636821883303013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Functions", "[", "outputdata", "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}], ",", 
   RowBox[{"BlochPlotLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Second Subsystem\>\"", ",", "\"\<First Subsystem\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6368215774788218`*^9, 3.636821604079019*^9}, {
  3.636821687069809*^9, 3.636821704351878*^9}, {3.636821747510378*^9, 
  3.6368217976280527`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{{
       Opacity[0.2], 
       SphereBox[{0, 0, 0}, 1], 
       Opacity[0.5], 
       GrayLevel[0], 
       Thickness[Large], 
       Line3DBox[{{0, 1, 0}, {0, -1, 0}}], 
       Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
       Line3DBox[{{1, 0, 0}, {-1, 0, 0}}], 
       Opacity[1], 
       GrayLevel[0], 
       Thickness[Large], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|+Z\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {0, 0, 1.15}], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|-Z\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {0, 0, -1.15}], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|+X\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {1.15, 0, 0}], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|-X\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {-1.15, 0, 0}], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|+Y\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {0, 1.15, 0}], 
       Text3DBox[
        FormBox[
         StyleBox[
         "\"|-Y\[RightAngleBracket]\"", FontSize -> 14, FontWeight -> Bold, 
          FontColor -> GrayLevel[0.3], StripOnInput -> False], 
         TraditionalForm], {0, -1.15, 0}]}, {{{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2], 
         Dashing[{Small, Small}], 
         Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
          "]]}}}, {{{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2], 
         Dashing[{Small, Small}], 
         Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
          "]]}}}, {{{}, {}, {
        
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2], 
         Dashing[{Small, Small}], 
         Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
          "]]}}}}, 
     GraphicsComplex3DBox[CompressedData["
1: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
      "], {{{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2], 
         Thickness[0.01], 
         Line3DBox[CompressedData["
1:eJwl13fAlnMbxvGnXRqaGpKWaNAuLRSiUFRo71Lae2iKNFW2KCJZ7aGBtPfe
u2jSVqL9fs63P76dx3Gc13Pf1/Vb112e5p1qdUyUkJAwKElCQtT3EickbCDq
8kXVompbWXv1J/3U6tP8d3rN+RN0bgzh70JJ2VL+Ot0Yx/lxECW875+NsmKY
z7dAKfjIhA/0NsmLYwHfEqWRFMnwof5mvRJYyLdCGSyT35A1wYm4fyTHR/It
cT9YxLdGWSyX35Q1xcm4J1yTlcLHslxIIfuY30qXivt1g6/zP8vT0FXpVur3
es+og/ne6mv6J+k8aMS/pV9J7cWnpu+jX6UX0Y+6dgV9i26GUzEGuC4rjU9k
9yOl7BN+G10av/BtUA4r5bdjHvBnjBFS4VP5dlkZ/Mq3RXmsSnxnIlrI/4ox
wg2+DD6V5Y45lI3nd9BlYz7cczt+sTwt/Qz9g/xZ+k26T4yN3ik6Lxrzb+s/
pvbmu6ppYlzVujGGdAXXr6YToSV/OsYbN/myGC/Lg9Syz/idMV74jW+Hilgj
TxzzID8TYxRzg89lu2TlsIRvj0pYK0+C1vKzMUbxPJgg2y0rj6V8B/wpy4eh
srTxLLJ1fFK8xp/jM3meF/iZ/Hj+Fv0oPuPzooB+U345/TI9hk7nuonqHlk9
WYVYz2p7WQd1mX469dm4T/VH/WrqEL6j3l9qfrwjT4fHZev5ZGjDn4/xwt34
QrZXVhHL+U54Aunxpd6+WJtYwXdGZWTAJL398cxYyXdBFWyQJ0db+YUYZ2TE
V7IDcS9YxXfFadkDGCa7O9axZ6jH/0I/qb+RToH6sXZiXaud4hnVi/qZ1Rox
1uos/efVofwEvdtqOXwuz4cH9ZrxK+hM+l/TB+knsJrvhjOyAhguS4+nZJv4
lGgX+8RndKb/lmeha9Kz5S/Q79ATE+4cUuXpZuoEvSpqP76Hmp9/SG3Or6Qz
u3wyfYiujDV8d5yVPYgRsgx4WraZTxXnK38p5i3uAd/IDsf3YC3fA1WxRX5X
rBf55ZhL3IMpsiMxvljH98Q52UMYKcsYZ5Vsa5xFMdaxv91zF/qf+Az6xVhH
6hy9Guow/g11kn6iWK98c3VifI/aP+aZLki3oFfRWV37Lf17jDPW871wXlYQ
o2Ke4vyQbePToBN/JdYSsuE72R8xPtjA90Y1ZMf3ekflVbGR74Pq2C5Pi87y
f2MdIAd+kB2LZ8cmvi8uyAphdMwVnpPtiP2JLnHWeJ6u9H/yrPRL9Fx5TXo4
3U+dHEepWjHOU/WLeF51AN9TLcAXUlvyq+l7Xf8jfTyeHZv5N3BRVhjvyrLE
Wpft5O+Os5O/GmsBOTFVdiLOBGyJfe7zq8mm8v34v+kiGBP7Ua8PfU+c63R9
+le6Fj2KHhjnl7/ZRadHA75bnJtRY07UazEfai1+nt6U2AZ8Jf7L2HvxTpNN
40/S1bGV748ayIXpeqdijLGNH4Ca2C3PgO7y67FmcD9myP6MccB2fiBexB55
xthv8huxRpAbM2V/xV7FDn4QLskexthYj/Eucc8N+MX0S/p76UwxT3Hu63Wn
b8b6omvHGRe/dfReVEfw/eNdr59UfYyfFGuTHhj7iy5Mt6LXxHe5bhZ9OvYQ
dvKDUQv75JnRS34r1ibyYrbsTKwv7OLfRG3sl2dBb/ntWD/Ihzmys3F/2M0P
QR0ciPlGn0QJ//8xN1XJj7myc/Hs2MO/hcuyRzBOli3eWZ6hIf9bvK/0D9JZ
0ZevoNcj9lb8RuRzqHX419X58bnqSH6AOs3fJlMf57+KswFF+Nb8WvoB/Xn0
+ViL2Mu/jVdwSJ4tzhx5YkyXFcBPsgt8bezjh+IfWVG8J8uOV2WH+eyxP/kk
mCFL7rufkH0d+zHWrGw+f5Gug5L6Hfj98vR0dXparOX4/RbPH+8AvSt0MTTh
34/3i9qX76bmiHeR2ohfQtd1/RE6R6wdPilmylK4prJscqyZeGfIFsR7J8Yc
B/hhqIeCWKh3Sf4KDvLDUR+FsEjvcjw3DvEj0ACF8XOc6XEfOMyPREP8Lr83
5kmeDLNkRfCL7ApfD0f4DO7zOdl0fhT/L10cH8Q5hvz6jfmlMSf0aLqR6/5Q
c6Jh7A29imrPOFPV5PG36sv8Anq261PyVfhvYo3gYdmv/L90ffzOj8Z/shL4
UJYTjWVH+fswiE8Ruc96hV9Iz9FPxT/Jt1SnxPtCHRR7T304vit+r/Pt1HUx
xurY2BP+dnGc/bIGKCXvGO8jeUb6eXpGnGfxOzfObflVtSSayj7Sq6y+EWeb
el+sebUJvyzWHP1urCN/d0zNhcHylJgrK4rfZFf5hjjKj0FTFENxLNG/ptcI
x/ixaIbj8vvxpjwV5snu8n1Pyb7lHwn4Nvz6WDv0uMR3/u9XwrX/A2aupYk=

          "], VertexColors -> Automatic]}}}, VertexColors -> CompressedData["
1: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
8Db3RzO74V/yIs3VkOyl8JrVIXo8GMUPTOZt4uDY3PiONsJpDU56stFyLhak
nVJ3sq3AbeVeh64FeVA7XWX9gvTxpL39nPO7qrD6rLGMLr0EN/nyU5JoXOzj
qjmtXd+IId/O5VQSyevny8KjTEluRqkfU7Nm4tLi19/9fZqw8z/VlvQQ0vuO
jezR72RhuJY5kPGtFbtplZq7nlLYM5neYObaian08bVm9u1IM+z1+UN6/TPp
TqX0O2y4CIiXyf1kwWX7tZceyjwUn2HPty/rhv3wyM9UOTau+04UDpG+z+Ra
XOEP4eBhXYZPCV8XZGUtTjF9iOc365xaE1iLLMbW1AutTyBzIb9CpJqL4qIN
vqGJjVB0E/a0QTXkU7yuiDG5OEv/T9vZkQ6+6c3FwRI15L1NPmr4dz9AS42r
H2xGfF6MmFR5Hdqv2HVs2EhhMUOGdVa6Db5Cv4T5lenwlkj5mhhB4e+foIdj
/B3Qj9r6Z74DA/cv7GQwainUR/69w7jTCdO3jpWD7HbsPv66ZdqAh4LcwQKh
PRyoHF58/RHZy+q72w48DOThjPGD75FfesAUPlngRbz1steaGqXqUbzySF3m
K1WMgsMdZj1v/FDY8PdszGLiVxEr9FM7yiG4L+Fo24d7mFMYekNpOxe5t851
pjdUIrnwy1YdrRJosEenQvy4KOqyF/S9U4tZxRV8o1I0HP25buWBVxS4t1QO
t4SwIXq/LNmsm4WaCK+oJGMedJb0m7934OCoJE2k/BUb5mr5sk5PuThgWSzc
tK8RY1IMuvinKsyZ89qlvJkLE0+fuRvW0iFy4KGDX1c17jc1/vScJD4Wf/Xg
nIxm6B3UEEv2roNZYbL7FWUK1uN2P4cHGLAssD56/F0jDseWmh/dQcFBVT5A
5SITHIuIsomsJpJzS1/qhFHwfKa7Sf8tC7XRiQo8KQbERjbOX1lJ4dBZx96K
kE586/Xflnm1HfSagUY9NR5wdUi+jt4NjcBbmlt02dipvazeahkXp2Yc4hNE
BS62t/7u7M6FvG+ZKmXIxa24ODcz9SpsHtaUP5dfAtZqnU+pJhTuzNxkfdmc
icrCacdplybEaIaoLyBz+2PO0ll9t4kXHU4x+T3BwrT/3Rx+Mp/m1p2mDH8O
3ATgsGyKjf1mV7kb27hIDi10qD5AB8tbau4yoRoEOYXVcf/lxRt16c2dzXis
XmrEKqjDw8OnJqBO9kK7edv7RW3YVt9rUbKKjuKRnZ9oVygERAq7JP5l4duX
XdqZVgwkWqjbryZzFeNoF1RqxsHUnEfpvxvZCJgWXnZegguphq1ZlgIVMBQt
2cA6lguJ2FvDQsR/siT4Mr/+rsTJRnF1zrkSCHEHFbYFcGFpFnQj+3kt3l8V
KDeyosFXouue+giFcx3ZDyxvsHF89r1zWSNkv0Pmpew25cFAq6f5kBsHozH+
WtRHNs7uyVfe/pzMm8ED1pBrI9amRt82ECfzcO9xrncrF+O/RR9569Lhepx6
aPapGglLcgaV/91H6RzVWVXejCnDLwUaMXUI4g9Rc1KlILJYfMW7Hwy0aCX3
CM+iQzag9M0vwknf7LXtY+S9H67xKGnQZoBn1fNlinCSJrY15tCNTpgXvLgT
ntuOBJvvK4LMKMxapnKqz5mJnUH1V3+ENWFgiaWCgwoPmgyl2vUV3bgnLu3Y
ocyGlJduWcUOHiz/a6PrXOHgRxBflJlgFyzcht889eXiBC1QOz2yFq83cQaX
cp+APzBWc8iQh/oPdr0OBzhwLPEKcutio4KpN1AQxMNtmW1nYn/1QMsw3pWK
6UaLdIJ8ZdUoKg/JLeWKFqPib8vKygV++DsvX02c7Okln2S5DWm1ENKW239d
lIaLCvlvxkhvmpFwbjnfrkbEv/iuSBuugmK9wfQ70jsieHk+tn5MeEgmnSy7
1YR5PX6rmolvB/apWxyp74boyNSMDG02XvD22/QTH05Q23fqkFoFJlYZmXbS
cnEnqCjVncx/qsanrQ/XVqE+uShfMLUEwvc5C5KI1yX+3PLRN4UNbviAqPNH
FmiBF2QSiacJ3FikUOzLQZti9MG2H2y8X52QVE+86MEro+9n99BBU49Rd55V
A/6YXeZ+/77T/fozOtHaDFMf/aMKd+twz/jczGbiRdfHJb8pzGvD6szmictL
6dhq+DK/mHgI//a0E+HGHDj08+em1bEhUGJ6/xfxih3fNgrd/VWOR8cU/doN
c9G1JtOunfiD/Njj+9ZPajEh7iX80ZiGO6b5Y80kx60vuw0tc2nEL9+1Fovn
VWOFgatz9b+8tlSc1VvajGsRoQ1RkXUweC3scJXM1ROKJ19LnvPxV//2+RsZ
8PR1/XWJzNUxBSPHL9cIZ7y379iV2Y489y3BbuTctVrTajft46A5vCFcrIMN
g+b7NrcIt/kjRSUF1hfjdkWP13i5P04mrWuaIOfLUZN/X5tfiz+yu4u3KdGw
SDvfpY9wtWD++FSUbSP0nTOc3P9UIcpeOqGH8HCLd04w/xUmtlzy+6OS34Qr
ValzbxLulR6wmSsTTuZ8/qKkl7HtCCnUc6UR7vFtvcan0NoNa4ktp7r02Chy
L6+3J/me8lkrexBVKJStvMuhlUDi+Yb94YRjtuKTErqZbMSpHwyMmWTBxK9V
wYNwLGp1jAs3iAOxd5/OOE+TnucevDmbcCx03SKm2BE6eBUFfYyFNaj1cHr1
mPBqNMT7cuHyNtiOUkUvZen4bBu5+Abh0spwqZuDOzm4qeacaN3Cxviu9tD3
hEsTcQZbZiypQFe11itWUC5uXc30DCFcyvDO6YoQrEK/yO0HOhdK8DftQkse
4U/nYHD9wzg2dPscczaPEj/iDRy8/Y8bsvFezlXNhOuOsX2Jdbi2PEC6j3Bj
k12N071pBt7Y5mlqCtEhuMTmxCni1dpH7LwkyHPyRZ+MC9BjwF5N74Mn8eoF
U6pVdXGdSBty+1v1oB1NcsddvhFu9NkVuRafYeJ+6aPuTVFN0BqpyZC7wMOm
2DDZJX97cHpYYU/2zW78D9WVkgw=
       "]], {
      PointSize[0.035], 
      RGBColor[0.742077, 0.0624857, 0.00605783], 
      Point3DBox[{0, 0, 0}], 
      RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
      
      Point3DBox[{0., 0.27336208399118533`, -0.38467626816302053`}]}, 
     GraphicsComplex3DBox[CompressedData["
1:eJxll3k0lVsfx0/Ula6hjJkpQ0KSBiGbCBcRIUKSRKS6hlyRREnlFM5BIWOZ
KcfsyEaDeT44RDnHIfOskPJ613rfZ1vrnrX447Oe9Xv28P3s/XskLt0wc2LC
4XDLG3/MuP/+PPUkvh1Sw/3vNyEkuvF/FsirCipOR5lU/J97UVYptLppEK8u
IP2x0V79/7w67Srde3kcuKZ4MC62BGLPNxiJ0v2LhsEflkP9rSbhGI9jyhfm
S/wKpl1ulpIexGJceveEnM7xTsBlHcM6fzAZ4yPyQmV3z70H/dW0MRMeEsY7
7QKD7mq8Brf1d+nFmb3D+IrSqeu9hx/A8TJB1ev91Rhn8jTN/CuaAE+sO/0z
xNWE8Ye1u13bUu7ANuZztSyyzRh/Sx0nnU4Vh787mH3/1u3GeDVHfBBncgRs
Lw596N/bi/FfN+bDT2UVQNcjgWzGpwcwfkn3rq+3wCeo6+/1eWchFeMpcT7j
7aWdsDf2UVKUTw/GLSpJHyLJ/XA/Hyt83NyJcW4LkvHsJA1GbSON2qW1ovEP
8dR/VWBAjzritR2R7zFOq3HDj8kz4CexF+Zu25PQul2RyhlNpcEL81edhD+X
YPu4CBvORlf1Qo2VbLzmhzqMX1yJPHlErwn2qantI4S1YzxcpfYzc9p9SAtU
9+m914XxBH+RozFBHwF3sbafm0I3xrvo1W4rsp2ge6sqXM5HzyezPKvx20EF
Ayz53+MmOzB+T5rlV+8FKvhigSN64usxLscnzptOoYCOgu3rbSHvMW5pTWI9
29oMTps62bftLcP4s+I0Wa/CaqAs+Gf+/j40316dVUqtRzb4325jvKmelVTu
fQ9kkMf0l6pyMX7Q8Hc0J84WKMoKuEroIf6crquc+/Yl6L1ssergl43xemYJ
TaUv+QD3/Gm1gK4Ntv7NnRGebyrLgU3BK674hFKUfyXt0oy75aDp1qMXD9fQ
Pko1ZXjcbM0GXfaRRKJcHcZPsdt/P9GWB08ZL7Cw/oX4bh1JidGhRohruLxw
zR3V4Z9ku2XF9hlOUzTvm1JyMC4WcIj9CgsD/oz5MZ16FK1DiihxXEx2DK5G
7Do519KE1kdsIMegZhL24PlXkqupGO/mzM8/WDYFe/sClizcaRjXCx1cSDsz
CW1+fJFRPjCCcY6HPHj1oFFI/1Rktu42hvHJxp2mpsFDsPNj5O/1uxMYz8p/
JRJS0gf7q3a0RzL2YHymmz/SMX8GECdVaUu3KtF6nv4jqnAyEvI5bS/+9ROt
z8GCujMdFnhYnrGbXOzUgHH3Pve4m4a2cNoEf/BLSzvGQzVGawK0PaENQYYN
74v8TdCWGTwp/Br6nzPew5H5GeOpQIvL8GoLPOo4UVa5gLx+I9i4tuUvKrz9
ab2wKBvV3zt1fTXJZAgqi00o/tyJxrNFrYIQ4MWAnLgf4/TkEoybCx88r602
BENmO9i8jqWg9ffz9RvAfYXX2R2v1SpTME5QE/VmI2341ZJ5ldOqFfm4Ynhk
L0sPWB4uaNupUIvx45RHXeYcHSDClWO5Tx7lwcW5Lq1TQAdwrDD9zamVhfFf
XZkNNvtDwcng5XtaiskYj9SM7gvkLgH0127qixfysfEfCKaRLH6TwS3x1rwG
pyqMG3h8LW4YKQI3z91VUzS2w/hf37PeDb8fgSHef+F9xGuw+kKGio7+2hPQ
Z8Lp5K+YTowrv8100w+bgqW1N8tfvxvAuOGdJY4ZoyloaSlfseXbEMZ99Iwd
t2WPw7E4qbm7Fd8wLujt6VItMQIDtp8v3jo6jvE6jbkr6TcHoSLfo1HdEIDx
V2sO4hGTMyAuLYF3og7dRwJzt9w6K5/Bha0q9NOaaH/NeH/YNm79G3IRY50z
KlBOrHpFzG94x8NU64uFj38gfmkuHxeG64Y6+on8eu86MI73j/a5kkuHjbgO
X08SxLh4/AFl6/ohKF7/wMF2zBobZyUvO/+R1EHItNfZ7B0LOocdKSXp/gFU
IDkr7VyJR+f/S54c0rl7nf86J/vP37Bp63QDAk848I2HMzFOnX1pMHbJB6R0
3HsndhzlU2eRI1w+rhBQi7kqCDvTsHE2PVvfn51LBux5M7/rQsjIry1TsfIv
S4Gl3J4P8ZcTMG571o44cn0YMsoZve/Ey9F5xTol7qQ/DvvYdOWq1towbmrV
npikOgXXmpP69zChvJ3YOnToPCcR1gZu/7pIakTngHKKe0iSEowT4tJQL2rD
uJzoiaLStiE4cfzOG6sclLdElSgptTQqeKSvizc7gtanSuKAA/8qH+AfVqD6
FCVhnFLlWPZEtgwc+SQmo5tQhNU39lSQM0wig2dL8mo5DshHjfY6sXD+Segh
FXTkrSK6T/GxPuSA4im48HW5kvJQBeNvlOvI5j9nQMTNItmkUJTDy4v7hbQ5
nkDDeUZL8z403xKi6MtSfh+YZC776gw3ytvHjyIu7PnRMD2sNtMEoHOPMTxZ
I9ZPgds4utx5dFF/YhJaU1V9hg5XlpqLC+tQ3xXWv7aPiGNANlH8dE7WM4xf
g0r1HPtocPXylao8Z5TDvHu3w5KMqGBX/2k68xZ07+sdZbG7qkj5Vw753JlC
OVV9QL1Cf8Wps+j+1T9mG/9F6hoIC8wVUhhIw/iBs9uKDbQLgKlncGcXewzy
cdR2v4M+GWS7wBhBpnKMH72V/qU1vQwIr9S63GZBudVxPdGn944BMx48SBDh
Qd5Jv1wIWS0iwNOd0d6li8j35T9kfMV5jGCPS4A+lEbn/3DHG2I4cQjGTpo2
ZsyjXPlzdld/LKCC96/sDzFrofmq3A/xfxzNA7Su36kj5aHztvfH27kU+VLA
A4TWCTkFWP1sSYnnx0fI4B1/5ymVOHQvTOvG1JxMooIo9t7PXiyo/m6NIw9/
LdkAfPkF1Vdquej+yk//SBkng3zQFFVcgTzS/ZytNruFCCVL8v3tr6C+Glfd
SfHCzVYm/s2x6jv0BvVLj0apIlE6QDj86k/CdQWMp36NWpj5PQO2dCUO8buj
3Fr/NhvI0guFbu99Dhkmo9xSBAK2yZvehrzC+J+m+ag/H1RQaqzjIkJx7yXS
uvem3MaLM+sbUKAA143o1kcot1Bz6FmhGB1+vDClrP2mBt1HfMeWuXYz4Blb
embaiecYP2+WMSLjTIMVfHBcIBzllvkpcIlVoAKhi0QP25Mot7nTW4OUgikg
/reC1tGHOaifDMs9HH/3Mng5NbfEfRydnw3Gn/xkIknA6J9Yxabnodh758L6
hMZZyIDIX5NhYFyG+hOtawu/BMqBv7rDpccemRhftZM17rrEgDoOuPCICtQX
yWo9m5q3J8A9c/WxUWkonyc/wHKPZHPISL5pV++C8pnHzBIk7TkED8v0rTly
o/wcLZ1p7ymkghMLhvdwqig/g5YdXe37DoF393kJ+/EonwPstybsUksAcfqo
CDkSfccJyEvGfflBBj/1R5j8O1B99VPGBvYR1H/5fsab9bWPwWWwe/KJ7V7e
LKxOR7sGt2s7GTz9bhWraYryOW1QmiTPS4Q3FF+QnvBuyqdi+Q2BQwKQ9rLE
Z1kU1V+W6ymDosrAhtX5w9VA5PVoAPXp9lkCfNS8Wy25DXm6Sz2ghJ5HBXlv
n2dzaqI6mts9pbprZjUsle58MOJ4i9XRMk4KHV4hg7fZKi/w1Wg8gZ5BRXlG
K5WkOAcWwhZxrM7rlFdv69dngOSZwjtt9sgLo3qC71htCGxln0t2+Yy86Eot
IFn88IPxAiFLv/yRF1JKB2McKZGQd6HDSIqIvChrERkP2EKBe3gq9udmIy/o
9fdcQ/+gQ6GC4DFeCfQdAcNsNDr3MGA+l986v1w8xlv93ia3PaDBOU9rlqlk
5EXRy/nHT4WpgBY8NfvPFeRF+OJeH5UcCriJ66WpSaLvqT7L3xRfQQdwrA5o
zF5AfWajWy3nXRUSEDdPaBH+4oe9V62K1GXPKAfGMKJf6Tv6nkrpkWu8aFwO
msfzjAiS2Ri/8dTDRv0IA876iWWQYpAXf+SwXuPYT4DS0zGWV+4jLyoPR5l4
WFjB8LqaRKnHyIvvBOPraQ5DsM+N2zFiL8qt2gGT59Mb5/awbQmN5zDKQ90l
kW1X/1QHuWkDQa8dkRdCHrXrqrYlwH9SKVpnDfXJV4V6fP3WyCDqwKrYjSlU
X8cmU/t66L+92IprETMfcwbKR+uWvztlYHWY70vzjlWRAS3J8tSSDPIC/6vs
jv2GF6JyZvsfjqL8LH5ipA07SkP3UIdzxXKovmC7RNXjImmQOLuzIEAPeeGR
rTZ+rZsAkyK7qQM05IWHUC2xOZ8KzobNu73edH/h7krYL1PXNeYnn+A8CvOw
Ohm301pzFsjgMqVQMixyk6dsveHuqrTKW+wSaeLMaB36/rF4W79x/jRxd7s6
amxaB58od/2dUmD9hUSPUgCar0B4pNYYBxEKHjG4Wq++qf7iUv0FLxa4bdnm
AYs6qtPWa2+z5M4EzIj9FW7lyN95vWtCt36RwaGBY1nfs3Zizz/YZ3BmZcPT
XaZyGUetkaek0EjjVlwIHPzgtBT6A61z8JHrSV5N/rDjAs+n3w7IUwbP2ftW
xyPhn6oVt4dSkafqw1I5kgOdUDKKvhhXgTwNdcFX1q/QYLy1Z0mWNfI0284k
dUGGAZM4dnLSRVH/HCbB2jRNpMHXQl08B7KQp15qrTvTuKlgLZ8aRfBFno5u
U2ILrqKAuXk1wUoP5KntHbHZQhZ74JJwoiBkGnn6nCXhi9ufJPCcxnle5PTf
2HsfjPiSG9vLQZlg5OSFBuSpqZVPlbNzOVA5EK9LXkOe8pdk1FiJMiCdvpbY
FYI8ZcURXpuxEaDR0b2ZcV7I05+L5eK2+uchlfTV71ss8vSDXaR+odUQ/MYu
5poph/IzL9RSIbzh6Uv2K5wJB9G+B39tLzac0ATEd8JNTwyQp9Tqpm+cKiWA
37Un9E4e8nSxvdKuaiMP6Tm+QrmrqH4Q3BYVFUwFbhOp2wln07Hnn3AOl6eU
kMHH97LvE3lQPhMGX52T5ibCOX5Gi28zygnn+hIe7y8PFeSbccObxsn3AnYw
noqDBtHk0D0KyEe6Rd2OXbUEOCirnWAyjnzskVcTHCVRgYVJenrMJh9nm/T6
VMx3gHWhp2/kVlG/91TaW4Y4QwY3A5MFxfw3+XK//GFBFr1ScPnTsu6faL6V
Ma8IMxs+9hVEFFzZ5FFlV4b1grg8GKSx5Wg5o/kav+J42LDRp6Ud7nUa2ofq
iyfxCSdV7YIxu74/sdvktea3BJFj7t81rJx+LJo7IR8TiaKXmTfOye0Ozff9
hNB4rKWvHQ/aGE9eQjSTrDp6b+AM9cUOPiK8/7xGSWrTOlyc3jZ4krGg0Wc5
6pCXuWm+0sXRQZ0TlbN5+JF4drTv6YYMgvpvMvgP7fkkxQ==
      "], {{{}, {}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[2], 
         Thickness[0.01], 
         Line3DBox[{1, 206, 167, 134, 105, 78, 51, 2, 3, 4, 5, 6, 7, 8, 9, 
          207, 168, 135, 106, 79, 52, 221, 182, 149, 121, 233, 195, 162, 96, 
          230, 192, 245, 159, 240, 202, 131, 10, 53, 11, 208, 169, 136, 107, 
          80, 54, 222, 183, 150, 122, 97, 231, 193, 160, 241, 203, 132, 237, 
          199, 247, 166, 12, 55, 13, 209, 170, 137, 108, 81, 56, 14, 15, 57, 
          16, 210, 171, 138, 109, 82, 58, 17, 18, 211, 172, 139, 110, 83, 59, 
          223, 184, 151, 123, 98, 19, 60, 20, 212, 173, 140, 111, 84, 61, 21, 
          213, 174, 141, 112, 85, 62, 22, 23, 24, 25, 26, 27, 214, 175, 142, 
          113, 86, 228, 189, 156, 128, 63, 224, 185, 244, 152, 238, 200, 124, 
          234, 196, 163, 99, 28, 64, 29, 215, 176, 143, 114, 87, 65, 30, 31, 
          32, 33, 115, 88, 190, 157, 129, 66, 225, 186, 153, 239, 201, 125, 
          235, 197, 246, 164, 242, 204, 100, 232, 194, 161, 133, 34, 216, 177,
           144, 116, 89, 67, 35, 36, 217, 178, 145, 117, 90, 68, 226, 187, 
          154, 126, 101, 37, 218, 179, 146, 118, 91, 229, 191, 158, 130, 236, 
          198, 165, 243, 205, 248, 69, 227, 188, 155, 127, 102, 38, 219, 180, 
          147, 119, 92, 70, 39, 40, 41, 42, 43, 220, 181, 148, 120, 93, 71, 
          44, 94, 72, 103, 45, 95, 73, 104, 46, 74, 47, 75, 48, 76, 49, 77, 
          50}, VertexColors -> Automatic]}}}, VertexColors -> CompressedData["

1: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
H3cQqYo=
       "]], {
      PointSize[0.035], 
      RGBColor[0, 0.501961, 0], 
      Point3DBox[{0, 0, 1}], 
      RGBColor[
       NCache[
        Rational[1, 3], 0.3333333333333333], 0.667974, 
       NCache[
        Rational[1, 3], 0.3333333333333333]], 
      Point3DBox[{3.0531133177191805`*^-15, 0., -0.4174512330716969}]}}, {
    ViewAngle -> 0.34, Boxed -> False}],FormBox[
    FormBox[
     TemplateBox[{"\"Second Subsystem\"", "\"First Subsystem\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0.742077, 0.0624857, 0.00605783]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0.742077, 0.0624857, 0.00605783]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 0.501961, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    RGBColor[0, 0.501961, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.742077, 0.0624857, 0.00605783], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.494718, 0.04165713333333333, 0.0040385533333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.742077, 0.0624857, 0.00605783]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.742077, 0.0624857, 0.00605783]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.742077, 0.0624857, 0.00605783], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0.501961, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.3346406666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0.501961, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0.501961, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0.501961, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.63682179831531*^9, 3.63698962239958*^9, 
  3.6370000419891367`*^9, 3.637000556632918*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tracking States", "Subsubsection",
 CellChangeTimes->{{3.6368230131097937`*^9, 3.63682301475557*^9}}],

Cell["\<\
Track the initial state |0\[RightAngleBracket]\[LeftAngleBracket]0| as it \
evolves about the X axis every 0.1 time units for 1 time unit.\
\>", "Text",
 CellChangeTimes->{{3.6368239780616293`*^9, 3.6368240262397614`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"TP", "[", "X", "]"}], ",", "1", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6368230353344183`*^9, 3.636824031535973*^9, {3.636991931316122*^9, 
   3.6369919329151363`*^9}}],

Cell["List the output states.", "Text",
 CellChangeTimes->{{3.636824670624007*^9, 3.6368246775699577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"States", "[", "outputdata", "]"}], "//", "Chop"}], "//", 
  "MatrixListForm"}]], "Input",
 CellChangeTimes->{{3.636824033357215*^9, 3.636824048728518*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"1", "0"}, {"0", "0"}}, RowSpacings -> 1, ColumnSpacings -> 1,
        RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.9900332889206209`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.09933466539753064`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.09933466539753064`", " ", "\[ImaginaryI]"}]}], 
         "0.009966711079379187`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.9605304970014428`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.19470917115432532`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.19470917115432532`", " ", "\[ImaginaryI]"}]}], 
         "0.03946950299855748`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.9126678074548396`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.2823212366975178`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.2823212366975178`", " ", "\[ImaginaryI]"}]}], 
         "0.0873321925451609`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.8483533546735832`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.3586780454497616`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.3586780454497616`", " ", "\[ImaginaryI]"}]}], 
         "0.1516466453264174`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.7701511529340703`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.4207354924039486`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.4207354924039486`", " ", "\[ImaginaryI]"}]}], 
         "0.22984884706593037`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.6811788772383373`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.4660195429836136`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.4660195429836136`", " ", "\[ImaginaryI]"}]}], 
         "0.3188211227616636`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.5849835714501209`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.49272486499423057`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.49272486499423057`", " ", "\[ImaginaryI]"}]}], 
         "0.4150164285498801`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.48540023884935607`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.4997868015207531`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.4997868015207531`", " ", "\[ImaginaryI]"}]}], 
         "0.5145997611506451`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.3863989526534569`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.48692381543909824`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.48692381543909824`", " ", "\[ImaginaryI]"}]}], 
         "0.6136010473465444`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0.2919265817264291`", 
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.4546487134128414`", " ", "\[ImaginaryI]"}]}]}, {
         RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.4546487134128414`", " ", "\[ImaginaryI]"}]}], 
         "0.7080734182735723`"}}, RowSpacings -> 1, ColumnSpacings -> 1, 
       RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.636824041553989*^9, 3.63682404904944*^9}, 
   3.63682466653411*^9, 3.6369896342855587`*^9, 3.637000045219211*^9, 
   3.637000561954685*^9}]
}, Open  ]],

Cell["Plot the output states on the Bloch sphere.", "Text",
 CellChangeTimes->{{3.636824683696856*^9, 3.636824692433181*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "[", "outputdata", "]"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.636824699995606*^9, 3.6368247136012*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[{1, 134, 108, 160, 87, 155, 129, 162, 71, 150, 124, 103, 59, 
       146, 120, 99, 83, 51, 142, 116, 95, 79, 67, 2, 135, 109, 88, 72, 60, 
       52, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
       21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 
       136, 110, 89, 73, 61, 53, 38, 137, 111, 90, 74, 62, 54, 143, 117, 96, 
       80, 68, 39, 138, 112, 91, 75, 151, 125, 104, 63, 147, 121, 100, 157, 
       131, 84, 153, 127, 106, 158, 132, 55, 144, 118, 161, 97, 156, 130, 163,
        81, 152, 126, 105, 69, 148, 122, 101, 85, 40, 139, 113, 92, 76, 64, 
       56, 41, 140, 114, 93, 77, 65, 57, 42, 43, 44, 45, 46, 47, 48, 49, 141, 
       115, 94, 78, 66, 58, 145, 119, 98, 82, 70, 149, 123, 102, 86, 154, 128,
        107, 159, 133, 164, 50},
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
5rs=
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0, 0, 1}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{0., -0.9092974268256828, -0.4161468365471432}]}}},
  Boxed->False,
  ViewAngle->0.34]], "Output",
 CellChangeTimes->{3.636824713862254*^9, 3.63698963626355*^9, 
  3.637000047026209*^9, 3.637000562936043*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulating Shaped Pulses", "Subsubsection",
 CellChangeTimes->{{3.63682306670786*^9, 3.6368230706761627`*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["RandomSmoothPulse", "Input"],
 " from the GRAPE` package to generate a random pulse with 20 steps. The \
first column has time step lengths, the second and third columns are control \
Hamiltonian amplitudes."
}], "Text",
 CellChangeTimes->{{3.636824802742866*^9, 3.636824821505069*^9}, {
  3.636824871535083*^9, 3.636824874189992*^9}, {3.6368249865280437`*^9, 
  3.63682500861502*^9}, {3.636825124262824*^9, 3.6368251259505777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pulse", "=", 
  RowBox[{"RandomSmoothPulse", "[", 
   RowBox[{"0.1", ",", "20", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PulsePlot", "[", 
  RowBox[{
   RowBox[{"ToPulse", "@", "pulse"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"DistributeOption", "[", 
     RowBox[{"\"\<Column 2\>\"", ",", "\"\<Column 3\>\""}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6368247612839947`*^9, 3.636824866382976*^9}, {
  3.636825019144915*^9, 3.636825025528504*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.9245001781197719`", ",", "0.4918985700730225`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.0434462127837464`"}], ",", "0.44948714145750934`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.6344330621171234`"}], ",", "0.3859539352256383`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.9149471730067967`"}], ",", "0.30516364473701113`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.9514753485792038`"}], ",", "0.21098096335122954`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.8105043919607817`"}], ",", "0.1072705844278949`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.5585211062779689`"}], ",", 
     RowBox[{"-", "0.0021027986733905824`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.26201229465720166`"}], ",", 
     RowBox[{"-", "0.11327449259302581`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.012535239775081808`", ",", 
     RowBox[{"-", "0.22237980397140872`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.19863469389244426`", ",", 
     RowBox[{"-", "0.3255540394489379`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.23244356735387905`", ",", 
     RowBox[{"-", "0.41895926744049083`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.11093832388329256`", ",", 
     RowBox[{"-", "0.49937307717396945`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.10808560873049597`"}], ",", 
     RowBox[{"-", "0.5641885786902994`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.3641884999132372`"}], ",", 
     RowBox[{"-", "0.6108256438048861`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.5969306190906802`"}], ",", 
     RowBox[{"-", "0.6367041443331347`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.7458722356885762`"}], ",", 
     RowBox[{"-", "0.6392439520904505`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.7505736191326748`"}], ",", 
     RowBox[{"-", "0.6158649388922387`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.5505950388487255`"}], ",", 
     RowBox[{"-", "0.5639869765539043`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", 
     RowBox[{"-", "0.08549676426247732`"}], ",", 
     RowBox[{"-", "0.4810299368908523`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "0.7051609352003165`", ",", 
     RowBox[{"-", "0.3644136917184886`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.63682483163968*^9, 3.63682486669191*^9}, 
   3.636825025798807*^9, 3.6369896402289267`*^9, 3.636990099774763*^9, 
   3.637000048647986*^9, 3.637000565774782*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQPWsmCOy0byk9mto49a09AxTA+DD5IjnRf1Pslu2H
8E9i8N9nrpzg5vtkv4kxCFzG4ItamHjbu7+Fqr+Jwb+mqJxXU/RuP8T2Bxj8
dT3iL5a9f7kfbJzxYwy+yr1Ny9PvP9yfBgbPMPgR33XMzx+5sB9s3cyXGHwF
X9504TWd9mfA4A0Gn8WGf+qdnJP2/8HgPQa/ZOXP71sPnLWHmPcRg/9nxWeL
krQ99hD3fsbg5+WumlW/evf+s2D7vmDwz1jqetz1u74/Heyfbxj8MPP7tnxS
j/czgsPrBwb/7u2MYv17z/fPBrvnJwbfzzP3+yaWF/tNwe75jcGvsFtWUznv
4f7zYPf8weA7XMxeJ/t46/5MsHv+YfA3uCSvWjvhmT3EPQwO6HxYuoOlNxgf
Fj8wPiy8YHyY+Qw4AAAd5leu
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{43, 42, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
            16}, {45, 44, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 
            38}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{2, 46, 42, 1}, {45, 41, 40, 39}}], 
           
           PolygonBox[{{43, 44, 24, 23, 22, 21, 20, 19, 18, 
            17}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 42, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
          43, 17, 18, 19, 20, 21, 22, 23, 24, 44, 25, 26, 27, 28, 29, 30, 31, 
          32, 33, 34, 35, 36, 37, 38, 45, 39, 40, 41}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2.0000000000000004`}, {-1.008563869493956, 
       1.008563869493956}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, Method -> {}, PlotLabel -> 
     FormBox["\"Column 2\"", TraditionalForm], 
     PlotRange -> {{0, 2.0000000000000004`}, {-1.008563869493956, 
       1.008563869493956}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQPWsmCOy0d8i+pexSfd+eAQpgfJj8JxGl7alH7kD5
JzH4S+cnK1VsvmFvYgwClzH47ttaJM62X4aqv4nB72W/NiOH8TTU/gcYfN0z
Hw6Llu22Bxtn/BiDz1DFUfjYMnF/Ghg8w+AHlmos7Pu/Zz/YupkvMfhOfWsY
Ppad2X8GDN5g8IseK8x5cPXK/v9g8B6Dn3WVocPqwi2oeR8x+K8P763b9fX+
foh7P2Pwj/CcMLnK+2j/WbB9XzD4lellFo+6H+9PB/vnGwY/I29J3MP4J/sZ
weH1A4P/Ym7P7vUlT/bPBrvnJwbfvygzWWvr4/2mYPf8xuB/SC/N0uN5tP88
2D1/MPj2366eNDx5b38m2D3/MPgFAZzneoOuQ93D4IDOh6U7eHziAAChqU0a

      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{41, 42, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
            24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 
            40}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2, 43, 42, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            1}}]}]}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 42, 13, 14, 15, 16, 
          17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
          34, 35, 36, 37, 38, 39, 40, 41}]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2.0000000000000004`}, {-1.008563869493956, 
       1.008563869493956}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 250, Method -> {}, PlotLabel -> 
     FormBox["\"Column 3\"", TraditionalForm], 
     PlotRange -> {{0, 2.0000000000000004`}, {-1.008563869493956, 
       1.008563869493956}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
  
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.63682483163968*^9, 3.63682486669191*^9}, 
   3.636825025798807*^9, 3.6369896402289267`*^9, 3.636990099774763*^9, 
   3.637000048647986*^9, 3.6370005659118853`*^9}]
}, Open  ]],

Cell[TextData[{
 "What we plug into ",
 StyleBox["PulseSim", "Input"],
 " as the pulse is ",
 StyleBox["{pulse,{controlHam1,controlHam2}}", "Input"],
 ". View the trajectory of the initial state as this pulse is applied."
}], "Text",
 CellChangeTimes->{{3.636825038662445*^9, 3.636825098325762*^9}, {
  3.6369919363869*^9, 3.63699193737693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"TP", "[", "Z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"pulse", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"TP", "[", "X", "]"}], ",", 
         RowBox[{"TP", "[", "Y", "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.05"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "[", "outputdata", "]"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6368249767581587`*^9, 3.636824977511572*^9}, {
  3.636991939548107*^9, 3.636991940495179*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
6k4r/g+UKM3b
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[CompressedData["
1:eJwl1nfcT2UYB+CXzITsmZUZMiIrI2UkK1EhMqJUQkaUVGgYFQpRdsgmu4gy
SnZmmWXv7Izouj/+uNzf73PO+76/3znPOR9523Rq9HqihISEJokTEmKu9k8t
/pKHktH6SL0UZeTF5rPWb5nv87i1HGYJ8zuzvrne8dzmRP0RHtKPm6+SlIX6
2zglYY1em7/lYTxHGU5Ye41kLNJ7cxdr9Sc4JH9OU27rfcnJBj2PXzwpzjMr
m5XMH81GZlnHT8odSU5Ra7PNxdazy2Pi+5vlzHLm92ZD8x3H7zY/0QuxSy+o
T5MfI4n+i1mHw/IXNEu48yX7WbuPjWpe/Ru5SlwbeYX5tPmwY0n5VX+SI/Jw
mpPI8f7WcrFJL8cpOW5cCpbofUjlvE/1wuzWk7FOrstReQTPU57T1jqRkqX6
uyTnN70ex+SRtKACKVgf95fj8pe0pCIp2WC9ASfkUbxAJc5Y68zdfK+/F9eR
jXFdOSmPplVcKp//A2u52azn0yfLVaksr4xrZv2s2YXq1lKZxcw5cd3MHxzP
YY7Vy4dYi71q/R75M7kIpeWF5h9x3dgkP8Up+StaUzl+hs2xdzgtf00bqpCa
LXH/OCOPoS1VSUNa7iUdW53TmLPyWF6kGuesvcE9LNP7kp7f9Sack8fRjkfJ
wDbrz/CPPJ72VOcfa11JzXK9Xzy/bI9nlvPyBDL57l/GNeCleK70D+U8lJTn
m1us3y9PiT1tVos9a/4U38N8zPHzcrfY/3oas7g5N/ZbPG+O5zTH6RXoH9dL
HyI/wJ/xOdghP8cFeSKZnTMq3hm8rCfRP5LzslXPr0+VH413j37B7E5aVuj3
OT5erhh/V15mfhD3Qx4q1zSLxu83F5l74m+yU27KRXkSHajBRWs9uJeV+odx
X/3ssNh37NUL6dPj85BF32U2i89o/ZL+gDlL/0bOIo+Wy/BKPPP6x3I+ftdr
ckl+k3T8pH9EVnbrzbksT441P/uVXjbIS8xX47mXB8j3s02vxWW5J+l50PF5
8ZybPzuWy5yg1zYrxbUzl8fzEJ8t9rD5edxf9umF9RlyDbLpf5jPc0Wewmvx
LnHOQGv52a7X5orciwys0geQnT/1FlyVp9KRJ+I5Zo/1lvwrf8vr1OGqtbfI
yGp9YOw39uovcE2eRieejH0R35Pc5CFvvF9ij7PP+a24Lk+nM3Vjr7Hfemtu
yDPoQj3+tfY2mVijD4rn3Hf+Iq4v+/UCHJDbcFOeSTbnfK0/HOSl8fxbTyEP
imtqFjBLmQvMBuaO+F3mt3p1qsZ9M+tbv2b2JjNr9cHx/nB8uF6CA3pBDspt
+U+eRVcaxN7lL+svckueTTcaxn2mSOxfilKMv53XjtvyHLrzFNetvRP7n1/0
TyjOIb098Z+LuUYPGvEgh+P9QyLm6W/yNDf0PmTlV/1TSnAk3gkk5ju9Jyl9
18F6QXbqjbkpvxt7k3X6Z5TkqN6Bu5iv96IJpTgWzyNJWKC/xTP8p79Hdn7T
h5DB3xyhl+RgXCN9ZrxbqCavSnTn/1OlHfsfezgRDQ==
       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
uO8XGR5O3P+K5ZbMey4cHDivnH6pmkR4qJgbZJMLOe8ow544DshfFz1eqUDB
MuVlvNV2xWhJTzqbncVBbarU3PxeCsxDFT8t5y/Fpp/BpKdkDjIE7RV+FFbi
uucb3Z6zZbiqtuXYYwZxPu53F215SIVhc/FTX2MSOCKuceEdHMirBTfoONFw
V09tVcwaMmwSPmscHiLccvtDwm2DKkSQ+QxaFpQjfFfCT/1pDtoHX+8/xF8N
VYmrDcz2ctzuv9WuvIiLru+k94rfqzFAdzudUFGBZds+LZEl5u+y3d7Oy+Pp
CNV5+vdHJAUu2/79/aHKxeSXDdUul2vAObe3fqt7JY6Zqkt/2sRFZpJm0+dd
tbgq+uatpy0V2rvFLkebcvE3TTDzqngdrrr5/XLVomFpZ5WTdyIXaZI7Zy72
NcAsIjxDwqQOXp9/3zyVy4Vxz8Kee5ZM+E8ZTV6Wqoe330S5DYWLL6ODCjJ5
TPypvKAfN1UPXaGDVnsaudhTLvOifHkj4t8eK1a6wEDkJsYT+S7CFdKk/cvu
NELVlHXrViMDZTEzvoEaPGzSN3mf+YKFwWdODVXzGnFoy64HbgY8KEj/s5n6
x8KuUbufIVcb8Tawm37KjDieOW144lQznn9yEF7a2Yiou+/pq215cG+4ffU8
pRla+7eUq1g2wdDPZHrIiYd0vZXzBvVa0Kd15J9yURNYQk5vet15iD1oqXs+
tAWOjpca8tRY8Hz4fqa9klgvRzfo6XWl44yQfMFQ3z2YxK++e5TFhrIfKWJT
AFF/q2UnLwwEIeBouwm1hw0Fd6dTVI1s9P2efpzdEYbFLgd7Z+bYsDUV4K07
mYdBgcomj8IPOOHvVGUjxkHR1s2r82a/IDNkTCxGJx6ajgrlf7dwUMk/qr1n
rBhMF49dNkfT8di8U+jibg6WHO/1VA8vxdvhLJa7TCau+cXeJX/iIF3b+e7i
2xTcuvlubp52CZge7LI7VUT9q1Q0CKykYjbL9YZyQxl2qD5Yv/QrBxv5nrc1
jlGxV9FjXXoGCT4G4Ufn+jlodL1Krq6l4cPXYdXcMDJ+t2sWG48T83fFb8Oe
qCo88p6O3nWlHBfHFY9kC3BhNXdvTtutGlG1e4P1D1TAMcZcQ4mYv6/MlEeK
ttGhF+b76IweBaXqtvq/V3DheeFTc9FCoj7t0275za/EtlSFsUgjLkpDXOcF
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
2mOe
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0, 0, 1}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{-0.42219097579958725`, -0.8766679546144591, \
-0.23066876100913614`}]}}},
  Boxed->False,
  ImageSize->{360., 360.},
  ViewAngle->0.34,
  ViewPoint->{2.416675518109702, -1.8481526284840244`, 1.4812195320062438`},
  ViewVertical->{0.15216070711193944`, -0.0947120936041236, 
   0.983807266966614}]], "Output",
 CellChangeTimes->{3.6368249643692102`*^9, 3.636825101762727*^9, 
  3.636989642938838*^9, 3.636990101098526*^9, 3.637000050132008*^9, 
  3.63700056764918*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Dependent Hamiltonians", "Subsubsection",
 CellChangeTimes->{{3.636818870434066*^9, 3.636818874713825*^9}}],

Cell["Enter a Hamiltonian as a function of one argument, time.", "Text",
 CellChangeTimes->{{3.636825393170822*^9, 3.636825407418977*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ht", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], 
     RowBox[{"TP", "[", "XX", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], 
     RowBox[{"TP", "[", "XX", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.636825358671507*^9, 3.636825387399911*^9}}],

Cell[TextData[{
 StyleBox["PulseSim", "Input"],
 " simulates by discretizing the time domain. The step size of this \
discretization can be determined automatically, or explicitly set using ",
 StyleBox["StepSize", "Input"],
 ". The step size is completely unrelated to the ",
 StyleBox["PollingInterval", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6368254168284607`*^9, 3.636825533723611*^9}, {
  3.6369919438094063`*^9, 3.636991944730447*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata1", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{"Ht", ",", "4", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"Projector", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"TP", "[", "XY", "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputdata2", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{"Ht", ",", "4", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"Projector", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"TP", "[", "XY", "]"}], "}"}]}], ",", 
     RowBox[{"StepSize", "\[Rule]", "0.01"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.636825420144597*^9, 3.636825438796687*^9}, {
  3.636825513468577*^9, 3.636825554862093*^9}, {3.636825588881571*^9, 
  3.636825614598609*^9}, {3.636991946807641*^9, 3.6369919527427063`*^9}}],

Cell["\<\
Plot the resulting data. The two computations lie on top of each other.\
\>", "Text",
 CellChangeTimes->{{3.636825622712551*^9, 3.636825636282732*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Observables", "[", 
      RowBox[{"outputdata1", ",", 
       RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"Observables", "[", 
      RowBox[{"outputdata2", ",", 
       RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Expectation value of X\[CircleTimes]Y\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.636825357050598*^9, 3.6368254144252977`*^9, {3.636825558799184*^9, 
   3.6368255825693207`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxlUmtIU1Ecn8/pNDUYMiksMcxSCnz3sP8BKydJoiWpW6KmVgipBUFKkeU+
OCk/hJbrJWoRFMMk0ko6kTpLXWk+5pyY0zk3tnk0Uytf7d57PtUPDpdzzj2/
1zkBOYUpeY48Hi/CPpjvvygVKuP1Ja/gQr72QfieTszNO8A9zFTw4d4QbvWX
WZJbv4DkjGV5FE3Q/UE46pvwPlUyjRW1DLTwXafim7vM9P9xiO4MehgaYcPW
ZGZFDy3i2G6PNELPG+DON7WlaJ1ggaahKFYwA/V8mTTXk1A+M0zYSrMlMive
Ja36uBhshd0n+4+PVZoo/yxYsxv8DmRO4Ub7aU3DHExudjB0PB6levOgMDwK
1PN6cDiLBRBvKZtvupVF9X9CRv3ydXn1Z2hfDGYUYCWkzLhfOQKcn2UwCcar
s27rIYUV/AWGfcb0AMs0cP5+g6xNnvspxwz6EobwD1wdCDcdXrMA53cVzqbV
TbT32aCYsVe0BlPek+m61Vng/K9DqNOxlpEnBOg1oOH1d8LncwS4PDzULNKK
nm0QELMCDqjWffBIlH2fy+eA+hVLkjgtAUZNWuWIrjSRgIxuAlxeJ3Rz3vnp
zh4CbByNE1Id2l6QoCPA5XdGXwtS25J+ENjG2PF3QeLxmJhFux7XhwvqJ9fE
9VYC+SxcUXVvcV6ugtB++Ohlh2tmhXEWGDahko/w6cQowQsb7csN9ZGFxDGV
BZbYet1Q18zKOT+Rmfbnjg4Kb1jeyqchliNEPqfiSs6L9LRPARqqncSS+xpg
7ck8UHnKcIUqrIv264mUd42RJ+JrsLqXgSfa2xN0saZSjbm+N6HiwnLv1UEd
ZuMKvdDWYGHnpZkp+n68UEjSm2bfFRNm6aTeKPp14OW6ASvmrsMHLag35Dsi
yX/zv+mlnnQ=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQjQ5mzQSBnfY+p8s3PV18aj+Ef9J+7oNZjNqSt/eb
GIPAZfvrzDMc8hSfQOVv2vsduOi14PjL/RBTHthXH1ytpn3v7X6wcuPH9ldV
dUQt777fn54GAs/srd4d59me/x6q/6X9RL6UTVda3+w/ewYE3tjffh2qaxj9
HGreB/vUz8m/avMeQNV/tHc1lnsx/cYFqHs+28+MYi8z1Ezafw6s/4v9A7ta
RdE95+0h9n2zTzgzqfGh6D17RrB5P+xlpC+vuv38iT3EvJ/2eve2d7QkvrSH
mPfb/tXf7Qc2N72xh5j3x/69gPr6axXvoOb9s2e7yVRW1PreHhpsDmlzQ7e1
fnhvD3E/g8P3NTN+bfj7Hmo+owPXs5ysnU/eQ/UzOTxlyqrjPvseah+zw1N2
Q8/80++h7mNxYOM9FCP7EGYei4PI9PPTN/2GmcfqIOrkduXXV5h5bA6pm7mn
sM2CmcfucL8/tjZs6TuoeRwODF/LeD6efwM1j8NhyhHddxevvYSax+mwz5vp
vFPnU6h5XA6/zEQcHqy7DzWP2+HVpV7z7n0XoebxOKi+495tVjUPah6PA0u5
s0HSxLPQ+OF1OH8rzqPy+z1ofPM5BL8qWXJxyjNofPE7bBcx4nX9/xoavwIO
1xNN2iNM32PwAcklMiY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {
     FormBox["\"time\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotLabel->FormBox[
   "\"Expectation value of X\[CircleTimes]Y\"", TraditionalForm],
  PlotRange->{{0, 4.}, {-0.999809704355885, 0.9999948595131594}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.636825566820302*^9, 3.636825616637401*^9}, 
   3.6369896512926817`*^9, 3.6369899505340357`*^9, 3.636990046800268*^9, 
   3.636990107515396*^9, 3.637000056118915*^9, 3.637000575118574*^9, 
   3.6370012838985786`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lindbladians", "Subsubsection",
 CellChangeTimes->{{3.636818877137629*^9, 3.6368188785363283`*^9}}],

Cell["\<\
We use a Hamiltonian that evolves about a vector on the XZ plane, and we \
apply a  continuous depolarizing channel.\
\>", "Text",
 CellChangeTimes->{{3.6368950178689737`*^9, 3.636895024199998*^9}, {
  3.636895097232123*^9, 3.636895155479115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"LindbladForm", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "\[Pi]", " ", "5", " ", 
       RowBox[{
        RowBox[{"Spin", "[", "X", "]"}], "[", 
        RowBox[{"1", "/", "2"}], "]"}]}], "-", 
      RowBox[{"2", "\[Pi]", " ", "2", " ", 
       RowBox[{
        RowBox[{"Spin", "[", "Z", "]"}], "[", 
        RowBox[{"1", "/", "2"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TP", "[", "Y", "]"}], ",", 
        RowBox[{"TP", "[", "X", "]"}], ",", 
        RowBox[{"TP", "[", "Z", "]"}]}], "}"}], "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.636895119702446*^9, 3.636895121520441*^9}}],

Cell["\<\
Simulate this with some initial state. Also record the purity.\
\>", "Text",
 CellChangeTimes->{{3.6368951603805103`*^9, 3.636895173380785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{"L", ",", "2", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}], ",", 
     RowBox[{"Functions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"#", ".", "#"}], "]"}], "&"}], "}"}]}], ",", 
     RowBox[{"SimulationOutput", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"States", ",", "Functions"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Functions", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Purity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "[", "outputdata", "]"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.636825816564064*^9, 3.636825849880191*^9}, {
   3.636894596659552*^9, 3.636894680612007*^9}, {3.636894755404146*^9, 
   3.6368947583309593`*^9}, 3.6368947927699547`*^9, {3.636894829257634*^9, 
   3.636894919675088*^9}, 3.636894977071186*^9, {3.636895112421144*^9, 
   3.636895124852762*^9}, {3.636895239055871*^9, 3.6368952398673487`*^9}, {
   3.636991957704039*^9, 3.636991959132882*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.47517611787967085`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{0, 2.}, {0.5001677313139722, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6368952416185513`*^9, 3.6368955287143307`*^9, 3.6368968002950573`*^9, 
   3.6368981452940903`*^9, {3.63689820126119*^9, 3.636898203444003*^9}, 
   3.6369896573314543`*^9, 3.636989834958963*^9, 3.636989873080366*^9, 
   3.6369900521343727`*^9, 3.63699011018344*^9, 3.6370000585459957`*^9, 
   3.63700058055201*^9, 3.6370012904262543`*^9}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1:eJxN2Xk4Vdv7AHBJhhQSRajElaFIkyFaaDR1UyRXRSQZIkoZI/M8ZDg45qkM
h0NChVWGyBRKhszzeDZyKYrfuc/z++61z5+fP/ZZe633fdf7PlvYxPaKGSMD
A8PlTQwMmxnQz+zCkDNPPgYOVXG+/cr27PT/3Pn1SDIX3csFu6QvqhmB//kx
aRnOLXRnUatTYFCzxX2X58f6BQoGZthuGFvaPcF9i0l+0ze6S66oYy2q7rgf
MZrbU0z3d++tF3gDvHAXnAl6FfCfawvmADs/3Du/cdcI0b3+ZdTWZ6phuMu7
8Cr15mGghPOTWWNUBO72cnnrz+le83x+vc0/Evc4kQHTqVwMpCk7PWp9QML9
0rYaqkIOBtIDHgr5qCSj9YRVu7/Npq/nxB7FI/EpuJ+/sCf+GN0jkvd/549K
xZ0p4Eohx0sM3HXs2jrol467Qt7a/XuZGEh8puosa/sC98GJD+dzkjCw6h1n
/kqpAHeyUFF/QSL9fZubl4UFqLjXVUzUUBIw8JtsfGmchBzc3O/2PB4D54rr
PphEFOL+rkkgYyMaA7eHss0Per/CvXaQabtFEAb0p5pFau+V4m41z/nK+QEG
3v6wUH16GOI+JJOTbGyDgUKdW65/XiFnKagJVbbGwFT7UruC0HvcW8Zpj3vN
MdBo7ciblo6c07PTI/8WBn6Fnh2Vp37AXdrTeEeGBgairfN7beqrcc9l4DPq
EcCAcVD6wcdLdbj3nantyUyngaWj7LWmAq3ovKK1jw2ZzYGyqYO+lIRO3EVU
K0F0+QxQXl7Zuy+xH/fIg2uHDZ9MARO7Eg72rmHcD9uO3ZFYGAdJ6hFfGrvG
cOfzYmr0+zwCktxvrFaUTaLnc8ZPxZoOArI9heoqOIP7mKlEs8hQN9ixtvG8
bHoWd4ZZhb7Jf9uA6YH555a3abizgu1SmZ1tIP3hsfABM+SeWVe33XzTBjzD
FzZrWyLfdePMC+jaBnKHXTR2PESenCK9Q2dzGxjIfHYCeCN3EqFq5XK2gsUV
ZZJMJnIN1amsUY0mYLUWHWQ4hPyH7Wcjo+1NIESc40bfKHIVS17RL58bgeYl
by/9SeSzAc3sWbqNIC3015fjGPLF7qzNazcbwKcMQ9PI38hVF8R/2tjWAxel
794DvBjuA5p2RtMhNWD23JBbvhry6qL2gb7LNYAh5ujMoXPIr8oM+zftrAF7
hZZG0y8g5yxUDSPHVYMayQcuLlrI7YcqmBgzq0CwooZomx7y/N07dP+8fQ+C
X2vO8Jojv6Id6Hew/g2w0DjZs8kbudv1HLBD+w3IbH/zNdwH+XeWm/NLbWVg
Jk5Pi88P+e8fX6g530vBQohJIVcg8v2N9SPttNdgdIZD/UUY8tYTPDUyPEXA
0MLprlUccvnnsfUfYwvBd8airZ7xyPvO5JANhArBLt0tByPIyH1nBEQeilGB
o/vax9hE5OP7F/sWHuQBMSnfRO1U5DWsQ4/bSzPAX+WrDtovkFtPijyJyE0H
0tvek34SvMesaVEjOQ1oWh/sin+JfNOAfkC+bwrwaRAvrskm7Jvnlz6PnFiw
xTf2KyUXOYtcJXtpRAyovb8xviOP8PyivtFxxyjAvnV4132CR17k+3HiQjjg
Di5pYaUgZ61rzMm7EQyYql2vqRP82ESc85ikP6BdNl/zILhlkPmQX6g7iHG/
n9BBcOWq2eFOySfgg4ld7CLBh/pMP6mF3gfvhS0LmfORU5Q/M5FDDMAF/isT
OwgeTHG7R2FUgaqiYoo8BJe1Ob5bpP4ObCOPZW8nePPDOfeGOnt4Rf/5yXXC
/4qsB8k8lXKB1/KODI4RfHT+977oumcwzaYuq4bgY1m3pO7+8oFH540C4wn+
Malgm6xUIDy+iTnInOClB4Ra9C9EQMGAkpFxwj5Xmsc/JeXEwdTmb0vOhPMy
ixEduVZNhv8srVSxEZzrnzE3jt5EWDzZnx+WQ4hn6/E/hcypULk4YNCDEA9K
21nbGuUy4YOS/IKfWYT8VUpfaomlwC4GNfHTKchnBTdzN2fkw7QilcnTycj1
jr6JqaIWQB1O3U8nkwj5TqrUVR+lQvbMEYw9gfC/YaK3BtaKoHr0zU5NEvK2
jle2jJKlUGAp+eaBYOTkuMvFb7JKIefKT2kqIX+jwoWPWomUwcCfUlonA5Az
vg0zKhd8AxmYI62kfJG/eKl0mIfzHaxnXrr4xh25jvHyv08XK+Eei7QuUzvk
JtZpuiUG1fAX5YzXyiXk7wqBrQ97I5R0Wx2T/4HqqtrPvbZftBvhMF+4QjSh
DmcM7IrjD2+EVMX7eZMzyGXvgH2hPE3wx1n5pUeEOh9i4DLIK9QM3a3lJEU6
kF9yTEwKO/QZ7o42lugsRi7jcGD8alob5PGKqs28jzzcO3ZLdk4HbN/6QUW8
dg7li8MkaYt6Hwxx5hBv2Y3ux+JP7ix/VoagpuSFAL3d07h/CrHQYzs3Bju0
ezvMnSdw1+7qv6+5eRIuVlXFbcoZxX01oXNeLGIaKp3TFh5RHUL5tZubOZM8
C8s+hta3yX1Hec1S6aXCRYM5FnPZQmtfcLflZnrxnJcGLd7PsK/1IB9pmTzW
u4cGfX9vVLW/RV5o6Oet9xcNZiiK6Nk5I5c/bNc5qECD/N8rtlr/akf3oELz
+vXbNPhYKb/RaLkNxVXHWm5tNg0K+MnOMXZ/Rvd1yJnzjPk0+tXfXP2YhPx7
Z9bek0U02C81HD2kh1zl7LK311safHpC/0lCewuK54eQ+XUDDUZaKitlNzbj
HuZmPWA3RYMRleZKMuWNuG/ov7PW3I/BODNFJjsS6sd2VrOWyotgcGKOv/mK
AfLk292qe8UweNIx9aO0APKcnaK72qUwaJfpFdCR9BHl4+WczN6TGDx4eGhj
ILMW1eEa8U+umhj8uDiivFyE+sP5R+tNozYYdGnaYi8RifrS3/5ZE10PMOiV
1qb5mhf5zg0PmVp7DL52cbNQiK3E/SLb2FnfxxhUbLgxJ5lYgfbZ5qlTjhsG
G8DKs5Ksd7g32DJmOwdikGvgimJQGeqfeVVEPOSSMPg9yuHINirq54fENLKl
kjEY0y0wnFaWj+IzyV6NLwWDrY1jikc/UHDPKp+o7knFYPSv+JZT7bm4f72U
8YcpE4PVTsMrDEtojlAs25ZaTnc5xwVD099ZaN+oo0XWWRjsa36j8p4JuQhF
SbjkBQZXI244WfJm4D43bCpKy8Zgr4OjsN9JNO/o7d0pZ5GDweY9FHZ/tyTc
j1fsLO2l++bnBQGrIQmof3iSsJ6Xi0GD1hj3xvxY3PurF2vZ8ujr0fIblYQx
qJ58Pbl6i+6CZzq6vD9Hof4zTD57ke4CQlR1yflw3J9MtYvIUjBoqJx1d44h
FHeaKQ/7Pbp3KW5scxcORPHQh90i0f0wu+/DrWq+uO9g/mcfpLsDs75fuIkn
ui/+UdcaoLtx9D4rUWY3lL8SJWMrdN/PnPRt/wUH3PXD42dY8+n7UNF67QiX
Fe6xbos3ueleqr3GISuqj/Ii/50SvQ+AUR+6b3MZA4ivn/qvHwfdK+Q7CwQs
TXHvHUoFm+iuv2qhz/fIDvdEm2rTWfp6hDmv5+w95oS7iq7R0me6v+I/5cLp
5IF7tpHrQi7d7/BVU4Oue+MeKXlLVpvuJrc+Rj/aHYw7W6TCI266C7GyWQ0s
h+F+8GG1SCv9XLqnsrWFZyJwF+gR+XSc7pWROoeeNETjjj08J5NOjxPLZNa8
Qf9E9L4CJd1SdBfa+ybI0jEZd4Ovvgt59Di8Nadvv/wqBfe2vGqL2JcYVDWX
i7JOT8M9ZtDGg4ce59W+zR7Cnlm4K8uSLVPpeefR1yfpfDofdwW2IOUEep56
bjjeHdMowL2aIi4ZmojBsIWXU+lSVNxX55J19Mn0vNDRDPgpV4ie42k9/DQG
g/9yO9vfvfwK96caYoYiQRj0db07ccyjFPeUTZnZNffp79UaFxzSA3Hf/pnj
cboVBs1lPEnLMu9xTxZxt3SywKA6NOhJtUeumjHWvNUMg+PTQxbTK8irDjiE
VxtiMGMepKsyVuG+MLY3PuQCBgsmtwv85K3BXZEyNOfPR68bFDttRoV63Ke+
PSL78GLwedyhP5GPkce+Dcpx5sYg1thP2VeMfNdZtXntbfQ6393eISrzCffn
sxIycRs0KHR7MW5UtAF3Ya8KqepRGjy0d6LuEGcT7o5/brBa0e+726JHSh/3
f8a9Zf16OhCkwTbhrBv6RV9wH/nlfL7FZxZusDBem3j+HfdrV//E8j+ZhscF
HVLLLYZwfzbGr90jPAmv3ivxUPcdxX0P4ynFM7JjkOma80u14Anciy0k6gsE
huFfTZfTyOtTuLd7R+QdTumD45bbNWYZZnGvrSXbTa12wEL3cF/bkjncOSVG
msL7OmBaTWVD1zvkex6wfz36vgNOb537rPgB+YxdCqO5Twfs5d3GN9WIfONV
eHY4ZwfU9mF1oQ0ip+RfuYcd+AovutvYktloaJ/ZXsttP98OZ3+vBjroIc8Y
VomqWW+C8ttY5We/IWeoO3q/vLwJLo+pD9f3IFfYOM2e59wEdTQtShL6kTtP
Xxu2X26EzM2DnRLjyKc+dXOkzjVARp7Uoe4lwnomjq2F9dTDhLlD4uFcGO5N
JB9j5YIa2JcoW3tJFTmD552CK9Y1cMAyr5zjLPJ6lVlRE4ka+G9MP6w9j1yu
M6vVNr0aytv+Pc6nhfwAy88zF0lV8LA/SLp6DXlc08t7627vYa5JDv8eC+QP
TpO+bgsvg0fN/n4/7od8L4v+6987yiBTnTPJKgB5y4UbkeORpdBDJyF0MhD5
qfcStS9JJbD58oXvDSHIhdmr7aaTiqHlCZ3RI5HIA6KmPJ/mUaFdv6a1ZwJy
+1aVP4LSVBixJXxPQCJyE1HPHhujAthrUzPil4S8Xej39Q9mFHjdc9PH+ynI
L0e0yXHZZ8Nf9lere9KRf1b0rAoOSIWOGVseKWQjtzqjxnI3OAVSXzSWfiC4
/k+g+3hvMozJfbRTLQe54qgUR7EEGa44LuyQykW+HKjmflEmDtJ2BhVHEjwo
1zjr23ESTL4SabNEcK2eCK5hEAnFdkeIJ+Uh58okXTY+FwGXFG+ITxD89gWe
Z8XRofDJaVUgTkFep9lYkZISCCsGZe7fJviv/ku6vrm+0K2Hv+g5wUsPk1Xv
lnhCwf7F7eUE10g03OLl6QbzSVSPPoKLcbBLHI11gD/zNLauEPz+Pv/WUkMr
aF/xNue/vuB/PqkjtMTKoQ8vmfy+zU3w4Nda/348qQrspbcf4SH4Zs+4obsH
7gCX/FkeDoIz3TB2D1qzA5X3ErgYCD6taso1MOYELvbtE5kmrGfl9TTPrkkP
8N3HVauJ4EELLH567f6gUHFoxJHgGTvt7K3rgsHqnnWdMwQni3HsPn0rHOh2
CnVuITjJVXKH6tUoUHg+U+wh4VxOkz9JMCsngFqt9V4aIU6KhAcWnQ4nAbNA
QVNXgnuzdp/+wZECtuz3+ZuR4Mypa3+ubqQC0X/yDFdeIn93OvnTwEAm4DVa
Peubhfzco0Mus8kUEC3e+FSOEP9Rw789W0n54JPaRRfNZOQujUzHKGEFIOUa
HNQn5JHEh+GWF5AKLuz1mzAg5KOjxi0O/oIi0MSlN8MYi5xj9W6/YEgJMP2e
xjpFyHezq+XHP7KWghkvkWKvYEL9MX632dK7FBwR2N+8Kwj51rbN0SkuZSBJ
ae6imD9yz53i5z9avAVMfP12088Idc9reLH7bCWYbT83wPII+RPruqzs1SrA
c7lSPv4K8qupF0pOKVeD/SFOf3NdRi7zauxavXs1GL/iFOqmjVzT7jJDG1MN
UOKT9Ve+SNi3IvbxRI5a4PPiiftVZeS7zTsjeYXrgMBHcLjrL+Th5PSgXyqN
ICL/op/GPLoXfkUdiVItbgPDrbbG7FbIudmdSKTd3eAsZYf8xi50360VHbJ9
ojsIVgYz3RL+msFdmkWo90zVCMiQcXQ0qJ5EdTj7bYFY1jhoIdcJ+YqN476u
vVC5fmcKRJVNn6iaH8bd0qU3mztkBkSJnuIbOT+AeydDH4eyyhw46Hm2tle3
C/f92Yzh2+JpICwbHIKmrbibsnld2pVEA/9MS6c7nkNu6c8WzpdGA7IaN/ZJ
H0QeVXk6ljmHBgxYJQL3dKD+Z7RUPc3/DQ3UV2lJKQ63oPrwYqxBpJMGrMtc
SdxrqI/aO8UIqNswUPZ1j2v4QdSP5fXEk+s5MeAbyPJceBr1b/f1LI26uTGg
2b41PC8PuR9rEf8oHwYKfzl4UGWR33poeDZJFAPd1F1ddqfqcE8Pmv6SoYiB
wN0T4RPatbhvyQjRWjbGAH9F6BCr7Qfcz1/vdTYwxYBy/R/yOwnkp21U+V6Z
YUCr0VDAYhT1t99VHiWqW2Lgkde9imID5DzmYpWbH2LA6KFVhbB/JepD7FLq
cj0xUBQ3ebxf5i2qM361JAdvDDgn5glSM97gnvN+qumELwaMi8qPOfMjL/uL
605cAAYqXRzjVhjLUP46JMjNhdH99PAEueM17hgllL0unr7OreHvCpzQvPBr
hHlxmYwBeXt2Dz4ami9+Xtc9KZSIgdflaQKuJsiVjrN3aiVj4Cp7IZNFDJpf
1KPabeXTMaCkKm/VJ5+D+iL+hlMCGXRf1HptJpyN+o1MAdMluutwFl4bZ3uJ
uwhTXVVAFgakh0WW2noycY/ZeAtVsjGwEq8zY+iaivui8rTRt/++h2rbqFLv
oLlMxKjYwCQHAxEzHLIbcUm485HsDG7mYmD1mbay8Kl41C9J8xk10f2w1vX5
TPZY1Ffkvq+QzcPAt8Trf4v0ovnxb2qSzwDdDQcuv9vqhuZNbbVk2kEKBnRv
FSnOxoei+t8kR71L94IqWs6bU4G4/zis10Cm+5KcraB7rw+qb/ITSnV053G+
NKrs9gzVW8ogyxTdM+KuFNBOOaM6ryonRZ/HQdJBJZKBG5rHKaSRLE6666XJ
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
XTtlC/8DIGO3Jg==
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[CompressedData["
1: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
DO4gs16mD20GToSb44y4icwK/Dd+Hedx777628p9bS4Q+3q8K+K7iVwR2lCc
B4/BX/Ln6PtQviKeiOvisfzitOflL+CN+CzuKLNBpi9tZhzbcAucKfZzmZX4
NH4Dt+N/o79g7OXu+Ud8P+EXpT2L8+Kx+Ct+OzxXT/r42wh/iXmb/kr8Sfx6
vHHy7+DE/D24BP8F9cXYp3nn4vuAkUSmpZ7M9Kb09rRv5QrRjsX+bYyTOYjn
yWSIv43wt8tVpk+mPxLvDd4VXD/WPh6vbzNOgj/mFYszvLqkvnXmS7Evy5zH
neTedJ1+tNmxNeBWOAtuJtOB9l08i7TjsXcb42W+xvNldvCr4Cm4Ab6qbiA/
Qe5ddVJ1T/f/hFc8/v6EV5tL6XtRfZm+WfZT2eyxnuid1W+5Xn/enFjWuDXO
Gu8B2Y6072WL0E7gAsYEmW/wApmd/Kp4apzj8ET+e/gePXvj9xF7r3pNfGeV
fUl9hV4x9mzZ/bI54ryJL/CfwG+71gCZuXGUwI/jbLiFfCfaD/JFaSdxQWOi
zLd4ocwu/n14WrwH8CT++ziZnn24NP9l9dXYu3kHeDnxM+5/kfck3qi3ZZxB
ZZKYW/Lnmufxk/Pb8LPzTqmr8lq6znPqM/T19M5yh+jF8CleIWM37X6Z6bGO
ZCbTytBekbsW+zW+hLvIbJIZSEvqnq348+kp6G3jOaTl4P2J7+ONj4zeVfgs
fwPvCfnDvOL4T17hOJfSHpCZQXs03im0srRX5a7jD/Bl3FXmHZlBtAU4JW6H
c+K/1PfLt5ZdrT4XZ1v3f5OX19yPtzKeG30/qkvE+SjeHfKH5IvRhuEieBL+
jr9I7x75angmboin8svRXpO/EXs0vhLnfiOVXHu5XLG309fg8/gt3IX/Uzx7
+G/eYV5xPNw9i+LJ+Htee7xYPqO5Szy3+qrzZvEa0afF+won530a72f+6+qb
sT/zrsa530gt00FPbnobelfaz3KlaKfxj/wSsQ7UU9Q/0Du45xL5TOauvKXx
vOqrwZ8dv5t4f/Cv4Yf40/B0/VtwCrw/3s/yb6hvxR7NuxbfCYw0Mh1dIw+9
Lb0b7Re5e2lnYu82psocwktl9vIfxHPic3efJrTr+GE90/EM+a04Je6FD/BL
mkck/f//d6qo/3/arUP2
       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
/SRhm3ZtpSrbS8593fnG25AKQswv/e1fNm8/dHeePMtgv563npSXUjH8oSb5
0yoWRonbR8ObGShUkj0TokCDWp752SBxFrKGjIrldvUiKWmnclg8DfvdGzo8
5Vkof/rM2PdpL/bUJ6r9XUYH34lfP4xUWdhr7uV7iqsPt/TK3h/3omPHfUWa
+hEWEg/dvh11uQ+0y3XiWWNsjr355iB0hoUVnmm/ZDv70LpgpmlwkgEhlmtZ
50UWPlU5Lqgo98NxNmahq56Bnp2XJAecWaArvUt2jO9Ha/SzyO07e/FNsVyx
soWJ1vsSe07M5+LMJcmxpRX/odpb3ehoHxP1S41fubzMh8DZOfKbVQSOOH+W
SRthgj8i/PR+7ULs2yc4GGYQDSpzXYXnJBMjV3h15XqLkLZ332fx6QS8fvaT
6xsHAcPxbnlNzxJ8fts+0DGdBIyT3DtXE+D1iT/2S7QMK12E9GQupSI2yay8
U4KAxo4UmfnachidNkg5S2Ygwv6dzBsFAqDs/p3jXIlr8hEzH3xfY4e03Ik+
NXZ3XHryyHxVNbsrgjM+ueYiQu2b4tmj7PMltuP9qYIa3PNppGjsycfr39Tm
bFMCdx3sds9k1ILbWd+D9a0AbfsNxW7aEtCaOrXe3KUOxtdPv6RGFUE5x1bq
oyuBDsqVuR7tevAHbdeaPlkCi+4XQ2v8CfzNv3vrqVADxE4dt7ZdVoajBidN
M8LZvrS1hBYw1oBdNfaz9W3loA0IB/glEjj8OCf9aDW7i9JCV+g9qQSH5Sv7
hNdsL/KIGAp62IQOnRNJPrrV+K2euVy0kkDft7BfP883Q/nwvXfHuWqRUk+1
tm4nIHs5Ij19RwuU1B9IPRishXjqjetL3hFQdsnZf5+rFUqBS1P319ZBMUFC
6RuTQJZ7+EHND61IXRXMnE2px+i92ByxGQIFU+avHTPaYPfzg/0TvwbYdoSM
JC8h4cl56FeLdzsUtmYqvLJmd2fJC9qiEAlCWGHA6VgHopU27hjQaAJj61Hv
TkkS8V35I0prO+FUe9oxT6gZ57vC36ntJCE2aDPGRXRi4ZOTg/REM+I3zP/w
1CBxcGrN/a0lXVDq25NR3dmC1Ja3FcKGJGRiRrkcH3bDYaPr5p7XrdB/0KYx
YU7CUeXWfPjFHoi9KjKbetyGSJUH3muush8vdzvz6ToKRO61UH84tCNVt9Ip
0oPdWd66OrN3KVhbeua+jWEHHP8Ibhy5x+6g05E7uVgUVNcFeS/IdUJ190Jg
+hMS5j65maJGVHQfv1OwZ7ETZ5LuJfMlsTv09IXNxcVUPL1ukbLsQxfkypQ8
tXJJcGU9IRckaFhi86lvSXE3GnacXEKtJmFpYLyx/z4N7umDhz2e9mDN0Sd6
u7pIrL7xNOnsTxravmh5LlOj4MrYVT3eDyQujaSWMI3peLTn18/kVxSsqvr0
5zZJQpzXsO1vFR3bDMV1+UWouKrmcaX2Nwm5TBf56q0MbDix9gCfPxWP1vwX
bM3LQtRT2TmBcAZW+xgZNU1ScYwn2ebwGhYK/lXxnFhgoFpv2cEHtjTkj4T9
vrGFBfGtbdqGF3vZHbTtdAmNhk9Sk1rTu1gYfmzz40NnL65eCvrv5SE6Gnnc
dfQPsvDP34clvK8PIpMVZzbl0ZFhH7pkjRHbc5rt3E1j+jCt1dNiv4GBzyt0
Pe5YsPC5aOTvFq5+vDlrIno/mIHuE5uSy6+xYCo70hd9tR+VFrm8+2cZiPO4
aRbtyYKF2Am9rN5+CFhMvG671oulEabXjjQykdPtJkuJykX4N979yXZ3Ubv5
o0QwjQm1j8t9ffeyucQ/dLh+SxgOCb0NlB1i4tCqt8G3Pxbgt2zto81xT3Ft
4kX2yh9MOCp6nrd3Zp/n5ODVMsfioTDq9WDPIhNXD72QXbWqBGvvlVReXJ2E
0v2d64tXsrvMgyN9Ib8UqRzPL64KTcG8oual5WIEUovt7B6dLkd/35rlxpwZ
CLU+brMgR+Bf0ibRQ7yVePtVMVbweTa2iPzacEmZwMhHwZVbM6pwaLns+qTl
uXC8URkap0Ng3eYVGhm6NRg76j+yvDYPATJzxTuNCYw2xD/W8KjFU8U+Ocu7
BdDo5o5bbkPg5I9E8sXBOnxoa520USjC42BJZVkngj2PbeXAqnrwfa7bH/ap
GLmv8u8n+rJ9o033Gj7XwyC2YCotvhT3bO0iiBAC4wHbSyZzGvCOc2LnapNy
ZFmVGVGfszsuUnWx5EEjeh4sDuVJVYL24UWLYiYBlWMjlyLPNiFm3SPRsIEq
5P7NmLMoJSC34rF9nWwzCs5c6SyPqIHpHbmh0WYC/aYWx9b8aYbDho0+ZHot
ilJb76KXwI7Mbd1lHexz/uU1XTywDpeWLutTGSFw/LSknlNKK56qbh397lAP
EdaH0dRJAoXJBcMaHm0YF7FUsTBogLcr9c0oB4mG2aMbLXTb8bNZvWNCphFZ
5uo77qwmET64sOelWAdm25/FLi5twt1dN69YSZD4qR6TbT3SAT35+uyhj02Y
EK89G7CdREnk7IvZvE4ItPzwelfSDHk7Pw4uNRIHfNycSv7rwmBRzP0jz1og
ZmJjfVKPxOVrU4PNxt045UXSBlxbYXFn2PWgKYnzb57rEjt64E2RfLfavA2J
8nOHXtmSiIn53CP5rwcCmeulPiu3I9pbqeOtK7uPDossMOwoMDQvTe8X6oC5
wsdlV/zZfLjXvJhNoSDEgu6gM9WB+g5Tbs1wEpl3vysd2kfFuvIq14etnWi6
M1JgmkDi9/yvlw3PqRA7k6U8+rIL4RFj6zuzSSRXhvi9XUKD5KE1KkV+3RDW
X6EqWMHuL46UN1EONFB4tt7KtuiBpXXyqrw2EjyPDPTH+mhoeGQ2z7eJguN2
KxKf9ZPI6bUTnT5Ah7Yu7/udwRS89wsYqxslwff84ubxJDp84/dFW/ymYOec
87DuNImW9PFYLz4GKiSS3Q5fpkJtnX9MHBcLfSp/bPLcGDAMGv5Z00tFtNMu
7seCLBi4xck6DTFQWvlMf8VRGmb0b8otbGLhIjefj5p+L87mK+hsKaVhRed7
XmVFFnpEFqVe5/XC6Enkp56tdBCZRbGd6izE3vDeW7ChD7rxatHKT+mw97T8
mq7Pwuv/nG65+/Xhi7Gey0pOBoIs1k+2mrFwU1R3fiuzD2pZ/fLkdQac4o++
0b7MwvPJDPLKiX5Eyadw+n9koIjuoF5+k4XoFBH3R2X9cLh9+OW8YS+oneJT
Sh1MDB1s1qRY5kFsQPWpw+oHqOx77rvsPRP6uxPa7fgLsHa7f97sjicwpBDN
MgQT70WOik+mF8LlkI3i4nwMVAbD25i/mDib/ERxVKUYfMOOb4OOvcAOfVuf
V0sIKMUu7nAcLUG6AvuN/T4ZzSlLx9OE2J7grzb13bsMTsNBClBLg9paV4Fw
KQK9ycNjdooVaO7x07KiZuKJ+8WvVkoEfBd1+iU+VmL2ytSpVJs32L/33H96
mgRYLBGBcOdqONh+V5UYzEUhr3jPmmNsji1LP/B3dS225PFWOafmo681s2/b
OQISa3bS3gzUwrGgusndrBBnEiOjP18hsOs3z1HhV3XoFBg8fvBfEQbomSuf
eBBwfeSwv8GzHkK7owzONpZg2WzogZB7BPTiKgO/H27At+VfOze7loF/l7rE
tUg2f1oOjYtINCLYe6zWXaMCc2dvlOxMZndc2FbjD1ONiGnatGdwSRUUP6et
5s8jIPNS0/JOVRP+ugjvcMithqZX5npqDbvXeh7dkYxsxtPzfYb1B2oxxeP1
+X0XgVvuzdzq1i2YsZhskhGpQ0CKyNm2AbZPqu1LNGb3T/m2C7dOzNfh9949
wYlfCSyL5VDlE2xD8RBbVD/Vo0jqrGfoHIF8bS6Plx/aMNBxNrG9qAFGW/TE
bJaRUFqh1rmnoB12AaKhJrGNCBHhueW9loTW0XP/HfTrgPrTVzXlrk2QEZMI
V5UmcdSyU5xTrxPRJqO77h5pRqvPhbOTu0n4ynZtX7WxC6zZCQtH+RYIUF0/
TRwkceRqSfwTsgv/zXS172P73W7V46J9x0l8aemXEa3vhn/dgnMdsxUqETlL
kyxJ+NUbv1GN6UGph/7bvo42BOmKFgc6sMe5l3yP20WBmPVN/38v21EooLf2
hBeJbYW3QjfEUzC4Zsr2+70O/Neuu8c6iISElM0FU24qxmUOhhRYdiIv+sUK
4WckVnq6Sn+3oyJw9ODUh11dGG2UeVKXQkIwqzMpnUqFUOAqYQWRbtR8vv22
uICEdUzsKSllGsbuZtw0/toNV8HonvB6EuuecoeuS6Zho0G04CFKD7p2BQTk
UUhsOD4037mcDqry9lnuM+y+tGubcBtkP35qzPT//4/vkxxZuq6GAswdENz7
nYSC816n1e/o6J3nmq5RoiLJy/u76h8SwVkzZRxg4LZ/ECcjjorPQoFe0itY
ODV9OswpiwGqU1lW+2oaOGNF6mfWsbDh4afhnaK9aGDc2sfrT8N138zmIRl2
N+kGrrD07kU7VeaCwXcaCj2W++TtY+G3QGvlCqIX/+3z3eZqRccL6/0/W7RZ
uPTM94WbUR+GdTWEl3ayeXW+WuLuSRa6lp13U8nvA89OE4nOfQwol7ks7LNm
89A4gHuzRD82L+vl3prGgMKSX8923WBBxGJjY6t/P4ZDK1ayhHrhv8HXzd2H
Bcmwh2JtE/0o0Egoj37Qi3SDAbdfNUycYA6tU1qXi4Id3QX6t29De9JW6kMX
EwJyO4yOZeeBg3Ml7dWLYHg/7/rbMsCE/5WJnuOWBbjab06+84vElcVgsXoW
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
X79EJ7rCk2OP3SPx04H/YYsJHVmlcUneZCeO6mS2PUslMSe6WSspm44TPHpH
kpq6YMHxvjCdSyJFdL3xHQkGFsXt/82X1o3j95cuO/mShM0dr5jkqwz4Cklt
6gjoAc3yktb7DoqrD18+3j3CANsxS5mjQcPRpSOtVQOUzgxF2t02ZyIq0e5E
WSINlxXfRi8hSPx4WxT2qpCJzPbPT8wpbpraGtvn9YPEE+VH2tuXs7BxxfN9
XL50RB5cJTLDw8GpqT65rmAWnh7fYf6RTUfoqVf+78Wpdo9zYvqTLOhL/OMe
sKVy5JfP5CoFDnw2GSd8PtwLtUFOV00rAy+Ot5lHaHKQdP2IY1Z9L+Zic0YY
ukzkfzy15rchBzYyBul3VPqww+v56QUZlP6cXX6lczcHM6fWSXLf7aN8tCrj
pigLATsP8MrYUd+vp/yS52cfjF+lD3VcYyFczYL/9EkOovaPv1U81o9x5c4b
WuMsrNGbFF7jy8G97ktSch398LqpKfDgaC/osQWpv+vZ2BG6ZJXc2TykH/17
/q9iALiOl3so0NkwFc79miZUgNtn9c5sbotA6jgrq/8dG71v7q20Li3EXP2j
O4d/xYJ7eoNb/RgbNzaZhPDsLkZu9q7A0NwH0Fe4a9v9m42putPNlz+VIGt7
Xt6R8kf4LMpVf0KQ4o3YzydXRlD1vHFcuNHgKZK3fV+VuoyA2i6L5BvrKrCu
NXDcMusZTj1IKktYS2CB17KPP99WwlkirPTp9mysHD9uJrWRgJe5/K+7119i
8gU3X1zDC3wIzGLo/L/+y7sijVxRg7CLpEdfTD4kXvHTh62o/Hij4OAm51rk
xLqHCxwuhEDGs911xwi86qry+a1Wh8hO63MDPMVgPdgxV3+agEvO9eBHs3XI
NnptlVlUgsUHZtfsv0pgc8FEo0NXPY7ozHJSL5TBzkLdNCCc6v/a/t1+SQ3o
/1Xf+Jw6j6qzkklnEqnzPTB25JF3I06uaLknNVMJrvCVnE/PqLxjv+rgqx1N
SGdff9xb9BIH2ZkbZkqo3NrLiD8j3oycoC/TT1xrIM2381t8E6XnXkpCskQz
FCwuznXF1GLc1T2zl0lg3bWZZtXSFlht71y9/2wdBsYR0/uB0tUdPwS3RbVC
xB2NoYfqkX5G+7Ld/+u/nyU2eTi3Ie3DomA33Qbc0Hpu6z9H4Np0ds7U+nYk
NhSO7BVtBL104wuNRSQi132xjubvwGvnp6vapxrxoZg3cOlyEi/S78QX0Dvw
K6qjQby9CW2v6aGy60isL59oLnrYiTL7muP2ac1YWV/AV7yJxOzEzNruc12o
Jede611vQciXJf7EDqpO7/vSTY26sW5oybS8Qyu49dWUhg5QvPFLibtNqgdy
XDtDK0za4BTs1HXYmYSEzuyKI6M9GPd5ZfhrVTuYIstPeXmRGDjzqDbjCA1y
hwxit/1tR4EDGSAVSPHbISkhtRYaEn+MN8u968CBNb9Ef0RS+drJZNWkCh3f
5XvtOos60SO24PXUA4pDyrvyn0XRMfrl1rjP7S6U1q9bGvCchNGqdQPuv+lQ
vRh6pNSzG/lFPbszyym9MmlYbe/IAOPEUY95pj2QOhk6c6yVxCNfDQG7LgaG
heuyxiVo2B4XsnJvHwkV2t7K+1pM7MjxtDQJoMGME+B/5BOl/16dH1vuUxwl
M/cjYZSGinl3LWcnSRgrrXg6n5uFfo5u2GZ7iu8Oy6/cwMVBXmxW2Cl3Fj6d
ejP2tp0O1ivXlRoiHPAOW2gf6WdB91bEIjtDBiwsO6TzZTl4uTSYwTTqhXfn
WI1KLgNvhApEaKoc3OSdibmS0YtPjWVbuWSY6LuVc/nqFirH8elPqIv14dKK
dflyt5mI8R89fmwnB4SKtpSCTx/+VOpYrZ1hQilJKcD5EAfCD8LK+N72gaas
NKnmxILa5UtiMy4csGSLJn7s6EfLTO01fyYLiCO/7fDmoPuwoen8F/3ofnr9
T+fWXiTRfZQ/t7Hh+9tVT25zPjQtNFnNPSH4K+HbmfqKDRtHY/3wzwWwHszd
URRwD1nZnzl9I2yc/sid3xFUhCtvt2lqH04A4/2qG8nf2TiV43DIX7wEET0p
Cj5/UmBw85IFuAlUSHV2DlaVQn+sb0L1xmN8D9CPsxUlYJS6sljkUDk4y972
TZPpGFqnTFOUI3BEt1PWgbcSUnWjivaXs+BV8GLrX3UCIZ2Gj1lFVbgRtfes
nnAuNixqzfurT+CSzeq53+bVWK3dumpHSR7WSguKvzAnwDPtOKg/U4PWt6dM
DK8UwO1y+cTrwwQ+9G6Ly2yrRYj0fiUFzSLI+W7eed+NQGmvQv+pqDpcE3fv
LukvhuwIjal+keIKxfC5my71eHEvx+18QincnvUO4AaBjhuu7xdqNeDPE81G
GfNyfJLmYXJFU7zkMX49eUEjQi+UHRAXq4SQRyd39yMqx+0bKGx81whtW/Lj
9tdVsL+jqNX4guKZ/KsWDVlNEDIWLC+4VY1PTln7PaoJ3Ejsft59rRli3+OP
6yrWouR20sTtTmo8796rM6HyT/bdXWZC8+pQ5VIScPQNAf3F3PdbqPzjevta
W8inOngs9zDT5xBout33e+hPKzTFBNpS2uphmpEvvO3/9d9gp47u1jbcTRAc
7X3UgEMf5Jt/8ZH4wvfQriO5HSIBkZmFNxqp/DE3q7qEBGJ3PtU61QFZzQKz
m0ebcDM559mEAgnB1nr+/Tqd2F09bla4oRmpW86HRqwn8cu8ybJNoAv37tQZ
T0m0gFct/fMTkOB9q3cgq68Lruu0ZZXHW/Cwe77Oqb0kjvw4InU/pxu2q5Vj
+BiteLdnthL2JCoXfXCXDu6BwzOvW4ElbdjzKNBI34OEoaVIjJ4SDT/UtFOl
Itvx9cmGMvISie3vePeP36OhSMzX6vDZDgz+sXoueovE66mi0/2zNPyqtRuJ
3NUJk0ljqY5YEpm27UsfUnV+bI/Nm+WyXfh6aFe5/ROS4uQnBREtdHxY/qWt
+l8XRkRrWO4FJP7O6T4vVGNgsnhF4sH+boj62X9UqiMh9lqeZ/g+A7K5DJ44
Kl/e0jt56ngPiRK9pvKt85gYL41+9nkXDb5x271U3pKIGev+fc2Zidc3d11T
LaYh23FzZvcXEnw7H64nu5k4cKnT6u8aSv+uJ9qNzlLjprKm8aYOC3EWspJt
9+h4v38NV+UCDlQsuUtVH7Fw4kD+M4KHAcP5u4aiJTlg/rg3ISPcS9XZ6dmD
Pgy03JhXHreGAw3buaMzXr34/IX9Zv9HBm6UDofs0qb0jateY+BtL6Td0sKf
/P+cqKE6zdeYgxoNwyMTJn1Y0qKqOlHHhIjT7phN+zhYkCe35NOzPsjFbfvL
VmGhbyYwjO7AwcdXLXXzxftRErKm4+QDFsjh1X8+eXKw55ZSx8FL/VhypD90
ZEEvFg79Uub24+DQtuIvBux+LD35donH1V4M7Qg03FrHRrnq1hXDBnkIMX2v
Gzfrh/lFoUzjHja4f94aVOrNx43k/Ay13+GQraG9lhxiYzxh45aLNwpxTP8S
O00hFj2zM0eFRtnYlfRXVFG6GDNO08sWvUnCn9YDKyZn2Zjv2W/imFuC5qT0
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
Kwh6e45/fzcbx0/9YHwpz0eQzljDWolwHMnontR9y8Zv3wU7+T0KITLrHN1S
EoPWZyG2J7YSUOow9nTvrAarp/TyGcN8aG9Zw7ttH4GNfINDaoa1eOMUve/Y
AkovyzIzVIoozvSwnujgNCF18JvZJZEapIiHif6pJ5CUXhuiUd+MyBJFnnjP
WvgenCat11J1Pf+9mNqFTvCFO6i5+DRD4LKkuAzFmedf/Yv7bd4Ff8vOQHm7
FjgsvVq+1ITit+mgkp2S3Xj1+PTmbK1WfNhkoaiaSFK+cZXudZWOSCmTIw+P
U/NlTeEi4hmJyxPOYXcIOoyHzj2tNOnGaKit90AJ5eOdcyKjexhgqbMsn8n0
YHcm/dBJYQ58S0v2aDewoL3yUtwfJeq6OPjMSVNc523gc5VPvRfP550t1k9k
4Er4sdXzKa77OcK5vCy6FyJKXHzOvEzYc6VNec/7f9/dk4JlHqVwPd36SvZV
Gvbqpo/ULCLgOEhuOihUjnfXr6s47UyHonWshfUKAu4ODyN3F1ag5nHjN5vO
TKQJrnB2PU+N8+HWKFGDenzdP5SSsa0UigJOSzMCKd04UBFnvrABcm8qC4R/
l8GjwHFj9v/P2Qkoeis/bsNPbc/g0UsNOHGsd4UqDwnHeU6Xf11oh/Mlv+FT
VC7pPXjwQMYJisNHlT5cWEJDQVv+mz2u1Oddgn+W+5C4qiM3GO1Pw5GFQSrr
t3cg4rhHkncw5e8JtqH9IzQsnb6XuF2hEy4/DM7ff01x/ofkbW2WTHw6IHn6
wCMabupoD3BTnFDx83TRgwpKhy8eFfEVoVPz70Rgxh4OrvzLOLglrg+WzrIv
Vy5jYcmF1PQFlI+Lfdhn2PiP0uHrzYenQlhwTLzRaO5O5dxh/QEv1374/FgU
8u471c7Xf690mI3WP7WiDTTKX/lKPmq7xuHhJJ3zcJwN+ZtutVPOxRCwvKBj
uuwhBveqXar6w8aopx7/zbkSPJQuLiuZfATVOj3VB8ep8YzMbDipVwfPCzPL
dVYW4+/n/kt5ZwjcedBoLctfj7Es71hjegnGDm6IuthMYLR4+n3992ZY9999
ppNWi9aR/Z+aWRSXflsmP9zYgo25jgkD/nUIt25yr/9I4ONesdCS5FZIpLy6
0elSD/LmlMSAKcWZqy+8/ranGxM7ft5K9myFYXW6bftBEtIr5DQ3rO3Bgo3q
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
RMWWV+v4KfjtUqSylPAoMSqfdFzcAEZE1z6XXUNHnCcjW5DwImFbyaGilyTQ
aDm2hmuTEScbwzNrxYLoQuVK0f2NaL2uau7KX47xtm2zQoS3PHsb+DC1ph3R
o1ONPz0acUz7fedqwls0tP05jxI7cLrysueGC014dLo3a9uJ/77HqTxTqtmH
8z4CGxqtOxCf3q2wnvAWpeYrd7du7Md5fY1Gbe1OfNkSqjNezcbJw/XKQrbE
POfeI/ZQtx9P7Q79u9/BRumOMrUffVTszyqyyVhHRsjdc8blyhwcEUv/17Jm
AK3y3LL9MTTic0Yuu0T4RpskmaOwqhbvxYqDhu8U4Ginzagq4Q+G23OTlq8i
enazerw+4SPDwsIzKwh/cCmO7ds41gKxq+7HL76vw61K44+2hCck3el5dNG1
Gz7Jg/vHbVrRp5NzVYfwgVoypfHqPzIMpU1NOXo9UGdyprcSfBd32vhVXImO
2uCwBK9ECjapuDtJEBxP3TPXyfYl1r/gzq64lQzo2tfyHyU4nvX3dcciiwk5
pTxe7UAGMvPvtQUQHH+W9lVy9m0JWqsypb4rREPgGIVuQHB8z5amGUokCQp6
AXWpqklIuJ90KkGDWP9VFtcufqvHz8DoMhebEsTNiW04T3B8oqYrdrl+AzKq
RHfN7SIhd9b5nDDBa1vlownzlDb0vAtPMfNvwMvgrzFyBJdN9YQWXl7oRfrN
U3UDTu14s174uibB5WvZ9Uctd/aBnKPzo12rAyIl7y4tI/j7LeFTiKsJFXn7
+0oqZfuhP8A8Lkvw1zJjg3jKAwYc8mMiLgvQkBfUX8QQZGHha8GXsd3V0Gey
fuhG50D7vv/5WwRPfceKIwMYNcg+n1Q6KFIAmev+wnXBLNTWy3TzSjQjLrTw
o71ENd59fnTXlOCjeEis7NztLgzkfMvwcmpBhF/boxMEBz99WvwgEE5GweE1
cTKm3TBZ8b5IluCdHBHuQs00cKIrk13WUxDrpFa8n+BaokfTowPLCY/a8IL0
8R4drjbLp6wIrikLXaQZOTOx7Xpmu9I8HQ9dTA2Kv0/gcv6aTsnQcvhlFJh4
pj8E07qk+bkN0WtBcZnTOo0I7ggmSauXo2DNl+ucjyxMnSv/dLuoA+c33//1
yLsJfE/qU6dM2Ti6wpg1o9SP3VWrbtXYdkJ1vtlfh+DR1+2OiUd5yNiieUSY
drQLS8yLxc4RPFJKecN59paKMr1tWyS2kcG8LiqnR3BndYlAnlTYAEyeGAXP
L6Mj20xVXYjgzp8kHTeNqTqU0o9pmce8gKsR4t5lEZ5cdDL703wLTv2rOb97
w0v8ZtKXjmxjw2mXkbSZUQ+aMq122Bu1YcLJYGllChsqK7T3JDlRkLxfMbBW
uRcX3SsOvVnJwadjfjfji+kIC1B9rryWCtWaV+vliDnPU/67RGCGCa68heh9
dxnYQvP+e7dvAnyrL6ytbShBk8GIClsvCpFPI7ZlHyV6/68IryKtHqumb1Zn
HitBWF2+tl0ZC/o6P1l7v7WiZ/FCSq7oK9BzQ6sPNBP+P+NRZ9bahjSza98m
XRpgtVYw/vRBNujf7X22GPTi9vT4tI9lO4Lac2035RPz/+Iv8mYOBRpBlo9W
a/chY7mDzGkJDu4JjqWm7GMgh2Lwe/wBFa+XCM+q7ubgjVqjXXcicd5ehlL7
l9MQdkrnZjHR6XeXpm+46V6JrKzO816fMtH4mctvhOhrB56M5W6CzXiYHBZR
zVWNnekL7mP/vd8X0BB7KqcTL4SzZ+HfjGWRlyrMvNn4Y0ZafTyIjEMfnN50
anfD7hvNop/o4htjmf5mZ2io0rpdNJdJhu6fCEewifsSOFyvV0cD3qvu0RSm
IOzqP40RYp6n24Rf6UwZwFba9abW9XT8w7SAljkHf7rTJD2XMNHmfPfQyzt0
LHWv7qYTndtxfvLuPqdySP0NzKyQf4iyE5s+UomeXfMq2yRMtRHZm94t79le
jvrjAgeWMogO1Xsyc6qjHc7adw7eDG7E7PMrj+eJOb/eKNV+TWYHTL4sKFg4
NIH7e8GRtdpEH50oMzc36sOW95PPVV070Ct5zG4Zsc7rxi1qY3b3QyNE+skt
k07QrH/y3SB689dIm4gBgwqPWQcNi41kHHnK15BIdOUZC4ldGzcM4E+4jURE
Ig1LXITentnMwtW60Q2xRO8ter+cGGkqwBhjQ/82OcIHurT+XBmow+pjss8d
zr6AdOnOlp/EPG/d53w4eLIFJFIyuWW+Di/7XsRorWPjs/HriDX+3Xi3z2/A
3LUVCf7Tbjsj2FDVOibQxEVBeoOWuNmFHtyTljHm/seGp9NC7FVVOs4abAmT
fkDwNC93519inndU6bYq3mKi8a1jt5oQA1pxL+MP+XNAZ9qpLp9kItWF1ll7
m4F+c1rdvtEJSGpOstWzSQiNjV/tlZ+EITlBy8OnWRAYr6sqP9+AQ51lKqNa
JNzUOfdnkpjPhwMFHDNH2rBgn6neENkAlYrvqxSOsyEhV6u74mAfEgVlbmud
6cASx1KTX8QcfniFOqpuQfhq2pztbpV+ND97mCQhw8HYvEefTSYDRcNdP1LX
0hD5zYRDIrpGe5/wui1a1cgl8cpQGnMgp8gj576JBalbDTVvJmvQXJ25fki/
AClL/uSlEl0jcKP2bvrOZoS5E4wleqhfkPVcL56FfpUW/UsLzVjhvvmx9VwN
3jYKSJzgZUMnTH9rSmIXrizoKH240QK+defsHMPZOGxh6SX6iwzuuw4Jfuo9
uCR66Jf4ZzZ+lBkJD3QS3nJoP3e6FAUn+lVeqF3lwDHjed9DTyaea4x3fFzK
gNK1X9Qooi+4Zw8uFXhYDqYGY6U8bwbSujJ624heeF6xTtp7exPm1xs6PRCq
RE2DdM92O6If01dtD1lJxofqywvrDIjz8rh0cOcpYv4fjZ4wixpAmjkpJWkV
HSsZndrVhD8nxZgq9lj0QHfFMtF0yzaEhR3KjiP8eVd7VUSXGwU8KdvvjWv3
gjT1W6GL8OGzFsutHSvp8FK+z+MvQcXqkwPdiYQPix0SYExtYWCZ8KCh/10q
lMYaH0sHcnAwPmzHugUmnN7tMsxKYuD/c0AWOw==
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0, 0, 1}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{-0.005511190519372305, 0.016867098896319814`, 
      0.004537662590305913}]}}},
  Boxed->False,
  ImageSize->{360., 360.},
  ViewAngle->0.34,
  ViewPoint->{1.1978574416847887`, -2.4526678832308426`, 1.999889447936638},
  ViewVertical->{-0.019420632723230694`, -0.009722235140808519, 
   0.9997641307671006}]], "Output",
 CellChangeTimes->{
  3.6368952416185513`*^9, 3.6368955287143307`*^9, 3.6368968002950573`*^9, 
   3.6368981452940903`*^9, {3.63689820126119*^9, 3.636898203444003*^9}, 
   3.6369896573314543`*^9, 3.636989834958963*^9, 3.636989873080366*^9, 
   3.6369900521343727`*^9, 3.63699011018344*^9, 3.6370000585459957`*^9, 
   3.63700058055201*^9, 3.637001290574566*^9}]
}, Open  ]],

Cell["\<\
Similarly, we can also add time dependent Hamilonians and or Lindbladians.\
\>", "Text",
 CellChangeTimes->{{3.6368983624444437`*^9, 3.636898388630775*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"LindbladForm", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]", " ", "5", " ", 
      RowBox[{
       RowBox[{"Spin", "[", "X", "]"}], "[", 
       RowBox[{"1", "/", "2"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"TP", "[", "Z", "]"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"4", "#"}], "]"}], "2"]}], "]"}]}], "&"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6368952040648527`*^9, 3.6368952180630817`*^9}, {
   3.636896833884636*^9, 3.636896844321651*^9}, {3.6368977283079977`*^9, 
   3.636897798461844*^9}, 3.636898155851465*^9, {3.636898228336989*^9, 
   3.636898271033276*^9}, {3.6368983113577538`*^9, 3.636898333343061*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{"L", ",", "2", ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
     RowBox[{"StepSize", "\[Rule]", "0.001"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}], ",", 
     RowBox[{"Functions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"#", ".", "#"}], "]"}], "&"}], "}"}]}], ",", 
     RowBox[{"SimulationOutput", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"States", ",", "Functions"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Functions", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Purity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "[", "outputdata", "]"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.636898165672378*^9, 3.636898197548003*^9}, {
  3.6369919627307987`*^9, 3.6369919638815536`*^9}, {3.6370612468105497`*^9, 
  3.637061271075625*^9}, {3.637061336732161*^9, 3.6370613401992064`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxt1XtUjekeB3BdTjWymIPSSqMxhZqig3I332jIMKQSIaRCjOgilwwjQoMo
pFI0qNwihUREF6RiqVCSVO9l33e7697dT5dff5y1zrPWXns9e7/7eZ7f9/N7
9zvWY6fTJvVBgwYV9Lx63/93KLB/5F37mqAQGJ33Erl31tH8PCrci597S+uQ
MeaoxDHjMpYb5Nuk5A18n4AnbWuLq4/V4WJM77iJrmYt23lz6vC47/q7kBgE
XKppkKNn0vNJKi5/y0/+IUNOv3+AjOU3d4Sfk2Nw2TXfuYMfQWdEZcD2EDn6
lot5jATf77eZHJbD3O1MTrPZU7TNju5U/iWn82Qh6NIBzQ4/ec91c3uWeIGR
+beSQhzlkPbtl43x54bobzeWw3pq78hF2Psce09GRvvnId65LCLzhgy5zWY9
O7zEh7ZFRZ37ZNDtO89rxKZceqC5Tganvg3zMb3MM1zbUUb1vkGj6assGwcZ
aoN6FyzApz1v044vldF5i2CiCIi6NF8Gv97j+b5FZSBTY2Uuo3zeYejdQPMS
NRn6Hd5DMTkgeXeJlOp5jxcTj9u2X5NiUU3vBsW4wKYtfHZQSvUVI2dn9Ifg
LVKE5/QWUIJXsTOzi9dJ0Vfu1FJoz4jTdnGToq+cslKsmK21QLVGSvV/wJTW
IWfVnKQw7j3OmI+I2jh5hXiOlPL4CPeS+9saR0uxZXPv+ATDq4cKhY0SyqcM
OZXZzPQiCXpXG3m3DF5WJ90NkiWUVzkeFeo6f46SoKV3ueZyjHZb+J3jGQnl
9xnslpOyzjAJfulrgAq4Sb/U5p2SUJ4VKKryi78SIkHf8Y5+wXzXjEsL/SSU
byU8Lr6xuu8kwdui3lGJdG29/J8nSijvr1DedDY5py2BXt8Bq2A9b1TWJ6GY
8q/C0HAfm4Ufxehbzu0b5h8ou9JYJCaPaiSpGzknFYqpnmpc/ee2t0+BmHyq
UcA1+M3JEVN91XhY4GARfVdMXjWw82rIX35GTPXWwHaZRUi8t5j8amCYmf70
wjwx1V+LU9uk23aPFZNnLZJshn5kh4jRv1wthukbpBtqismXQY7WFZcn6mLK
h0F++FrXrWpi8mZwOlIVHK0SUV4slGsOGvowIvJnURVinZqcLaL8WEye2Jgt
iBJRP3BY0za8/I2PiPLkEKVhMGLSEhH1B4f762zi9GxElC+PHYWLLVMsRNQv
PNL2KxfN/FlEefModV9ytNhMRPe7AAGKyJpDxiLKXwDNtbbZLt+JqJ8E8Eq4
4+LMC8lDiO7odDv/TCF5CPEs1SI+NVxIHkJkjvupu91HSB5CRGaEiAxdheQh
wi73s+Mky4TkIUJV1s1fDi8VkocIO7baO076XUgeYlSLQ7YetBOShxihKU3T
x1gJqT/FSLPQOb11mJA8JDDpeGk0TiQgDwnK7iUahuYKyEOCVTtSvb0TBeQh
xZPpU01unBWQhxTqj5Kbv54QkIcUPmdjlt/5W0AeMkT5GQqjQwXkIcOy0HEn
TgULyEOGczlvPhv7CchDjlQDRXrmKgF5yPHn9jpm/kwBecihfr9+tf9oAXnU
4YSP/FiihoA86mBdr/L90sSTRx2mTj58+6Gcx8BzI+xWZlyujKd6FJitq7FT
JuXJR4Ff/V0dtgl4qk8Bm1u7uOAKnrwUeDcp7VvgK57qVSDntMUx+7s8+SlQ
6TasYv8Fnuqvh6/bs+B1R3jyrMeFYGPRpj085VGPWOWYhI3+PPnWIynrW1GM
H0/51MP64KpqkS9P3vVIsVQ2OW/nKa8GOKyrPBO0kSf/BtTeX/IscDlP+TXA
3qdtw+PZPPVDA8xax443msDT86gB+eP9TN31ebpfG3DwavqGAl2e8m3E+tOB
jsu0eeqXRhzw3PcoRounvBtx9Y/OGa3/4ql/GnF5/YIjWWoD+Tfi+wjrU1eU
HPVTI6acqguOEXDk0YTQOZ5WX0s58miCwNB0ge4LjjyacEvH2KUwhSOPJpgl
hL3flsiRRxOiAwfZtf/DkUcTbjsN87Lvmfd7NEEtkE1LiOfIoxnSysgjK2I5
8mhG9Myy44pwjjya4e16uMT1EEcezeDNXaxe/8GRRzO8YrVGd67kyKMZ02NM
75Uv4MijBXqej5PKZ3Hk0YIQw4j7P07jyKMFBilDvDbacOTRgurnS21TrTny
aEHQenM7nf9w5NGCHZFTLN+ZcuShxPXNzI2a4Rx5KPHvCcq9KR0seShxsf3k
4N95ljyUaL+2T8KWsuShxIE856Em+Sx5KBGp7phgnMuShwqRZrnTV+aw5KHC
DH9127hsljxUOPbQc9Tzpyx5qGA094dd41NZ8lDhiN2H9E+XWfJQQWO9fLtP
KEseKhgm2zkZ+rPk0Ypjf50c3LWBJY9WeP4Wq39+BUserTDdvFLvtQNLHq3Y
mr76kE7PvN+jFUfdzRrclrHk0YqZJn9ayX9jyaMNgnfrSw+DJY82rLmoxyy2
YsmjDb4emg4Zo1nyaIPG2EbRfh2W/m/aYF7rMXlEK0MebYgIivxlXx1DHu04
2t0h2ithyKMdmSauRyrEDHm0Q7NwyRjHnnm/RztK4m5syeMZ8mhHy5fdK3dX
MeTRDo0qnRPRxQx5dEDacUBrbA5DHh3ImisLUqUx5NEBP/2w9PIkhjw6MCPu
16rF8Qx5dOCM0mOeSRxDHh1w2hftnhjLkEcHWMvA87N65v0enVAVhEt9oxny
6ERTV5haTQRDHp0wv1dvd/04Qx6dWKU7WLRoP0MendAQ37ozcidDHp0wsghw
xiaGPLpwuUb+4/ANDHl0waglI2+PG0MeXVgZ8fedoT3zfo8uXFecz3q4liGP
Loy6/VPF2tUDHl14YOkhyXUe8OhG+bcl+5oXD3h0I2i//qwptgMe3ZgWM8Jy
j82ARzfYnDfuTywHPLqRnrj30KQJAx7dmONg8rLYdMBjkG30tAwvv/8z/y9Y
jWm/
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5781085315264057},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{{0, 2.}, {0.5981986014537197, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.636895533406477*^9, 3.636896804273006*^9, {3.63689683965993*^9, 
   3.6368968474724207`*^9}, {3.636897731940564*^9, 3.636897799911063*^9}, {
   3.636898148390367*^9, 3.636898273150381*^9}, {3.636898318774781*^9, 
   3.6368983355948153`*^9}, {3.6369896655296993`*^9, 3.636989681851802*^9}, 
   3.6369898264088583`*^9, 3.636989891603273*^9, 3.6369900574174337`*^9, 
   3.636990113359646*^9, 3.637000061621142*^9, 3.6370005834580193`*^9, 
   3.637001293398139*^9}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1:eJxN2Xk4Vdv7AHBJxkKiCJW4CkmaDNFCg0zdVJKrIpLMUcqQyDzPHPNMGQ6H
hApL5kyhZJ7n6ezITVH8zn2e33evff45z/P5Y++1137fd73vs4WMbK6a0NPR
0V3ZQke3lfZvojrqxJ2PgSPVHO++sLw4S/f/P6c348mcNC8X6Dl6ScUA/M9P
HJXi2EZzJpUGOToVG9x3u9c3LpExMM9yy9Dc9inu24zyW77SXHxVDWtTdsX9
mMHi3mKav6+yXOLx88BdYD7gtd9/riWQA2x9cO/+ylUrSPPGV5GsL5RDcJd1
5lEYyMNACcdHk+bIMNztZPI2wmleG/5to8M3AvdY4WHj2VwMpCk6Pm5/SML9
8vZailwOBtL9Hgl6KSWj9YTUuL7Lpq3n1F75Y3EpuF9U3Rt3guZhyQf6+SJT
cWfwu1rI/goD9x16WEd80nGXy1u3epCJgcQXyk7SNi9xH5n+cDEnCQNrnrGm
rxUKcI8XLBoqSKQ9b2vrDyF+Cu4NFdO15AQM/I43vDxFQg5uH3AJj8PAheKG
D0Zhhbi/b+HP2IzCwN3RbNNDnq9xrxth2GEWgAHd2VbhugeluFt843jt9BAD
776bKT+XhLiPSuUkG1pjoFD7zrM/r5EzFdQGK1piYLZzpVNOsAr3tinqkwFT
DDRbOvCkpSPncO92y7+DgV/B5ydkKR9wP+puuDNDHQNRlvkD1o01uOfS8Rr0
8WPAMCD90JOVBtwHz9X1ZaZTwcpxtjpj/nb0vqK0ToyaLIKy2UPe5IRu3IWV
K0FU+TxQ/LG6b3/iEO4Rh9Yl9Z/OAiPbEna2njHcJW0m74ktTYEktbDPzT2T
uPN6MDT7fBoHSa631irKZtD1OeJmY4xHQLwdmfJMYB73SWOxVuHRXrBzfTO8
bG4Bd7oFucGZfzuA8cFv4eZ3qbgzgx0Smd0dIP3RidBhE+TuWde2337bAdxD
l7ZqmSPffevcS/isA+SOOavvfIQ8OeXoTu2tHWA488Up4IncUZiimcvRDpZX
FUlSmcjVlWezJtRbgMV6VID+KPLvNp8MDHa0gKDD7LcGJ5ArmfOIfP7UDDQu
e3roziBf8Gtly7reDNKCf30+iSFf7s3aun67CXzM0DeO+I1ceenwT2ubRuCs
0O85zIPhPqxhazAXVAsWLoy65KsgrynqHB68Ugvooo/PH7mA/JrUmG/Lrlqw
T3BlIl0VOUehckh8bA2oFX/o7KyJ3G60goE+sxoEyquLdOggz9+z8/qfd1Ug
8I3GPI8p8qta/j6HGt8CM/XTfVs8kbvczAE7td6CzM63X0K9kPcz3f620lEG
5mN1NHl9kP/+/pmS018KloKMCjn9kR9obhzvpL4BE/Psai9DkLef4q6V4i4C
+maO9y1ikcuGxzTWxxSCfvoiVvc45IPncuL1BAvB7uvbDoXFI/ee5xd+JEoB
Dq7r9TGJyKcOLA8uPcwDohLeiVqpyGuZR590lmaAv8rX7LVeIrecEX4alpsO
jm6vIv0keJ9Jy7J6chrQsDzUE/cK+ZZhXb987xTg1XS4uDabsG/unwfdcmLA
Nu+YL+Rc5EwylWylYdGgzmpzamce4fpFgxNTDpGAjXVstxXBIy7xfj+lGgq4
AkvamMnImRuac/JuBQKGmmc31Ah+YjrWaVLcF1CvmK67Edw8wHTUJ9gVRLta
JXQRXLF6Yaxb/Cn4YGQbs0zw0UHjjyrBVqBKyLyQMR85WfETQ3yQHlDluzq9
k+CBZJcHZHolqCwiKs9NcGnrk3uEG+/BjvjJ7B0Eb3206NrUYAev6oaf3iDc
V3gjQOq5hDO8kXdsZJLgE99+749qeAHTrBuyagk+mXVH4v4vL3j8m4F/HMHr
kwq2S0v4w5NbGANMCV56ULBNVzUMCviVjE8R9rnSNO45KScWprZ+XXEivC+T
aJHxGzXx8J+V1WoWgnP+M+nCPpAIi2eG8kNyCPFsOfWnkDEVKhb7jbgR4kFh
B3NHs0wmfFiSX/Azi5C/CukrbTFk2EOncvhsCvIFga1crRn5MK1IaeZsMnKd
42+jqykFUJvj+sfTSYR8J1VeV5ugQLbMcYwtgXDfEJE7w+tFUC3qdrcGCXlH
12sbevFSyL+SfPtgIPL42CvFb7NKIcfqz6MUQv5GhgodtxAug/4/JTRP+yGn
fxdiUC7wFtIxRlhIeCN/+UpBkpvjPWxkXLn01hW5tuGPf58vV8K9Zmk9xrbI
jSzTrpfo1cBf5HMeq5eRvy8ENl5szVDcZW1S9juqqyo/99l81mqGY7yhclGE
OpwxvDuWL7QZUuSt8mbmkUvfA/uDuVvg9/OyK48JdT5Iz3mER7AVulrKiAt3
Ib/skJgUcuQT3BNlKNZdjFzK/uDUtbQOyO0RWZdphTzUM2Zbdk4X7GT9oHS4
bhHli/0MaZvaIAxyYj/ctgedj8UfXZn+rI5CDXFVP509c7h/DDLTYbkwCbu0
BrpMnaZx1+oZstLYOgOXq6tjt+RM4L6W0P1NNGwOKlzQEhpXHkX5tYeLMTN+
AZbVBzd2yPSjvGaq9FDipMIcs8VswfXPuNtwMbwM56FCs6p5tvU+5ONtMycG
9lKh9+/N6s53yAv1fTx1/qLCDHlhHVsn5LKStt0jclTI11/BavmrE52Dcq0b
N+9S4ROF/GaDHx0orrrWc+uyqZDfR3qRvvcTOq+Dzl2kz6fSjv7Wmick5P3d
WftOF1HhkMRY1KgOcqXzPzw93lHh81O6TxM621A8P4KMb5qoMMJcUSG7uRX3
EBfLYdtZKgyrNFWQKm/GfVP3vaXGAQzGmsgz2JJQP7arhrlUVhiD04t8rVf1
kCff7VXeJ4rB0w6p9Uf5kefsEtndKYFB20wPv66kepSPV3IyB05j8JDk6OZw
Zh2qw7WHPz7TwGD98rjijyLUH357vNEyYY1B55ZtdmIRqC/97Zs13fMQgx5p
HRpveJDv2nSTqrPD4BtnFzO5mErcL7FMnvd+gkH5pluL4okVaJ+tnzvmuGCw
Cay+KMl6j3uTDX22kz8GOYevygeUof6ZR0nYTSYJg/2R9se2U1A/Pyqqni2R
jMHoXv6xtLJ8FJ9Jdiq8KRhsb56UP/6BjHtW+XRNXyoGo37FtZ3pzMX9y+WM
PwyZGKxxHFulW0FzhHzZ9tRymss4LOkb/85C+0aZKLLMwuBg61ulKgbkwmQF
oZKXGFwLu+VozpOB++KYsQg1G4MD9g5CPqfRvKOzb5eMWQ4GW/eS2XxdknA/
WbGrdIDmW8ML/NaCElD/8DRhIy8Xg3rt0a7N+TG4D9Us17Hk0daj6TMhDqNR
Pflyeu0OzQXOdfV4fopE/WeIbPYyzfkFKWri30JxfzrbKSxNxqC+Ytb9Rbpg
3KnG3GwPaN4jv7ndVcgfxcMgdodEc0k270esKt6472T8Zz+kuT2jrk+okTs6
L/5R0xymuWHUfgsRRheUv2Ilk6s0P8CY9PWAqj3uuqFx88z5tH2oaL9xjNMC
9xiX5dtcNC/VWmeXFtFFeZH/XoHWB8DID713OQ0BxNdP+deHneYVst0F/ObG
uA+MpoItNNddM9PlfWyLe6J1jfECbT1CHDdz9p1wxF3pusHKJ5q/5jvjzOHo
hnu2wbOlXJrf462hBNz0xD1C/I60Fs2N7tRHPd4TiDtLhNxjLpoLMrNYDP8I
wf3Qoxrhdtp76Z3N1hKaD8Odv0/440maV0ZoH3naFIU79uiCVDotTsyTmfNG
fBPR8/KX9ErQXHDf2wBzh2Tc9b54L+XR4vDOoq7dj9cpuHfk1ZjFvMKgsqlM
pGV6Gu7RI9Zu3LQ4r/FudRNyz8JdUTrePJWWd26Dg+JOZ/Nxl2MJUEyg5an7
psP9SfUC3GvIh8WDEzEYsvRqNl2CgvvaYrK2bjwtL7Q1/H7KFKLruFuOPY/G
4L9cTnb3r7zG/bm6qL5wAAa9n92fPuFWinvKlszsWivac7XHBgb1Qdx3fGJ/
km6BQVMpd9IPqSrck4VdzR3NMKgG9fpS7ZArZ0y2sppgcGpu1GxuFXn1QfvQ
Gn0MZnwD6cr01bgvTe6LC1LFYMHMDv6fPLW4y5NHF315aXWDbKtFL9eI++zX
x/FePBgMjz3yJ+IJ8ph3ATlOXBjEmofI+4uR7z6v8k1rO63O93Z2iUh9xD18
QUwqdpMKBe8ux06INOEu5FEhUTNBhUf2TTcc4WjB3eHPLWYL2nl3V+RY6ZOh
T7i3bdxMBwJU2CGUdUu36DPu47+cLrZ5LcBNJvob0+H9uN+49ieG7+kcPClg
n1puNor7i0k+rT6hGXjtQYmbmvcE7nvpz8ifk56EDDecXqkETuNebCbWWMA/
Bv9quZIWvzGLe6dnWJ5kyiCcMt+hvkC3gHtdXbzt7FoXLHQN9bYpWcSdQ2y8
JXSwC6bVVjb1vEe+9yHbl+NVXXCOdfGT/Afk87Yp9KZeXXCAZzvvbDPyzdeh
2aEcXVDLi9mZOoKcnH/1AXbwC7zkam0Tz0JF+8zyRmbHxU648HvN314HecaY
UmTtRguU3c4su/AVOV3Dcavy8hb4Y1JtrLEPudzmWbY8pxaorWFWkjCE3Gnu
xpjdj2bI2DrSLTaFfPZjL3vqYhOk504d7V0hrGf6xHpIXyNMWDxyOJQTw72F
5GWoWFALBxOl6y4rI6dzv1dw1bIWDpvnlbOfR96otCBiJFYL/40egnUXkct0
Z7XbpNdAWZu/p3g1kR9k+nnuEqkaSvqCpGs3kMe2vHqw4VIFc41y+PaaIX94
lvRle2gZPG7yd9WUD/J9TLpvfu8sgwwNTiQLP+RtqrcipiJKoZt2QvCMP/Iz
VWJ1r0glsPWKan9TEHIhthrbuaRiaH5Ke+JYBHK/yFn353kUaDukYemegNyu
XemPwFEKDNsWutcvEbmRiHuftUEBHLCuHfdJQt4p+PvmBxMyvOm+pd4qBfmV
sA4ZTrts+MvuWk1fOvJP8u7VgX6p0CFj22O5bOQW51SY7gemQMrL5tIPBNf9
Ca4/2ZcMo3Mf71LJQS4/IcFeLBYPVx2WdkrkIv/hr+J6SSoWUncFFEcQPCDX
MOvrSRJMvhphvUJwzb4wzjEQAUX3hB1OykPOmUm6YnghDK7I3zo8TfC7qtwv
iqOC4dOzyuAwGXmDRnNFSoo/rBiRsrpL8F9Dl69753pDlz6+onCCl0rGK98v
cYcCQ8s7ygmunqi/zcPdBeaTKG6DBBdlZxM7HmMPf+aps64S3Gq/b3upvgW0
q3iX819f8D+f0RZcYWbXhZeNft/lInjgG81/608rA7ujO45xE3yre+zo/YP3
gHP+Ajc7wRluGboGrNuCygcJnHQEn1M25hyedASXBvcLzxHWs/pmjnv3jBvo
93qm2ULwgCUmH51OX1AoPzruQPCMXbZ2lg2BYG3vhvY5gseLsu85eycUXO8W
7N5GcNIz8Z3K1yJB4cVM0UeE93I2/qMYo2ICqNPcGKAS4qRIaHjZUTIJmPgL
GD8juCdz79nv7Clg2wGvv+kJzpi6/ufaZioQ+SdPf/UV8vdnkz8OD2cCHoO1
895ZyC88PuK8kEwGUYebn8sQ4j9y7Ld7OykffFS55KyRjNy5meEEOaQApNyA
I7qEPBL7MNb2ElKA6j6faT1CPjqo32HnKygCLZw68/QxyNnX7g8JBJUA4/40
5llCvptcKz9Zz1wK5j2Eiz0CCfXH8P1Wc89ScIz/QOvuAOSsHVujUpzLQJLC
4iVRX+Tuuw5frDd7Bxh4h2znXhDqnsfYcu/5SrDQeWGY6THyp5YNWdlr1YD7
SqVs3FXk11JVS84o1oADQY5/c15BLvV68kajaw2YuuoY7KKFXMP2Cl0HQy1Q
4JX2VbxE2LcitqlE9jrg9fKp6zVF5HtMuyN4hBoAfz2Q7PkLeWh8esAvpWYQ
ln/JR/0bOhd+RR6LVC7uAGPtNoZsFsi52BxJpD294Dx5p+zmbnTerRcdsXl6
fQSsjmS6JPw1j/tRJsGBc9XjIEPKwUGvZgbV4ex3BaJZU6AtvkHQW3QK9w2t
pcqNe7MgsmzuVPW3MdzNnQeyuYLmQaTIGd7xi8O4d9MNsisqLYJD7ufrBq73
4H4gmz50exwVhGSDI9C4HXdjFo/Lu5Oo4J+5o+kOF5Cb+7KE8qZRgbT6rf1H
DyGPrDwbw5hDBXrMYv57u1D/M1Gqlub7lgoaqzUl5MfaUH14Odkk3E0FlmXP
SFzrqI/aN0sPKNsxUPZl77PQQ6gfy+uLi2/kwIC3P1O40Bzq36x0zA16uTCg
0ckampeH3Ie5iG+CFwOFv+zdKNLI7zzSP58kgoFeyu4e2zMNuKcHzH3OkMeA
/57p0GmtOty3ZQRp/jDEAF9F8CizzQfcL94ccNIzxoBi45/492LIz1or8742
wYBmsz6/2QTqb/uVHieqmWPgsceDimI95NymopVbH2HA4JFFhZBvJepDbFMa
ct0xUBQ7c3JI6h2qMz51JHtPDDgl5glQMt7inlM123LKGwOGReUnnPiQl/3F
eS/WDwOVzg6xq/RlKH/tE2QWQ2h+dmw6vusN7hg5mK0hjrZO1tD3BY5oXvg1
zrj8Ix4DsnZsbrxUNF/8vHn9tGAiBt6Up/E/M0KucJKtWzMZA9fYChnMotH8
ohbZaSObjgEFZVmLQdkc1BfxNZ3hz6D5suYbE6Fs1G9k8huv0Fybo/DGFMsr
3IUZGqr9sjBwdEx4paMvE/fozXdQKRsDq3Ha8/rPUnFfVpwz+Prf91Ata2XK
PTSXCRsU6xnlYCBsnl16MzYJd16Srd7tXAysvdBSFDoTh/qlo7wGLTSX1Lz5
LZMtBvUVuVUV0nkY+Jp482/hATQ//k1J8hqmuf7wlfesLmje1FJJph4iY+D6
nSL5hbhgVP9bZCj3aV5QTc15e8Yf9++SOk3xNF+RsRFwHfBC9U12WqGB5txO
lycUXV6gekseYZqleUbs1QLqGSdU55VlJGjzOEg6pEDSc0HzOJk0nsVBc500
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
g0Js1bYzCUUoHp7UHjsaToP+EdMeT3PQPcV2QN3SI44G7dqU/vAfQR62LXSf
PxanjIU9eqwN0X2nz7pm1BeLax0Cv69/NEX3puseWz5ZYXWGVli7DKddJu6/
7K5W96TSYKu8R9Vzf3Qvc0jb9kgOi78WZ1WY7j5Pwp3yqrHkI+Z6P4HOY8FE
VM9kP9qtgsVx+TFJ9iJxdB9cdVjcKYnVASsBKm6XpND9kbo7sCgc88Bso4zv
J8i4J14Jt17GXKMnjHMEhOMusjdMLAHLK5zpZC2j8+h+uix/Q2wS89sXuZ4V
RQbj/uSMMhDD8lademN5UhK655YPSVndxvzXwGUdn2wf3F17eAtfYF5yOFb5
brEHqkMGlnaUYa4Wb7DN08MV9zwyxb0fcxF2NvFjUfa4/8xRY/2vPrDa79dW
YmCBu135+6z/6oMpbYFlZnY93C8b/779X33w/K3Gv59OKQP874/sOPpffbDV
I3r47sE7uDvnzXH9Vx8w3DByC1y3xb3ifhwnHeYzyiacg+OOuF/q30+awdaz
+naGa8+UO+693i4aTZgHLjL56nagfkiB/PCoA+Zpu23tLOtQ/2Rt34b2Wcxj
Rdj3nrmF+i06nQKd2zAnu0jsVL6K+jMFF9JFHmLf5UzsZ3FGxTjcazU2+qjY
PikUGlxyPJyAu2kAv4kL5l7M3Wd+sKN+0bYD3n/TY86YvP7n6mYy7sL/5Bis
YnXAhzOJnwcH03HnNlw754PVAecfHXKeS8zFPVKs8akMtv8jRn57tJHzcP+s
cslZHasPnBsZjueG5OOedA0O6WHnSPzjSMsriPpmFwV9J/Wx8+igdoudNx/1
5Zo4dWfpo2iQfe3uAH9QMe4mvSnM09h5N71aduITM+r7zXqSijyfY/HH6MNW
cy/kR/kONO/B6gbW9q2RSc6of5igMH9JxI8GPXaLXfhk9h53Bp4B25lnWNzz
HFnqPleB+1zH+UGmRzT4xLIuI3MN9Tm5tCpkY67Q4NXki8WnFVFf9ECQ49+c
WjQo9Wb8Wr0b8okrjsGumjSobqtF186A+qsKPNJ+ipew91bINhHPXou796sn
blcVaXDvvc5wbqE63Pk+gcNdf9FgaGxq4C8l1B8Oy7vkq7ZAhb8ijkYoF6F+
9UibjRGbBRXuYnMkk/ei/vm53J2ym3vm4XrhIZsnOqjfvjqU7hr31yw8wiTQ
d7YK9efTpBwc9Kun4OnM9/kiGaif3xJbJ+AjMgE3NBcrNu6g/n9E6czJqoUR
aO7cl7krCM0LIoRP84xeGISddP3sikpoviDqca62T6cLHsikD90eg+YRIZng
EDRpgyYsnpf3JCD/Z+ZIqsP5NmjuxxLKk4JcWu3G/iOibTCi4kwUYxZyfWbx
gH3fWuFYiWqK3zvk9VUakvIjLXDrq/EGUidyy1IX8q71Jig4TQ8o29HcpPTr
PpdQ0c8wpycmtp4DuU8A0wuhmXpopWtu2L0LuXoHa2hOTj30ZS7kHeMhzH1+
2btTpOvhrYcG5xKEkXdT9nTZnq6DqYEzX9LkkQfsnQyd1KyF29KCNFaMkPOW
Bw8z23yEF673OembIFes/xP7QfwjPGOtzPPGFLlGowGf2Vgl7FV6FK9qjvyR
5/3yIv1KyHVPpGLrQ+SGDy3Khfwq4LRtUl22B/LC6KkTA1LvoZdvLdneC7lT
fA4/Je0dzKqcbjrpQ5g3FZYdd+J9B0v/4rwT7Y+8wtkhepW+FEbbx8nMhxD8
zMhk7Le3kJYbzFZHmMc9Yg39kO9YAH+NMi6txCKXtWNz56FS4M/rOqcECPO+
t2UpfC7GFKhwgq1TIxH5VbYCBrOXeVA1osNGNhW5grKsRb9sFqznbTjNl0bw
JY23pkKZUCidz2SZ4NocBdcmWF5DEkNdlX8G8iMjpOX2nnT4cvM9VCLMN1dj
tGcNXJLhkuKM4XfiPFTTWplyJwmSDIv0jQnz07BZdunN6ATIQ7bVv0mYt649
01QUOh0DW47wGDYR/LDG9YV0tiiol11ZLk2Y236Pv/43qS8S/k1J8B4kuMGg
1gdW1zCoqZJIFSXMhXVuFcrPxQTD800ylLsEz6+iZr07HQB/HNZtiCX4sowN
v1ufN1SXnVSoIziX0+UxRddn0CN3iGma4GnRV/Kpp50gu7KM5BbCHDxBVIGs
72oLc8mjGRwE102R1n3qehv+/zm72UTof3P2iv8BTlJk4g==
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[CompressedData["
1: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
KT+NuXPS//+3nHJ6/weyHSub
       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0, 0, 1}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{0., 0.003565729256971744, 0.4431528951528129}]}}},
  Boxed->False,
  ImageSize->{360., 360.},
  ViewAngle->0.34,
  ViewPoint->{2.2702476846254585`, -2.372103549801893, 0.8179854518694062},
  ViewVertical->{0.2480328196815988, -0.28665026561215623`, 
   0.9253709232439042}]], "Output",
 CellChangeTimes->{
  3.636895533406477*^9, 3.636896804273006*^9, {3.63689683965993*^9, 
   3.6368968474724207`*^9}, {3.636897731940564*^9, 3.636897799911063*^9}, {
   3.636898148390367*^9, 3.636898273150381*^9}, {3.636898318774781*^9, 
   3.6368983355948153`*^9}, {3.6369896655296993`*^9, 3.636989681851802*^9}, 
   3.6369898264088583`*^9, 3.636989891603273*^9, 3.6369900574174337`*^9, 
   3.636990113359646*^9, 3.637000061621142*^9, 3.6370005834580193`*^9, 
   3.637001293546753*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Force Superoperator", "Subsubsection",
 CellChangeTimes->{{3.637000095700424*^9, 3.637000096821127*^9}, {
  3.637000592629818*^9, 3.6370005967117243`*^9}}],

Cell[TextData[{
 "We can force the output as ",
 StyleBox["Superoperators", "Input"],
 " even though the dynamics are unitary:"
}], "Text",
 CellChangeTimes->{{3.637001077860835*^9, 3.637001100070724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulseSim", "[", 
  RowBox[{
   RowBox[{"TP", "[", "X", "]"}], ",", "2", ",", 
   RowBox[{"ForceSuperoperator", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63700059954135*^9, 3.6370006151670923`*^9}, {
   3.637000757494629*^9, 3.637000759357819*^9}, {3.637000855622957*^9, 
   3.637000857787614*^9}, 3.637001071104738*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Superoperators", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Super\"\>", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
        ",", "\<\"<params>\"\>"}], "]"}], ",", 
      RowBox[{"\<\"Super\"\>", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.37840124765396416`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.37840124765396416`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.8268218104318061`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.37840124765396405`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.826821810431806`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.3784012476539641`", " ", "\[ImaginaryI]"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.37840124765396405`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.826821810431806`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3784012476539641`", " ", "\[ImaginaryI]"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.8268218104318058`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.378401247653964`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.378401247653964`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.17317818956819397`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], 
        ",", "\<\"<params>\"\>"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6370006089900923`*^9, 3.6370006156308603`*^9}, 
   3.637000746288246*^9, 3.637000858624733*^9, {3.637000919416169*^9, 
   3.637000921381431*^9}, {3.637001061653648*^9, 3.63700107141922*^9}}]
}, Open  ]],

Cell[TextData[{
 "Alternatively, we can demand ",
 StyleBox["Superoperators", "Input"],
 " as a ",
 StyleBox["SimulationOutput", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.637065574263555*^9, 3.637065587645976*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulseSim", "[", 
  RowBox[{
   RowBox[{"TP", "[", "X", "]"}], ",", "2", ",", 
   RowBox[{"SimulationOutput", "\[Rule]", 
    RowBox[{"{", "Superoperators", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.637065560653606*^9, 3.63706556675034*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Superoperators", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Super\"\>", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
        ",", "\<\"<params>\"\>"}], "]"}], ",", 
      RowBox[{"\<\"Super\"\>", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.37840124765396416`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.37840124765396416`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.8268218104318061`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.37840124765396405`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.826821810431806`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.3784012476539641`", " ", "\[ImaginaryI]"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.37840124765396405`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.826821810431806`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.173178189568194`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.3784012476539641`", " ", "\[ImaginaryI]"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.8268218104318058`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "-", 
             RowBox[{"0.378401247653964`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.378401247653964`", " ", "\[ImaginaryI]"}]}], ",", 
            RowBox[{"0.17317818956819397`", "\[VeryThinSpace]", "+", 
             RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], 
        ",", "\<\"<params>\"\>"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"TimeVector", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.63706556874109*^9}]
}, Open  ]],

Cell[TextData[{
 "This might be useful if, for example, our ",
 StyleBox["Functions", "Input"],
 " are most easily implemented on ",
 StyleBox["QuantumChannel", "Input"],
 " objects:"
}], "Text",
 CellChangeTimes->{{3.637000765237938*^9, 3.637000767462535*^9}, {
  3.637001103602406*^9, 3.637001141484591*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"TP", "[", "X", "]"}], ",", "\[Pi]", ",", 
     RowBox[{"ForceSuperoperator", "\[Rule]", "True"}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.05"}], ",", 
     RowBox[{"Functions", "\[Rule]", 
      RowBox[{"{", "AverageGateFidelity", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Functions", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<average gate fidelity\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6370011562684298`*^9, 3.637001256102784*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`], 
    AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVk3tIk2EUxrd5mWEQRd4yp6ZWQ4dITZaR53VNGkWQpthyZhn6j+FoxihC
xGu2TCWjxFIcZCYklZq4zEyF0oocyeaVpTad963pnDo3u3zHP/zg4+Plfb/z
nvN7nsc/RRKbyqDRaOTv+++7/TGCThrT7V1UDxkTT/kZJgOuleATk1U20muA
YPesH3sPdgM/fzrgVeHWfi8Ioz/qytkGqOoLaj4w2wfcvIa3sqZFPN8P6hcZ
XvlBi3BHoD/tmaCBzn3R4UE5C/j/EOT6esPG53kgirbjvspRMK/lnRmzzmG9
nzAsZNcPsubAZj/lXn5/HGT+pY0eR2ax/i+QSs7xzBEzIOI0ljz6oIN4leu9
ad403jcF69XB3NxQPbQk7mdWGvRw8Wv2jVT/Kbx/BiD1ZH7U7knYIy/MrvKb
g+TvNT1f6DrsZx4mA90WmswTIGk1WmpiFiFJe5RZZxjH/gwgSBP2RZrGIC2T
w4vtNILjf55j2O9veJnBHa0N18JDecpyv8gEPoonqvXiUex/CboaHLXHmCPQ
pXj8Ot60BJ8GT9Ty64dwnmUICWUVl8oGwdj67dqA3AytHgG6EOkAzrcClcUs
9ptqDbBUdLYowAIpfo3p4XY1zmuBaE7CatwDNZzVh08Ot62CNLhU6CtW4/xr
cB3Xt+3pCnHcOgjwPMXDClewXr2bIkk7b4UKvI/iswHN2M9AiMbrcoENDmO/
FC87dOI8zgJXzbjPJrTjvBS/TfBEHpUcv96wRBp5jrwonjTCQJ5hyog66SE6
4SNvii+diFGPHkF8QdMSnehQL4o3g1xCPZNVkqvLHQwSiXpT/B3Ilh9WEuVR
3GIHYkO/UHo4EBH6qUT/zFd2wZHc3OY3R5KFfgzK7LC1BDqRCfQrpZcToa1T
fn5vHxqxGJ1IGfqd0s+ZqDAP5+XLSl67M9FhXig9mUSIeZp121Vx6y6TiDFv
lL5MIsI85ijYsnfxLoSLeaX0diFFmGdPjiDO6r+D7MS8/wFO1OVh
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"average gate fidelity\"", TraditionalForm], None}, {
     FormBox["\"time\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{0, 3.141592653589793}, {0, 1.0000000000000027`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.637001239200407*^9, 3.637001256956595*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory Usage", "Subsubsection",
 CellChangeTimes->{{3.637061363003476*^9, 3.637061367159149*^9}}],

Cell[TextData[{
 "Here we demonstrate the memory management of ",
 StyleBox["PulseSim", "Input"],
 " by simulating the same pulse, but recording different outputs. We set the ",
 StyleBox["Functions", "Input"],
 " with ",
 StyleBox["MemoryInUse", "Input"],
 " to record used memory."
}], "Text",
 CellChangeTimes->{{3.637064608790491*^9, 3.637064660426989*^9}, {
  3.637064930142425*^9, 3.6370649312932034`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"TP", "[", "XYZ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputLists", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Functions", ",", "Functions"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Functions", ",", "States"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Functions", ",", "Unitaries"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Functions", ",", "Superoperators"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Functions", ",", "Observables"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startingMemory", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"startingMemory", "=", 
        RowBox[{"MemoryInUse", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PulseSim", "[", 
        RowBox[{"H", ",", "1", ",", "\[IndentingNewLine]", 
         RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"InitialState", "\[Rule]", 
          RowBox[{"TP", "[", "UUU", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Observables", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"TP", "[", "ZZZ", "]"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Functions", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MemoryInUse", "[", "]"}], "-", "startingMemory"}], 
             ")"}], "&"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"SimulationOutput", "\[Rule]", "#"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ")"}], "&"}], "/@",
     "outputLists"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637061373570961*^9, 3.637061445406955*^9}, {
  3.6370614855062733`*^9, 3.6370617636875687`*^9}, {3.637061843096506*^9, 
  3.637061874287819*^9}, {3.637062435859028*^9, 3.63706243735922*^9}, {
  3.63706256041951*^9, 3.63706256304148*^9}, {3.63706445374286*^9, 
  3.6370644568890457`*^9}}],

Cell["Collect the memory use data.", "Text",
 CellChangeTimes->{{3.6370647204214687`*^9, 3.6370647245322037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Tooltip", "[", 
       RowBox[{
        RowBox[{"First", "@", 
         RowBox[{"Functions", "[", "#1", "]"}]}], ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"Last", "@", "#2"}], "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"output", ",", "outputLists"}], "}"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6370624592311583`*^9, 3.6370624963261414`*^9}, {
   3.637062968538691*^9, 3.637063121516428*^9}, 3.637064429868813*^9}],

Cell[TextData[{
 "Note that all of the curves are basically linear on a linear plot. ",
 StyleBox["States", "Input"],
 " and ",
 StyleBox["Unitaries", "Input"],
 " are almost on top of each other."
}], "Text",
 CellChangeTimes->{{3.6370646891578703`*^9, 3.637064706322006*^9}, {
   3.637064750726149*^9, 3.637064759142058*^9}, 3.637064936570421*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Sumulation Time Step\>\"", ",", "\"\<Memory (MB)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"ToString", "/@", 
      RowBox[{"Last", "/@", "outputLists"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Memory Used by Various Outputs\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6370617702855263`*^9, 3.637061779322741*^9}, {
  3.637062334975051*^9, 3.637062451086883*^9}, {3.63706250769058*^9, 
  3.637062521561303*^9}, {3.637062682232017*^9, 3.6370627373531027`*^9}, {
  3.637062936450732*^9, 3.6370629631747*^9}, {3.637064505599388*^9, 
  3.637064532225361*^9}, {3.637064666614393*^9, 3.637064686290502*^9}, {
  3.637064737249155*^9, 3.637064740142144*^9}, {3.637064797180993*^9, 
  3.637064798394294*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TooltipBox[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1ywlQlGUAxnHIqBgYY1xnOMaJ2xEIB5AgkeMRl/taYHdZhlNwCSZsSQ4R
FReYhLiPHUQJQSEDxYRc1zAKFFKHrEHIlIQi8oijIo40Izomnm/mnW9+7/P+
zZMUEfLntLS05P+e//7/f/NeI4YKAxGssXaBoAfqZc8Y+iVcdMnqzI2lDbA0
nNHaHUdvRF6t6v50PG2EiQs3JOaJ9CbMauY3yHbTZuioXRJUJtEW8K3SRA8k
01bQiTd6+GQPvRlGxs80din0Fij83Ibj36Bt8duklbA/lX4Vf4f5j19Lo7fC
etLtnMWbtANSeg0NrNJpR+glPfUo3Es7YUOpfF/hW/Q2NNfrr/teQTtD88M3
ut9l0K9hwfhl7e37aBe8UvzHuEsm7QpVktKzOot+HUW+woXybHo70u2Hrj7I
od0Qm2AomtxP74DNY68alwO0O4bmelcc8mgPfNWzNXXyIO2JM05xxWOHaC/M
dlXZjxymAXH+jpih/DUrAfeY9rlsJfedyB/9eTS9gPtOJCzGCJMLuXvDYHaP
Z3QRd29YmuBF7Xe478LDldP9y7RyF5I1Qp2Zo9yF+CtXdWeimLsQly/cf1Tw
LncfqPRMD2WVcvfBk7yOkyll3H2xGPw4VFbO3RftQ5t7nlZw94N2+61t05Xc
/VARr/YYq+Luj5xMv7s3q7n7Y3Sm6ay8lnsAZCXTAnEd9wCsk1s6aau4B2Km
y2/8F1oZCHM7k9iSeu5BCHUc+zbrGPcgLDZWzCU2cA+G6VBjTfBx7sHIzexo
mDrBPQTz2YmGXzZyD4Gqacr28nvcQ2EzWDPa0sQ9FH2uXx8bb+YehokC+chg
C/cw3Eq83dp5irsIoZM5+qrTa4YIR8rU+gdb+V6Evr0/te1uW3O/CHWCjDt+
77MPR2VZ+0n7M+zD4SjfNJ/Qzj4c+wWuUcIO9uEIdm2UbTnLPgJVXq1LeufY
R6DHosPuV1oZge6EF1Zvd7KPQOuqIF19nn0khmtsc+o/ZB+Jcq+s1r4u9pFQ
FNyTtnSzj0Rp39AHyo/Yi6FreKo+8SJ7MUKcuy2hZi/G+UhRmOkl9mJ4eo8a
r9JaElTHVxaNa9hLMGhbfnflY/YSFHhnL4/1sJeg2UFXrbnCXopHOicEdZ+w
l0KadmCjope9FPcanmoCP2Uvxe9pqX9af8Y+ChWBxlNafeyj8LazWZvRVfZR
yPkxNmCB7o/C9fXutV9cYy/DlWd6R9oG2MsQV2JicHiQvQzrXS75SD5nL4Od
mY2Z/XX20VBrDzQ/f4N9NKbjjtaN3bTGP+7TrhQ=
           "]]}, "\"Functions\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "Functions", "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1yw1M1HUAxvFDajTeNGRKFAZEeLxIwckBIdyDcLwL3B1wJ8xskIAkAxNX
CvESKCAhTCt3M1qhkBAvhifDRKIRDlBpIONFsTxJQC+TF5uiAtW657/99t/n
9/y+dkmZ8l2rBALBrn/Pf///v1lJwPKAUCZ5E/oLaPude9yS6JdQ+PqdxMIs
eg3uaZedsvJoSzwasD4g+Iy2QuH8kpOXmn4N6jqXn6zqaFtsMndIqW+l7ZGj
KVv5s5N2wJcuCsfpftoRWW84i0+O0ELMeFrKTO/QzjBVlWn3PaBd8bN1+yb3
J7Qb9rs//3iDoaPeb0MkEC2nm9HuONt7aWx6Pe0B0wj5wat2tAh9mTc/17rQ
m2H1VCVK8aQ98RxBwa9KaDGkc753g0NpL1zO9h2ukdHe0BxLv5CTQPtgacff
Z4uT6XeQkbohb80e2hcFbU9MrmbTW1Apzhle/Qnth5D6EN31Q7Q/7ptbv3i9
gpbALGvoVOsXNFDdXHlxX7XeBcB72TsSWmq5B2A8b/ctURP3ABxdsiv5SsN9
K8aUOvv7F7lvRflC9MPGbu6BcFg/e/6Xfu6BKAvUNXYPcg9C3Jn8/IYx7kHo
Hig6bnCbuxRV1esk7VPcpRC1mDeqHnAPRoPVwgeTC9yDcfp7m4nxp9xD4BJV
FepjsFG/h2DEpKSu2EhvQSg0mvYPO8y4hyLzSsy5REvuYah37YraY809DCmN
E0ORttzDISm6NerjyD0cmkfK1COu3CMQX3u4T+HBPQJqk6xqU2/ukSj5qxvn
/bhHwnW+uedSIPdt8JoI00rDuG+D8MbKeGcU9yhsPnHZwCmWexTyjfwPJSRw
j0byPXF37U7u0XDOVdtPvs89BnOdcTqLdL0Rg7vV7smemXwfg9sLv10Lz9a7
Kwa2H63JUBxgL4PHtxUF0XnsZfgjq3L3C8XsZVj767v+U6XsZWgsNpZ2VLCX
I1Fs13b4GHs5pie+7pWeYC9HU9WzHxZPspej7YxPXc037BXoES+Mopa9ArKh
2ajyBvYKrBPmzlm0sFegyu14WtU59rGofeug1rCdfSzChsNKMzrYx0KetFhy
rYt9LNzL04wdetjHYctgmvfePvZx+M75x9adA+zjsFaeGqIeYh+HmYHHBv0j
7ONRuldsNH+DfTyaCoxzXv6dfTyal/MKhJPs47Gqts/Ha5q9ErlqWa+fjr0S
+3X2izcfsldi5VOJanCBvRI2K0ZznY/Zq3BKeEV7+hl7FY5ObQwtWmGvwoVi
i4AEQ6G+VyG8d3zGyUhvwXbYDLskzhvrje2YGK15xWu1EP8Awwysgw==
           "]]}, 
         "\"States\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "States", "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1iwlQFGQYhpFBhSEZcM2EgUjlWMABvMBA5IXlkgVcYC8YLqVFJZiGKxkz
kUJpwJQjcCRMWTFqFDkkXLCULhcT20KDylkkiMYwTJBEEDCa9v1m/vnm+Z/v
Wb3rjRiVsZGRkWrh/bf/n0f+5ytL24xdHGH4QO/W5mfJkWRTLM3JywtLIFtC
bLV84pt08goEzpmm3s0nr4KHqta//AjZFr47j5c/qCS/AllOmNHfZ8hr8Kyh
4tfTjWQH5NV72ht3kp0gzskosr5OFuLhpPbgnz+SXZFr9l5+o568DpJl4wPX
7pPdkZ96bmjRJNkT3W2j5bXz5PUoW26UstvMycAbMLDN5YUPBOSN0K80txu3
I2+C+6Z7Co0zeTO8M1ZZNK8neyGmuz7b2pfsDZ2zVnQpiLwFa1pNa76NJL+K
M0PRnqYKsg8cT31cciOZ7AvH6cHBzj3krahRvtvmmUX2w2ihyYxwP3kb5g8V
DMvfIfvDxtZ8MLWEDBjXqCclFQY+BMgKXy7prKEPQL1mSdIeNX0Aso4VOU5/
Sh+I3Ei3jswW+kBUm3RJ4jroRajMTbld1UUvQpSgukijpQ/ChSsCm6++pw/C
Fo1znV8ffTD2ll1Y96KePhgHdbanfxqmD0FhlaqiYJQ+BPtb1l6vHqcPRZMg
7TvBU/pQ6NJViw/M04ehK/b8jM7E2eDD0LShtP+ouYGNtkOQk+ejsaLfDqlX
UmrrS/Th+DDxxBONHX041gTFZzo40IuhP1fstsSVXozJqM90fR70ERDNeH9e
vZk+ArdnK25e9qWPhNm1Kkd5AH0k/rFvGvo9hD4K953ala9F0EehV/3W48YY
+h2I7I5/f5mSfgeuTGv0SYn0EjiNaD3UuwwMCazqMnv6d/N+geMSZp5nGLhL
Arce4bxNNvtoTFxMtnHZxz4ab3u4ZE0cYB8NtSivfKSQfTROnL11vOcI+xi4
FNg2NJSyj4H1mNpyXxn7GOiumpr4VrFfuD/5+uXHJ9nHQpuQmVz3EftY/HE0
eOfcWfaxGDI/PFz5CftYJIjTpuwb2UthtnHsZl0LeylaK4eOWbezlyLb4l5G
cSd7KfyKZOUPrrKXoV9wyinka/YyKGdX3BV1s5fB6qkosaSHvQyCFCud9gf2
cmRN1chn77CXo22ppbXwF/ZyuK/s8BHr2cvhEP58QPUbewU6i3OE+SPsFfC6
8WXz2lH2Coiz/0pzeMhegdpQB1e7CfZKpKR/YW3xhL0Sez2l0qlp9ko8au+d
+nmOvRIX/d9cfWmR0NDHoT3+ztjhxQZGHDxTbwX2mQnxL5+1pRM=
           "]]}, 
         "\"Unitaries\"", LabelStyle -> "TextStyling"], 
        Annotation[#, "Unitaries", "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1y39Q03Ucx/HJJY1fhoyMCxeC8jN+CkyQ5V5MGMIYG2MbAxkhBBReUQkc
pqMdshT+ICNEIF2l0cFdkORvmMevOiBNNEB+CZ1Aix8HGakhKGbX9/25+97n
Ht/X5+mcnivPNGOxWJnPv//u/899gVn0vQMePq5gfmDAKlpz5bgbYza+u5HU
rel2Z2yLoV35A/KjHozt4Vq1xD5t58nYASkpXEuWjrwZffutu+xHyVtgPuN1
vd7Ni7ELFM3LNcJ3yNvQHGb2g983ZDeIeLUHzEfIHuAkxZrm2K8z9kKaRd3Y
1SCyN/IKeTwbDdkXLU69gfnFZH+kViRcjqkjB2CmNWBo4SfydvCLdxiqpsmB
GJn1tild5804CIMTDabZzeRgTD0sOjXPI/NQ76N68K2UvANlXxT2CLPJIRhn
STi3tORQzGQ4nnv3c/JOqNiravd6chgCD/kFbDKS+bBqLo0T9pHfQFXJpZWu
e+RdGEsvv1vzN1mAhU9XXrzzgg9joOOrHF3xy4x1gOAze36TK+3hkKKhSBlM
ezge2ZvG9RG0C5Ed+EugKIF2IZpMlevP7KN9N4psIvIrc2nfjcmM+GAPLe0R
KFnge6WX0R6BkOHJCvFJ2iNxzJBn+9tZ2iPhdNky1fUc7SI4r645uBhpF0H/
kXHubjftUXgY0B0l66c9CteOxZUcmaB9D/p7wt48OEv7Hjzj1+wNeUB7NJ7y
Mhdb1miPxgVfm/fNLXyZPQbne6/Pv8ZhrItB2WKhrQWXdjEEXlP729xoF+PL
6gptlD/tsQgVfP/oTCjtsXjiPnr7jpB2CXKNJZ3jYtolKO3b1GBU0B6HoJGL
k3ka2uMgeumsxYYs2qXQHs35+vB7tEthmrgl6CmgXYZfb6rNlooYQ4bVK5zH
K5/QexnYKQXu0+WM22Uwqbn6pirq49H4tHgt2UB9PNY+MJnfr6M+Hh+OKAUZ
jdTHQ3HYjtt6gXo5lBmuWcut1MvRvxo37NhFvRwh1w55uv1MvRwr0/5sh9vU
J2B6/i/HpSHqE7A0GrauZYL6BAxa/hGT9Tv1z99vd6p9Mk+9AuIbA1rtEvUK
cNQnP55dpl6B4tqRreHPqFegoyFgrmS9H9MroeKekFy0YgwlOtxXRUMbGeuU
0Cen8SZfYdyuRJvhrVfHuNSrYCoo13RupV6FqIG2rGpP6lWYck6r0fhRr4L+
nyNKu2DqE9F+ym750k7qE7FP4vFYCuoTUX1zIXswkvpEDLcld4rF1KuxJfXP
pPMy6tU4vsGgtVZRr8a2t00HE/dSr0bs2GJ1ZRr1STBZn3b5MZP6JFzt1TbO
5vjhXx0lqoo=
           "]]}, "\"Superoperators\"", LabelStyle -> 
         "TextStyling"], Annotation[#, "Superoperators", "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw1iwtMFHQcxxm9ZOZjggaBHRhgWAgIyiOQr4AHx5u74+50dBpvJD0MRGIh
iCKKQSIIolCZJAPk/VIeBZMxlQjFw9kQRwdhIiDxWm0yq8X3v/323+f3+X1M
QlXiCG0tLa2If+e///8341qZd7ZR28IMyws4v/1EphCSV2C6V37T34u8FqI1
ndbu3mQ9eNk+6NzuS9ZHdZPbQXN/shGurPe5JAwkG2OxRZ4ZLiZvwg9j5o5p
UrIpjs9FNRbJyOaoyGpbqlWQP0D3UINBz17yFkwm2YtMPiF/hOTz+UPPlOSt
CN9wdBs+JVsjVXJi4xthZBtYnTxbI4sgb4PuBWNt/SiyLZwEJZrwGLIdzEac
KjfFkrdj2vDNqQMHyTvwImzQ0UxFtofvvOJF9GGyAxy8tv4iiCc7QloQqbPv
CNkJpl3dmeuOkj9GbbDHXr8vyM5Ie6rMWEomu2CmvK+wLYW8E/OldiujU8mu
sMpxMdA9TgZulTh1t6cvcxpgPf6jOC6DfhfCZyWhGzLpd8Fgo+E7bafp3XAg
3TdemUXvBuV1Rd9b2fTuaJZYlZfl0Lsj/32xnfAcvQdelozEjebSeyCkQ6VJ
z6ffjVMDJ28YFdDvRln7Oc+mQnohBHcv5/oW0QshzAoP01ym94Sgrn1fYgm9
JwpFfu/pfEvvhY62FVcufUfvhcPXrutvvkovQmxzXERTKb0I8b+pn7x2jd4b
DY9fzX1dRu+Nek3K97oV9D5QeVYXFlfS+6AgxXK/aRW9L5TSnqWKanpfbNau
GjCro/eD5WrTyPJ6ej+cHtMb/LCR3h8Od+1Nqpro/RHf+uXC2pv0AZDtSLyY
00ofgLr+XsHKdvpAqJ6bZJ/qWGYEItvbQKP1E+8D8VAvwDi5c5k7A5E4GiKa
7WIfhMjeR8qYW+yDUL8qwK+5h30Qhv86NGFxm30QXi8vSi6+w14MO7nk1ape
9mKIFo2Sj/3MXoxA54TJqT72YtyrfCAP6WcvwURxfcede+wlWFfTOqelZi+B
y0vJ6thB9hJM78yyUD9kL0VNS7fQ+RF7KQwaoqKu/speijXn1V/pDLGXYvx+
zI1Dj9kH44jeiecDw+yDUZmhTl0YYR+M3OyIXJmGfTCm3c1qm0fZy9DVuX94
/e/sZUiOC303YZy9DK6Gn0fff8peBsGk+rblM/ZyWCT1OZ+ZYC+H3KXa5uIU
ezm29A9WzEyzl6N0btDZa4a9AqN6Y3988yd7BUJtbGvnZ9kr8JlmLk80z16B
pFDphZIF9nugyktrmllkvweyYwl9LX+b4R/fJq5k
           "]]}, "\"Observables\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "Observables", "Tooltip"]& ]}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 10.207853298776644`}, 
     PlotRange -> {{0., 101.}, {10.295170136405126`, 15.708814069371202`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.207853298776644`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Memory (MB)\"", TraditionalForm], None}, {
        FormBox["\"Sumulation Time Step\"", TraditionalForm], None}}, 
     FrameStyle -> Automatic, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {}, PlotLabel -> 
     FormBox["\"Memory Used by Various Outputs\"", TraditionalForm], 
     PlotRange -> {{0., 101.}, {10.295170136405126`, 15.708814069371202`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Functions\"", "\"States\"", "\"Unitaries\"", "\"Superoperators\"", 
       "\"Observables\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6370617880906*^9, 3.6370618482012653`*^9, {3.6370623318217487`*^9, 
   3.637062352639386*^9}, 3.637062386778988*^9, 3.63706245346875*^9, {
   3.637062487623333*^9, 3.637062522105632*^9}, 3.637062566663275*^9, 
   3.637062693214891*^9, {3.63706272494901*^9, 3.6370627379029093`*^9}, 
   3.637064467721807*^9, {3.637064506407012*^9, 3.6370645331786346`*^9}, {
   3.63706472768296*^9, 3.6370647408835363`*^9}, 3.637064940450144*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples: Pulse Sequences ", "Subsection",
 CellChangeTimes->{{3.636993662412716*^9, 3.636993679196891*^9}}],

Cell[CellGroupData[{

Cell["Unitary Pulses", "Subsubsection",
 CellChangeTimes->{{3.636898446637333*^9, 3.636898447380245*^9}, {
  3.6368997157723513`*^9, 3.6368997158675213`*^9}, {3.63700529634726*^9, 
  3.637005299280826*^9}}],

Cell["\<\
Define a sequence that begins and ends with a unitary pulse, with drift \
Hamiltonian evolution in between.\
\>", "Text",
 CellChangeTimes->{{3.636899642515444*^9, 3.636899662113998*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"TP", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"U", ",", "1"}], "}"}], ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"U", ",", "0.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawSequence", "@", "seq"}]}], "Input",
 CellChangeTimes->{{3.636899006320616*^9, 3.636899012927359*^9}, {
  3.636899387725371*^9, 3.636899397322701*^9}, {3.636899701694825*^9, 
  3.636899701985793*^9}, {3.6370078148148947`*^9, 3.6370078178539352`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[0.02], ArrowBox[{{0, 0}, {500, 0}}, -25], 
   InsetBox["\<\"t\"\>", 
    NCache[{Rational[1600, 3], 0}, {533.3333333333334, 0}]], {{
     LineBox[{{0., 0}, {0., 80.}, {45.45454545454545, 80.}, {
       45.45454545454545, 0}}], 
     InsetBox["\<\"U\"\>", {22.727272727272727, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {22.727272727272727, -13.333333333333332}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {249.99999999999997, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {249.99999999999997, -20.}]}, {
     LineBox[{{454.5454545454545, 0}, {454.5454545454545, 80.}, {
       499.99999999999994`, 80.}, {499.99999999999994`, 0}}], 
     InsetBox["\<\"U\"\>", {477.27272727272725, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {477.27272727272725, -13.333333333333332}]}}},
  ImageSize->{600., Automatic}]], "Output",
 CellChangeTimes->{{3.636899397571144*^9, 3.636899406270911*^9}, 
   3.6368995954135847`*^9, 3.636899702271717*^9, 3.636990130255776*^9, 
   3.637001309795638*^9, {3.6370078083590593`*^9, 3.637007818199113*^9}}]
}, Open  ]],

Cell["\<\
Simulate and plot the observables. Note the effect of the application time of \
the unitary U.\
\>", "Text",
 CellChangeTimes->{{3.6368996649645233`*^9, 3.636899691851025*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{
       RowBox[{"Spin", "[", "Z", "]"}], "[", 
       RowBox[{"1", "/", "2"}], "]"}]}], ",", "seq", ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.05"}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TP", "[", "X", "]"}], ",", 
        RowBox[{"TP", "[", "Y", "]"}], ",", 
        RowBox[{"TP", "[", "Z", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.636898449623501*^9, 3.636898452434846*^9}, {
  3.636898517811713*^9, 3.63689853631702*^9}, {3.63689891652457*^9, 
  3.6368990568020897`*^9}, {3.636899121161243*^9, 3.636899129756266*^9}, {
  3.6368996034514112`*^9, 3.63689960612776*^9}, {3.63699199389251*^9, 
  3.636991994940393*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxt0rtKA0EUBuDJZnazRQyCSLAUSwsLC8tzCl9ARcGIF0RTiJJKfBRRG1vB
QiwsJLKdVcTCN9AqjddVo8ZLNv8/wogHlmWZnW/O+ZnB5drkamCMGe482fv/
uhf3vmhk1fmeHu8r1W5ldyerBzlIt/e2bppS7dajLFU27dDltYx260kmmiNj
d+dXdFJxMrxUprCewHt2+xN4L3IIP4H3KiHOT6C0xKK/BF5LYq7De5Mj7of3
Liv04X3ILM+H12Z/+3V4bZlh//A+pcr54H3JMeeH9y09zIdjasz88L/RXq7D
N3ri7c/pGn2cl9MFL79AXX7wAp1j//ACt5/z5fWU88PLa7+Xn9Ui84Nntcx1
eFbrXv6hbtCHF+qil1/0p79I59k/vEjXvftR0DPOD6+gA15+sZa8e1j89X8A
03QL9w==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxt0L9Kw1AUBvA0/xqxCtJBV3F0cHBwCXxn8AGkIEIFC5Wqg1AX8TXcRH2B
4qBLEYRgNqeKg29Qpy5aNWrV+i/5ToYLHgg34eT87r3fdL1ZadiWZc3+Pen6
f/WRv1130upjqTe38HB1i6PDtB5Rq+66MzddbGT1hJPk4Hjvrof5rJ7hLC+W
x5v36iSw1aWXwNM+vRec6jy9V6yrT+8NK7o/vQGcbG2F9AaosB/Te0ed8zG9
D5zRj+l9IuD+Mb0hfJ4vpjdESfv0vtDWeXrf2FSf3g9WdX+NTei1Iv5vSX5+
+pZsGfcryLnen/sVZMLIz5ZRzY+eLWXt07PlwsjfkW316TlSM/Jz9Xz7IT1X
1vT89Nx8Xu/nSaT3p+fJpJGfL2OaHz1fprRPz5dLI/+i7KhPrygNI79ARrK1
HfG7JAG/w1+Wnw8H
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdzcsNglAYROErPhdahGuXFgA1WIKJbq1Ha9JeUBFR8QWT3AlnEvLnJPAx
X+9WmySEsPg/ze0uT7s3hNOxmfuwb3aOvW13ib1sd42tFfAKeDd4Jbw7vApe
Be8B7wnvBa+GV8N7w/vA+8ILWfd9t3y3vu/F1v/cWgLPLc8trw/PrQ3gueW5
5Q3hubURPLc8t7wxPLc2QU+zWXvz9AfSWoII
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 3.5}, {-1.0000000000000029`, 1.000000000000003}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.636898530636621*^9, 3.636898536711258*^9}, {
   3.6368989281382713`*^9, 3.636898959052655*^9}, 3.636898990337174*^9, {
   3.636899035432715*^9, 3.636899057103586*^9}, {3.636899125340581*^9, 
   3.636899130186687*^9}, 3.636899408222555*^9, {3.6368995960943403`*^9, 
   3.636899606358103*^9}, 3.6368997046947317`*^9, 3.636990132771459*^9, 
   3.6370013108884363`*^9, 3.637007809184792*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Channel Pulses", "Subsubsection",
 CellChangeTimes->{{3.6369906277463818`*^9, 3.636990628802154*^9}, {
  3.637005302797925*^9, 3.637005304923032*^9}}],

Cell["\<\
Define a sequence that begins and ends with a unitary pulse, with drift \
Hamiltonian evolution in between.\
\>", "Text",
 CellChangeTimes->{{3.636899642515444*^9, 3.636899662113998*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"TP", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depolarizing", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", "0.5"}], "}"}], ",", 
     RowBox[{"Kraus", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "p"}], "]"}], 
         SubscriptBox["\[DoubleStruckOne]", "2"]}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"p", "/", "3"}], "]"}], 
         RowBox[{"TP", "[", "X", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"p", "/", "3"}], "]"}], 
         RowBox[{"TP", "[", "Y", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"p", "/", "3"}], "]"}], 
         RowBox[{"TP", "[", "Z", "]"}]}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"U", ",", "1"}], "}"}], ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"depolarizing", ",", ".2"}], "}"}], ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"U", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawSequence", "@", "seq"}]}], "Input",
 CellChangeTimes->{{3.636899006320616*^9, 3.636899012927359*^9}, {
  3.636899387725371*^9, 3.636899397322701*^9}, {3.636899701694825*^9, 
  3.636899701985793*^9}, {3.636990634662106*^9, 3.636990718794055*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[0.02], ArrowBox[{{0, 0}, {500, 0}}, -25], 
   InsetBox["\<\"t\"\>", 
    NCache[{Rational[1600, 3], 0}, {533.3333333333334, 0}]], {{
     LineBox[{{0., 0}, {0., 80.}, {23.80952380952381, 80.}, {
       23.80952380952381, 0}}], 
     InsetBox["\<\"U\"\>", {11.904761904761905, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {11.904761904761905, -13.333333333333332}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {130.95238095238093, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {130.95238095238093, -20.}]}, {
     LineBox[{{238.09523809523807`, 0}, {238.09523809523807`, 80.}, {
       261.90476190476187`, 80.}, {261.90476190476187`, 0}}], 
     InsetBox["\<\"S\"\>", {249.99999999999997, 40.}], InsetBox[
      RowBox[{"\<\"Kraus\"\>", "(", 
       RowBox[{
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{"{", 
             RowBox[{"0.7071067811865476`", ",", "0.`"}], "}"}], 
            RowBox[{"{", 
             RowBox[{"0.`", ",", "0.7071067811865476`"}], "}"}]},
           {
            RowBox[{"{", 
             RowBox[{"0.`", ",", "0.408248290463863`"}], "}"}], 
            RowBox[{"{", 
             RowBox[{"0.408248290463863`", ",", "0.`"}], "}"}]},
           {
            RowBox[{"{", 
             RowBox[{"0.`", ",", 
              RowBox[{"0.`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.408248290463863`", " ", "\[ImaginaryI]"}]}]}], 
             "}"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.408248290463863`", " ", "\[ImaginaryI]"}]}], ",", 
              "0.`"}], "}"}]},
           {
            RowBox[{"{", 
             RowBox[{"0.408248290463863`", ",", "0.`"}], "}"}], 
            RowBox[{"{", 
             RowBox[{"0.`", ",", 
              RowBox[{"-", "0.408248290463863`"}]}], "}"}]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
        ",", "\<\"<params>\"\>"}], 
       ")"}], {249.99999999999997, -13.333333333333332}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {369.04761904761904, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {369.04761904761904, -20.}]}, {
     LineBox[{{476.19047619047615`, 0}, {476.19047619047615`, 80.}, {
       499.99999999999994`, 80.}, {499.99999999999994`, 0}}], 
     InsetBox["\<\"U\"\>", {488.0952380952381, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {488.0952380952381, -13.333333333333332}]}}},
  ImageSize->{993., Automatic}]], "Output",
 CellChangeTimes->{{3.636899397571144*^9, 3.636899406270911*^9}, 
   3.6368995954135847`*^9, 3.636899702271717*^9, 3.636990130255776*^9, {
   3.636990690214129*^9, 3.636990719061152*^9}, 3.636990854073558*^9, {
   3.6369909567433233`*^9, 3.636990973737227*^9}, 3.636991212231901*^9, 
   3.637001314286916*^9, 3.637005320130415*^9}]
}, Open  ]],

Cell["\<\
Simulate and plot the observables. Note the effect of the application time of \
the unitary U.\
\>", "Text",
 CellChangeTimes->{{3.6368996649645233`*^9, 3.636899691851025*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{
       RowBox[{"Spin", "[", "Z", "]"}], "[", 
       RowBox[{"1", "/", "2"}], "]"}]}], ",", "seq", ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TP", "[", "X", "]"}], ",", 
        RowBox[{"TP", "[", "Y", "]"}], ",", 
        RowBox[{"TP", "[", "Z", "]"}]}], "}"}]}], ",", 
     RowBox[{"SimulationOutput", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Observables", ",", "States", ",", "Superoperators"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "@", "outputdata"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Choi", "@", 
  RowBox[{"Chop", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"Superoperators", "@", "outputdata"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.636898449623501*^9, 3.636898452434846*^9}, {
   3.636898517811713*^9, 3.63689853631702*^9}, {3.63689891652457*^9, 
   3.6368990568020897`*^9}, {3.636899121161243*^9, 3.636899129756266*^9}, {
   3.6368996034514112`*^9, 3.63689960612776*^9}, 3.6369908623139467`*^9, {
   3.6369912368532887`*^9, 3.636991290637433*^9}, {3.636991998194536*^9, 
   3.6369919992077427`*^9}, {3.637001327989992*^9, 3.637001356269725*^9}, {
   3.6370014202563753`*^9, 3.637001428478327*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxt2X1wVOUVBvD9yq7ZbDZ3964UWwQ6TvyCoqNWokbPM5YZqaUqHyqSoC2g
WEWMrRSMtIKKWm0NIlRB206t2iAMhFYRLXpTdEDUNAhEdHSsCFYYUJKQ74Sk
m/s8WO9M80/Guey79z2/c56TGb874/ZJN0ZCodDycCg0+Pv//zTb8d9nVNZs
aT+92QZ+sN9rOnLEJm0avuTQxGaLfbhoymzviN2dW3fZ3ur8v0+Wrv187hF7
turi5J6/NNu+4c7Jz/R/ZQ3vDv7k//3V49z07V9Zx+mDBzbbwWlH/vBq/Zc2
In/apuEtVnPixx9f23bYxu+tzp/YYtfXL77ixeRhu2PwuKoWe2TMrIF/xA7Z
qpWDPy22tu2Jp+bvO2hvtA8e2GJf3loxs6j2gB2eOPiCLTZ0087oxslfmP96
uVYbMjJzdeMXn5t/3MWttjn8Uv/WG/fbTf5Pq/1k2rzYKY2f2eBtK2tabdKo
oeW/Lt1r/nU3tdqU1V5lcdMn5r/e3lb74+LS7Z32kfnHJY/aSatrx0+r2WPn
+j9H7cqDZ409snWX+eWrPGpLE8N6Mk2N5l93yVG7szp647C+bea/3rqj9kHF
n6cfStabf9ye/PPHP/1O0q2TQ5t+122mR5vdz+cePdqslZ/36NFmS3m+R482
28jv9+jRZj/l+3n0aLOz+P4ePdrtRd7Po0e7VfH+Hj3abQbr49Gj3X7B+nn0
aLedrK9Hj3Ybzfp79Oiws+nj0aPD4nN8P48eHbaVvh49Oux5+nv06LCF7A+P
Hh1Wx/7x6NFpyQq/vzx6dFop+8+jR6clRvj96dGj005l/3r06LTR7G+PHp12
xji//z06dNkQzodHjy4bpef06LKz9Xl65J/rfHp0WVrfT48uG6P3o0eXZfT+
9Oi2l3U/enTb/bo/PbqtTvWhR7ftUP3o0W2O6kuPbrtA9adHj50vH3r02Efy
o0ePVcuXHj12i/zp0WOL1B/06LEt6h969NoF6i969NrN6j969Fq9+pMevbZM
/UuPXjus/qZHr1Wp/+nRp/moL6dHn9VrfujRZ0MrOV/06LO3NX/06LN+zSc9
+uy3ml969Fml5psex+yQ5p8ex6xW+UCPY7ZI+UGPY/a48oUex6xD+UOPYzZJ
+USPfpuq/KJHv42hn/Kq35qVf/Tot13KR3r0W63ykx799onylR4DVsb+Ul4N
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
P3JYEdgfOTwe2B85XKz9wf8eiuP/p+S/ZRfJGA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxt1ntwVPUVB/DNPsludrMvWooIqQUq4KuVClMj51tgaqQtKIJWEq3lpSCN
4KuIVo3WqFgFAUWhVcRHUalSCxQ1eFGcKFqKAhGsjCMPJVY0CXmHkHRzv18Z
70z3D4G53rv3dz7nfM9+f+q1E2f4fT7fsjyfr+fP//+pt2/+NqRs0ZvNp9bb
gqWfnhTNrLOJm/rf/eVF9ba/9MnLv4xusVuyL56/f0G93bogMKNf59v29Nzz
onueqrcVkX4dqZodtv1fPZ96u/iLM0fUVe+yllN7HlhvJz+3pmTKoj02IPe0
Tf0bbHXFoG2t9rGV7F+Qe2KDXfacUxav+cTm9TxuboNdMqxP8W2D9tuKx3o+
DTZ9yo3BH+w4YFubex7YYFvzNnRVzzhkRy7qecEGO6koNXnH4c/Mfb3sURuw
aWdg48WHzX3ceUet8ZrSabE1tTbT/Ry1fzQtX/n7g19Yz2nLFh21pWdM734t
+KW5x9101GZuqRi/PnrE3Nfbf9Qe671v36VNR8x9XLTRGqfU/eXVLV/Z2e6n
0RKTx2YS135tbvnKGq2hf/Lk1V1fm3vcuxstFR209rPyOnNf78VG6/3RHZOu
curMfdye3PWxh5yaujo5NFlULvRoOnGdHk3WR/fTo8myej49mqxZ30+PJuut
96NHkx3T+9Oj2VbpfPRotnKdnx7NtlL1oUezbVb96NFsXaovPZptiOpPjxYb
LB96tNh2+dGjxX4nX3q02JXyp0fuuvqDHi22Xv1Dj1Y7Tf1Fj1b7jfqPHq22
Vv1Jj1arVP/So9UOqr/p0WrXqP/p0Wbxnj/ueLOKHm22gdcderRZtMy936FH
m63j8x16tNl/+P0OPdpsPt/PoUeblfD9HXq02wc8n0OPdnuA53fo0W7XsT4O
PdrtLtbPoUe7HWJ9HXq02yjW36FHh42hj0OPDus7x/Vz6NFhH9PXoUeHvUZ/
hx4d9hD7w6FHh1Wzfxx6HLNTSt3+cuhxzM5j/zn0OGZFA9z+dOhxzMD+dehx
zMayvx165K6z/x16dNopnA+HHp32M12nR6f9XPfTo9NG6/n0yN2v76dHp0Hv
R49OG6j3p8dx26bz0eO4PaLz0+O4vaH60OO4far60eO4Fam+9DhuF6j+9Oiy
MfKhR5fVyo8eXXaPfOnRZTfJnx5dtlT9QY8uq1H/0KPbzld/0aPbrlf/0aPb
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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1itQlFEYh/EF7+BdnDHh2DBrFKFphRlNWJxRo1gxY8Vg0aqZjFWrRgcr
Vg1e9n6VPc/MeYb/W3Z+5cz3vc9hlxuPn68/mW00Gm9mGo3p59H5vXL0s9G4
ubHzqbWk1/cWt3+u6ZcLu/cOtvSHzeW5/ff665fp6PbS9EB9/fC0vcU/1fcP
tg5P1C+mx23qd2+noz+3pgfqX2vTB9Tl8Rb+VpfjlvXTMnr6ths7urzuni6P
d6DLcXP/qm+V0WV9G7q87rYuj7ery3H7mmlGj2b0aEaPZvRoRo9m9GhGj1b0
aEWPVvRoRY9W9GhFj3b0aEePdvRoR4929GhHj0706ESPTvToRI9O9OhEj270
6EaPbvToRo9u9OhGj2706EWPXvToRY9e9OhFj1706EePfvToR49+9OhHj370
GESPQfQYRI9B9BhEj0H0GEaPYfQYRo9h9BhGj2H0GEaPUfQYRY9R9BhFj1H0
GEWPcfQYR49x9BhHj3H0GEePSfSYRI9J9JhEj0n0mESPxurR99H00byfppfm
fTX9NO+v6anZh6avZj+a3pp9zVTTX7M/zX3Q7FNzPzT71dwXzb4190ezf819
0sxsNT00PTQ9ND00PTQ9ND00PTQ9ND00PTQ9ND2OVdND00PTQ9ND00PTQ9ND
00PTQ9ND00Mzx6vpoemh6aHpoemh6aHpoemh6aHpoemh6aHpcaKaHpoemh6a
Hpoemh6aHpoemh6aHpoemjlZTQ9ND00PTQ9ND00PTQ9ND00PTQ9ND00PTY9T
1fTQ9ND00PTQ9ND00PTQ9ND00PTQ9NDM6Tj/TJyvOV9zvuZ8zcxVXy0Hanrr
uyy0mt76Wemt6a1fl96a3vpj6a3prX+U3preer483nw1vfXt0lvTWz8qvTW9
9avSW9ND00PTQ38vPTQ9NHO2mh6aHpoemh6aHpoemh6aHpoemh6aHpoemh7n
qumh6aHpofn70/TQ9ND00PTQ9ND00PTQzPlqemh6aHpoemh6aHpoemh6aHpo
emh6aHpoelyopoemh6aHpoemh6aHpoemh6aHpoemh2YuVvN1pOmjeT9NL833
v6af5v01PTX70PTV7EfTW/P7oemv2Z/mPmj2qfm91OxXc180vw+a+6PZv+Y+
aeZSNT00PTQ9ND0090/TQ9ND00PTQ/P/h6aHpoemh6aHpoemh6aHpoemh6aH
poemh6aHpodmLlfTQ9ND00PTQ9ND00PTQ9ND00PTQ9ND00PTQ9ND00PTQ9ND
00PTQ9ND00PTQ9ND00MzV6rpoemh6aHpoemh6aHpoemh6aHpoemh6aHpoemh
6aHpoemh6aHpoemh6aHpoemh6aGZhWp6aHpoemh6aHpoemh6aHpoemh6aHpo
emh6aHpoemh6aHpoemh6aHqkr63eefjgcL6t/AcFbl33
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 6.2}, {-1.0000000000000173`, 1.000000000000019}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.636898530636621*^9, 3.636898536711258*^9}, {
   3.6368989281382713`*^9, 3.636898959052655*^9}, 3.636898990337174*^9, {
   3.636899035432715*^9, 3.636899057103586*^9}, {3.636899125340581*^9, 
   3.636899130186687*^9}, 3.636899408222555*^9, {3.6368995960943403`*^9, 
   3.636899606358103*^9}, 3.6368997046947317`*^9, 3.636990132771459*^9, 
   3.6369907307645903`*^9, {3.636990856523934*^9, 3.636990864143189*^9}, {
   3.636990952989766*^9, 3.636990976381413*^9}, 3.63699121687002*^9, {
   3.636991248111218*^9, 3.636991291430359*^9}, {3.637001320245214*^9, 
   3.637001357386773*^9}, {3.637001421668688*^9, 3.637001429420138*^9}, 
   3.6370053219911346`*^9}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
Wr8NO8H/A/yDQjw=
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[CompressedData["
1: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
6j71TNL//m2hjPv/B6eKB34=
       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1:eJwUmnc4le8fx43SpJJKVpTs0DTCOyMNvk1lNGjYZFRGKFSUChUiopRZsvfe
+zjnOIcmss7znKSyKqV+z+8v13Vfrvu5n/vcn9fn/bqvR+as2xFbPh4eHtF5
PDz81F+1F/WGotUcrPT8qiz9Nxt0j9oTonQf1IsfOPa5g4MLTx4bLb+fiz+P
jMcTS2+j/Hr7auI9BxF76j8OGOVDLMo4+q9IFLr+jcWMkhzUHk/hob8vgHBr
WE8+8zFc3nbQE39w8HDXu+R6pyLYhz6+u6f4KVyfJ5UFChBY/y0qO1S8BOE9
nKWE6QuEBa0+d16EQN28RcZO2aXYkNCYaJKShiWHAss9NhCQ7ufbI2lbDr7w
+GVnd7+EiH96p+YWAlJRB5tZwpXQvyUbdIf1GjsrLiXy7iKg8voYI/N5FXz+
SPHprMxF49jWdVMHCPxp+pasoFyDyTb5/CUDeXDe/Og0cZKAk+PK9UtmapDK
+jmmE16A+O4S8xgnAoq+/QNfK2px++yGtB9bi6Bq18lzwZdAk/M4qyKqDg8E
2uh35orRtzTEYU8ogbHl7wTXnq4Hc0TzelB6Kb493xy4P4bAt9iF/qc0G7Dj
/YaUQ97luBcbf3hBCgGj8AHFF0KNaDdz2JOhWwnjZxmfGvMIyOyIlrjS04jY
RZc9z41U4ezjTJnXtQQ+1Nw10sxughH3aoifRQ0epx2Uju2i9uevTe5N32ZY
uMqLzqjWYkcKh/ayj5pfyudouVkLrv6+d+bUmjqc5NHT8P1CoOil5vZJ5VZU
mMg43/5dh0Q3zdN7fxPI/cw+UTbVithSUS07ej0MuzZu119M4o5QUbEjrQ03
ttCq1IobMM+wuG2nKIkvQ54W6XHtWNrKWZgZ3ohDIgvEvm0kkST3VpO06cAr
GdWV5Jkm/GXvW0vbRmKzafABYa1O2NzcwhbZ04zWl+q9WQYk9ssuzGjjo+G1
QPyJ7xIt+OGxeHfxYRIG/XRN5480CD2sjSub14rs6GSXKzYkwhYYLhQq6MKt
TyKxe4lWXO/sO4ILJDZ93yskrUdHwn8dVqEVbSifFiQ3BZCYR1+xNSuTjoYG
fXZecjuWbfmkK3WHhMzCfbO8yxkIsRQXifDtwFi7p2lLLInhGbNP5hcZOJsj
s1LdtBObjv9YnJBGYo0535BMPwMHhEdbK9VpuDO17pZHIYnw5VKh+YZM9NwX
2v1nfhdMru8sdG8gcXnn+92lOUy4S0x7y3/pgoLc76ceTBJPqwXSQlZ3w2ww
qTjoLB0Rcr7GKgMkLs4KKBy70g2/RydWHumgw3INN375VxKFqen1j0a7oXJk
pk0UDEDiX/bMHxI7X5XwJpuwkCleP6yRycDtFQsuCSzlQn2Dk5V0KQu53AtW
/0kxcfJ85/cuMS5oh74xk2TZaBTbrL47kgmTdg3VeAUucnqHv4zeYiPVcqND
9CwTieujxSI1uOCjX9mQPM3GisSfv9+7dkMoPKYxZDcXj2Su/ZY90YN93+e+
X3nbjQXmx5U0jnLBUrSYTK/qwb2UtXv/GLBwbvkirDjLReBz5vxnSr04YS0y
e7GQhQ8frYW/uHHh6VVeZhPRix/y+kJG0mxcdg0Otr3GRdC+DP43/3px4/XU
rsBHbPzqv9XB28SBjvK+TctbcnAxfWU4e/l1VHctLXJkcXB1QvX+T6c8LP22
TYDjE4lG/Q/HOYMcKBzc5maxvAAxr4ntby8+wpOxD/l13zjIbK9m7HteiG+f
+72fSSfCRa+ocdk/DqxiNTI2GhZjVrW2Y01wMvyE34d7ChLwnKXN+oyUwLK0
h732VwraHEyWfRYnMPH9ZpNhWBmEo9V7j1/OwHK7KCO2EoEkLcUFv3ZWYP0S
m5aZpVlQSBDaIalFYOOzIx14XwnTpxafavRyEGjG6ruyh4BwYvySv/7VKDz3
/N3zX7kQjRjRGz9GYKto8GBcZA06Dy4/JFucj+t8CieqzxHY7+EbFGBZi1hx
of1iZwoxLGGowudJwHti1KpHoQ7hBTPltaLFCCnNKLAKJGCpd/670686bPHi
zRToLoH9mxNTLeEExs2+G+1sr8dNG1URMqIMSBwl0p8QePxwihn4vAG8osYz
/lYVIBOS40ZfUusZ1N4Q4dmILdnjJ0NWVIElmcmrXUbg2u9I9bcGTVjhVopN
7dX4Kz0n/byFGu+fmT0t0gya8tGukvoaOKTG/5DpJbAl3CVYmtMMl4J3FYrP
a9HKFL4uPEpg7ryFkXlNCxKfm9tdvF2HOY3yNpspAgUmoS3HI1uRySfJ/GFb
D/d12a0NfCSk5hoXPTjTBiGvyd9thg2QvT1+TW8FCR1fkYWLtrWjZe7d0Nj6
RmQqW0+sWkdiz/zUlr1z7Tg5vTh8389GyF9OX2u9iYRjaVb9XEcHbh1Vn7rK
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
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0, 0, 1}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{0., -1.4155343563971154`*^-15, 0.33333333333334614`}]}}},
  Boxed->False,
  ImageSize->{360., 360.},
  ViewAngle->0.34,
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.636898530636621*^9, 3.636898536711258*^9}, {
   3.6368989281382713`*^9, 3.636898959052655*^9}, 3.636898990337174*^9, {
   3.636899035432715*^9, 3.636899057103586*^9}, {3.636899125340581*^9, 
   3.636899130186687*^9}, 3.636899408222555*^9, {3.6368995960943403`*^9, 
   3.636899606358103*^9}, 3.6368997046947317`*^9, 3.636990132771459*^9, 
   3.6369907307645903`*^9, {3.636990856523934*^9, 3.636990864143189*^9}, {
   3.636990952989766*^9, 3.636990976381413*^9}, 3.63699121687002*^9, {
   3.636991248111218*^9, 3.636991291430359*^9}, {3.637001320245214*^9, 
   3.637001357386773*^9}, {3.637001421668688*^9, 3.637001429420138*^9}, 
   3.637005322125408*^9}],

Cell[BoxData[
 RowBox[{"\<\"Choi\"\>", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.6666666666666923`", ",", "0", ",", "0", ",", "0.3333333333333462`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.33333333333334597`", ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.33333333333334597`", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3333333333333462`", ",", "0", ",", "0", ",", "0.6666666666666923`"}],
       "}"}]}], "}"}], ",", "\<\"<params>\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.636898530636621*^9, 3.636898536711258*^9}, {
   3.6368989281382713`*^9, 3.636898959052655*^9}, 3.636898990337174*^9, {
   3.636899035432715*^9, 3.636899057103586*^9}, {3.636899125340581*^9, 
   3.636899130186687*^9}, 3.636899408222555*^9, {3.6368995960943403`*^9, 
   3.636899606358103*^9}, 3.6368997046947317`*^9, 3.636990132771459*^9, 
   3.6369907307645903`*^9, {3.636990856523934*^9, 3.636990864143189*^9}, {
   3.636990952989766*^9, 3.636990976381413*^9}, 3.63699121687002*^9, {
   3.636991248111218*^9, 3.636991291430359*^9}, {3.637001320245214*^9, 
   3.637001357386773*^9}, {3.637001421668688*^9, 3.637001429420138*^9}, 
   3.637005322130288*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples: Parameter Distributions", "Subsection",
 CellChangeTimes->{{3.636993681196548*^9, 3.636993719219163*^9}}],

Cell[CellGroupData[{

Cell["Echo Experiment", "Subsubsection",
 CellChangeTimes->{{3.637011022941*^9, 3.637011025931238*^9}}],

Cell[TextData[{
 "Our pulse sequence is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{
     RowBox[{
      SubscriptBox[
       RowBox[{
        RowBox[{
         SubscriptBox[
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], ")"}], "x"], "-", "\[Tau]", "-", 
         "\[Pi]"}], ")"}], "y"], "-", "\[Tau]", "-", 
      RowBox[{"\[Pi]", "/", "2"}]}], ")"}], 
    RowBox[{"-", "x"}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.637011198626554*^9, 3.637011202444152*^9}, {
  3.637011538793723*^9, 3.637011569360696*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"\[Delta]\[Omega]", " ", 
    RowBox[{
     RowBox[{"TP", "[", "Z", "]"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pulse", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Pi]", "/", "2"}], "/", "5"}], ",", "5", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "5"}], ",", "0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Pi]", "/", "2"}], "/", "5"}], ",", 
         RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"\[Gamma]", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"TP", "[", "X", "]"}], ",", 
         RowBox[{"TP", "[", "Y", "]"}]}], "}"}], "/", "2"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6370111350654297`*^9, 3.63701113890711*^9}, {
  3.63701150716322*^9, 3.6370115131756*^9}}],

Cell["\<\
We use a function from GRAPE to make a parameter distrubion according to a \
multinormal over offset of amplitude errors.\
\>", "Text",
 CellChangeTimes->{{3.637011157547172*^9, 3.637011191115026*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"RandomMultinormalParameterDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{".5", ",", ".005"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Delta]\[Omega]", ",", "\[Gamma]"}], "}"}], ",", "20"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.637011049794868*^9, 3.6370110813181257`*^9}, {
  3.637011122483437*^9, 3.637011147816287*^9}, {3.637011488367948*^9, 
  3.637011494517785*^9}}],

Cell["Simulate and plot.", "Text",
 CellChangeTimes->{{3.637011577742535*^9, 3.637011581358989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdata", "=", 
   RowBox[{"PulseSim", "[", 
    RowBox[{"H", ",", "pulse", ",", "dist", ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"TP", "[", "U", "]"}]}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TP", "[", "X", "]"}], ",", 
        RowBox[{"TP", "[", "Y", "]"}], ",", 
        RowBox[{"TP", "[", "Z", "]"}]}], "}"}]}], ",", 
     RowBox[{"SimulationOutput", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"States", ",", "Observables"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BlochPlot", "[", 
  RowBox[{
   RowBox[{"States", "@", "outputdata"}], ",", 
   RowBox[{"BlochPlotJoined", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"outputdata", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[LeftAngleBracket]X\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]Y\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.637010223468915*^9, 3.637010247060904*^9}, {
  3.637010302050082*^9, 3.6370103394863787`*^9}, {3.637010406600569*^9, 
  3.637010430341851*^9}, {3.637010461139114*^9, 3.63701047195688*^9}, {
  3.637010701759645*^9, 3.637010731947915*^9}, {3.637010795084457*^9, 
  3.637010798500792*^9}, {3.637010918620966*^9, 3.6370109192003727`*^9}, {
  3.6370109857704687`*^9, 3.637010987452818*^9}, {3.637011057713841*^9, 
  3.637011142266863*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{
     {Opacity[0.2], SphereBox[{0, 0, 0}, 1]}, 
     {GrayLevel[0], Thickness[Large], Opacity[0.5], 
      Line3DBox[{{0, 1, 0}, {0, -1, 0}}], Line3DBox[{{0, 0, 1}, {0, 0, -1}}], 
      Line3DBox[{{1, 0, 0}, {-1, 0, 0}}]}, 
     {GrayLevel[0], Thickness[Large], Opacity[1], Text3DBox[
       FormBox[
        StyleBox["\<\"|+Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, 1.15}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Z\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 0, -1.15}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {1.15, 0, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-X\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {-1.15, 0, 0}], 
      Text3DBox[
       FormBox[
        StyleBox["\<\"|+Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, 1.15, 0}], Text3DBox[
       FormBox[
        StyleBox["\<\"|-Y\[RightAngleBracket]\"\>",
         StripOnInput->False,
         FontSize->14,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]], StandardForm], {0, -1.15, 0}]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
aZ3nLndR/f//7+xmU6H/fWev/J//H/XtZOI=
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
d3iqKYHXvWC4xC1pTYIb3/oU+Wjvc8gSLvdoF8EFmFksBldCoOjDalIb4bt0
T2dqCs2GQb4e0ucTBK8I1z70pCES0h6el0ol7BPzROacIb94SOUr7pYkuIDg
u0Bzh0So/9VnMYewD2/N69mtvEmC7TnVZlGvkSvfk4mwTE2BL4es3bkI+7za
p9ldyCMDKkrHmicTzp17f7+E05k8KMcSqBhHOKcemw53x9XyYXWumERwPPKQ
xdfTqZIUuDafqK0XSzgX2ur+P2UKoJyH5cjTl8j/3eVkd1frDXyqJmJACkTu
43J38rh7CUzakp5ZY0V4rrbo50E9EO5oZX+caoH8npQHeUWqEiaS3MwdzZCr
Qv2eZLtKqJw23sxqinxiZthsZrUSVh20D602QJ62AFKV6avg4rhgTNBF5PlT
O/h+ctdA+dzheT8eQtzItdWkl6uH098fxXpzI38RfehP+ON6GPU+MMtpF3Ja
40Du/qJ6uOecyoLmdkKc7+74Jiz1Gb6YE5eK3kR5ROD2UvSYcAMU8iyXrB5D
fkhwsu4QRxN0+HOD2YKQ724LHy15PNAKWzaupwJ+5O1CGTf0Cr/A0V9OF1q8
UR7fZKK/NvmiF167+ieK9wnK+yf47ZPLzIbhs3FezR4hVCdcvV/sruozBvfR
n5Y/K43qCoZrTq9Vnk/CIjPx+ny+Edz/atJKid2Yhh1eYTmHk1DdMmG+Q22O
bg7W1sbaTq+hOqfALdTHpngecoiPNoX2I0+pqWjo+jAP9z1g+3qsEvkM63yr
/Md5OGubRH/PG3kf93ae6cZ5uPkmNDOUA7mmN7MzdWge5uZduU87+BX3S27W
NrEsVCjE8lZmx4UO3Od+rwXY61Jh2ohSRM0GqvdktzPLzn3H3m/dMauyMuQr
46oj9T1UKLd5hi3HCbm2ullx3AAVOs1cG7FbQfUkY/NQp/gEFU5/7mZPnm/A
nZ4rebh7GVvP5PH1kJ563OPmD4mFctJgE9nbSDG/BuWFeOnay8rYfvK4k3/F
EvmgeU4Z+zkarFeaEzYWR/7vywFYe4EGZToz2mxSUZ0sa/P3BI8GDR5k+nn2
ErkKxX8/kHD1Gg1GN72+v+FaiXu2cRbvPuy8PThD/ro9FNXzx0z/rpzwpUFB
Jr23v3ciZ6hzIlv402DLxRvhE+HoXuCuHRc8hdUHpyvFa1+Ti1He1LrY2xBE
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
       "]]}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
6j11u43q//9/Z7cYD//vO3vl/wHesGTi
       "]]}}}, 
   GraphicsComplex3DBox[CompressedData["
1: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
    "], {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[0.01], 
      Line3DBox[CompressedData["
1:eJwl1He8znUUB/Brb7L3uLL33tlbiotKk0tJxkWhVFahKBlRsveemVG0J01R
yl4NVKRB8j4vf7yfzznnvp7n+d3f73yfxOSUpIGpEhISdniJbOHlrJwtF8tn
ZUUGqR+VhfhWfSsPqrPyofplanKH/qrcFu+lB6lpaf6TXMJgOlKLNLTyt5/l
UoZwG7W50/w/uZ1x9CQtrc1/kcvimridh8yy8ZF6Bk+rS3FUPVM2po76LnlN
zpM75ARZhTWM1z8ui3NIPV024HWS9QNknrgvfK6fLGuznjn6k6TjV5bzGJ2o
S3oykJFMZCYLWclGdnLQxmedkysYSmfq0d38f/lGXDO9iAeXly/UcxmjLscp
9SzZjO3cpG8rz8s5cmXcT1mJ1QyLa5WFWcYB/VRZj00k6fvI7CzkY/0kWYOZ
6pGyNMfU9bk7Fomd4jl6k5N2ZhfkKobThQbcE7vHLvXzsVfkor3Zb3J1PBe6
0pB7zVPzpnpiPHty08Hsd7mGJ+jGw2Y5+ET9Co24T5+Gt+L6ZFUmxXtkCZbz
Q+y0bMhm+uhTZD6W8KX+pdgpNjBPP1aW57Q6T5wR9R9yLSPibNA3ngefql/l
Fu7Xp2W3+oW4ZvLGGTG7KNfxZJwHGpMvzoi/XZLreSr2miY8YJ6OPeoX4/sY
pM/PV+r55I8zo/9TboizErumL8JB9TRZn+7qR2ROFvFZXJ+syTpm6UfJMrFT
HI97LJuwlab6HjI983k7nq+sxuS4JzKRH+N7GKwuwNfqBRSI86O/LDfGnsVu
0YyCFKIwRShKMYpTgkRKxvnx/r/kprjW2DWak8H8nXiGcW/VJTmsniEbsYV+
+iGyIEv5Rj9F1mVjnAX9M7ICZ9SvyeapbvyW3qxPkn/H2YzfEDleVma0epgs
ynexz/RT52JvfA4t6KnPyLvxvfSnVJwbs3/kZsbEPtOSZPNMvKeeygBKx7kx
+1duiR2NfaMVvcwz8348cwZSJs6N2RW5Nf4/huuL8X3sV1yHOjf7YsdkLWar
R8uyrOJE7HfsANtore8ts7CAD/QTZXXWMj32OO4bKzgSZ0OmyP0soixtKEdb
ytOOCrSnIpWoTBWqUo3qdKAG1wEYO8Xd
       "],
       VertexColors->Automatic]}},
    VertexColors->CompressedData["
1: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
3Ps9F/ViM++sXsPG/wCWVCLH
     "]], 
   {RGBColor[0.742077, 0.0624857, 0.00605783], PointSize[0.035], 
    Point3DBox[{0., 0, 1.0000000000000002`}], 
    {RGBColor[0.8280513333333334, 0.37499046666666663`, 0.3373718866666666], 
     Point3DBox[{0.020687329778609875`, -0.0713827018971181, 
      0.9847223657957443}]}}},
  Boxed->False,
  ImageSize->{360., 360.},
  ViewAngle->0.34,
  ViewPoint->{1.9251972598774152`, -2.208417570018991, 1.6930762968608082`},
  ViewVertical->{-0.033068440155044676`, -0.180878367480818, 
   0.9829493854940784}]], "Output",
 CellChangeTimes->{
  3.6370102482050543`*^9, {3.6370103264434*^9, 3.637010341900907*^9}, 
   3.637010432656271*^9, 3.637010477458557*^9, 3.637010566474657*^9, 
   3.63701067961094*^9, 3.637010762149208*^9, 3.637010802347435*^9, 
   3.6370109231635437`*^9, 3.637010990825654*^9, {3.63701109222723*^9, 
   3.6370111096164217`*^9}, 3.637011148406582*^9, 3.6370115198035383`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.006944444444444445], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      LineBox[CompressedData["
1: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
0Zx1Cf4PWv3nNg==
       "]], 
      Hue[0.9060679774997897, 0.6, 0.6], 
      Directive[
       PointSize[0.006944444444444445], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      LineBox[CompressedData["
1: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

       "]], 
      Hue[0.1421359549995791, 0.6, 0.6], 
      Directive[
       PointSize[0.006944444444444445], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      LineBox[CompressedData["
1:eJxd2HlYlVUeB/DLvcC9F9ls1Hl0HtGZFrMprUwJFX8nfXygQGtEc2rEpiLQ
xIbMzMHMRk0nrVzRdEQyVEKTUWMUqXwJ9yVCXFBeF/a7sFx22Rm43+M59733
D32+nvOe5fc5XN/DH9/6x4x39Dqd7qCHTtf394OPh/PPOlo2ICOsJHE1xU2Z
czu72cHzVlr+r8jIhhsOygr6rOovWbtp1/48NTv1QfteGlEUnj1ujoN27uj7
pJNhz9HUJJ2DTjj7Z9CI/YdzBmyqpd7Q+y9HaOPyrOXdfrX8+Uwqypz92oGP
asinMDUh1Oc4zVykpH+cV03O4XacoPHZP75W+VA1jZyzIbf58Z/o01FTkmOm
VvH1nKS5P11J/jTWTnt7ny5MzaHrI84G/bbERtXO+X6hgp96BtctsdJzY/o+
pyh0V/fMr+IsfP7TNGpoXu3cFyvpVPPjvTOcoeQvvCzDh1ZQP+d6ztHMsU/v
3lVWRjOcE56nSH3Dy6nJpXy/F8h70uS1/pElVJrYN+BFarwwZsiKe/f4ei/T
JwtrUkN/d4fe71tewq80K2L0vnFji3h98qiuKrMuKqyQoJFPwZteqvo84hrf
Tz6NLt8cemPKFQov6ZvgCu19K7Tn45jLfH9XKHjL4pPJz5yljbl9GyigMzvn
Gt+uVMi53TFX6daHXevPvP4DObdTeJXmpUcYjA//h+//Gu2+vf70B5VLaVjf
coKuUyHPqMd1OsxzXGzf5wb9wjPqU0hbeO4bbUBGIa3mGfW6SXE8t/QN13yT
1vGM+t2it3me5DwARfQJz6hnkejvXN5nKm3lGfW9Tat4/vVy3+c2LecZ9b5D
iTwPdC7wLqXxjPrfpUM8O4ebc0/MB49i2qTZT7FYH3yKaY1mf8ViffAqERn7
LRHrgV+JqC/2X0obeYZnKcXzjOFK6QWe4VtGTFOfMgrjGTxl9IqmXuX0JM/w
L6enNfUrp0ma81BBEZp6VtAozfmooCBNfSvpKc15qaRHNPWupKE84+fdIvqj
/hZ6RnOeLDRM42EV+4WHlaI0HlYK0XhY6fcaDxvVqa4evd8TqquHjVpVVw87
lauuHnYqUl3Pp508NB5V1KS6esgMD5nhUS3Gh0e1WA88qkV/eNTQHdXVo4Yy
VVePGvpadfWopSOqq0ctHVVdPWppnerq4aA9qquHg7aqrh4OWqi6etTRS5r9
1FG06upTRx9r9ldHX6iuXnW0SrPfOpqmuvrV0XTN/uspSnX1rKf3NPWoF+PB
t54yNPWpp1yNdz3laOrVQJc0/g1UrKlfA+VrzkMDXeEZ/x810DXV9ee1gbI1
9W2kL1XX89JIaZp6N1Kq5vw0ivFR/0ZaqzlPjWJ8eDTRIY1HE13VeDSJ/cKj
SdQDHk20RuPRRHEajyYxPzyaKW5HULrvz5sUeDTTm8FrNxyLO6TAo5nq3j+3
zdySpcCjmWYs+q5+yfZfFHg00+AJF8YVHjyrwKOZ2t8d/MLJzEsKPFroh5dO
To6dna/Ao4VGLx079dVLBQo8Wij/WMDmdc9dV+DRQhvzgq+9s6lQgUcLfbV+
vm9U8S0FHi1kmb/lm7PDbivwuE8jQ4pjaPpdBR736fWVat7DY4sVeNynxMf0
XeNDShR43Cfb/M2Tjz9bqsDjPvk3WM7VDy9T4HGfCtYcDYswlCvwaKXkilX/
fPJWuQKPVhoxpmuJ97cVCjxaadmsv/4hKrpSgUcr/S3SLzrJx6LAo5VWJM3e
81q6RYFHK+VceNs8LsSqwKOVdlfUZ108YVXg0UbRg0IH5T5h4x5t9FR8t/7K
ehv3aKOYD2P8j9+2cY82urzybsqkoXbu0UZJj6cMCZ1m5x5ttGLxybbN8Xbu
0U45YbbyPy+zc492ujZl48/dS+3co50yT3+51y/Wzj3a6flF1PrOZLuC75t2
Wuo5MGK4v517tNPT1p0z/n7Bxj06iJb5/jZzsY17dFB78icLggNs3KODhkzP
2ha508o9OuhV29WZZQOt3KOD9n953jxrpYV7dNDZvJ6JXsWV3KOTpn87/NU3
R1dyj04Kr58YVZzwwKOTEg9tWarfV849Oml90tD2Vy6XcY9OmtEZlBJtKeUe
nRRt7Xwjt6WEe3TSmqzt3cM7irlHF3WGlz471X6Pe3TRhJu/flB78Q736KKt
qck/Htihco8uinpsbVvD7Fvco4sGW+wPRRgLuUcXpYxMu8vSr3GPbrInXRq8
gAq4RzeNfOrU9/nbfuMe3fQnpr/4Y/JF7tFNwQFFH9RsO8M9ummQn33X6c9y
uEc3vdn2Udc09Rj36KEjo74O7whL5x499L/ECdmzgvdyjx46xjM8eugoz/Do
oSye4SGf59cPls2zs9wDdOwEz/DRsQfPO8sVqmOZPMNLx47w7NxurI4d5tm5
nUSZncvdoGP/5dm5nFQdy+AZ3xcyO3kv69ghnlEfHfueZ3x9yfFQLw+xHudw
QR7iedTPg+3l2VmeMA92QFNPD/Ydz87lJXiwfZr6yoz7keyPenuw/Tw7t5sr
50P9ZX+8nniwbzUeepaq8dCL/vDQi/nhIfvDQy/mg4dejI+fJz1L03jI5+Gh
Zwc1HnJ+eOhFveGhF+cBHvJ5eBhEfeFhcPMwCG94GIQvPAxiP/AwiPXDwyDm
g4dBnDd4GFi6xkOuBx7yeXjI9cDDU7TDw1OMDw9PsR94eIrzBw9PMR48PMX8
8JAZHp6i3vCQ88HDU9QHHp5uHrI/PGR/eHiJ/cDDS9QHHl7sG42HzPDwYska
Dy+WovGQGR4yw0OOBw8vcT7hITM85PPw8Bb1gYe3qC88vMV+4SHb4eHt9n3l
LeoHD29RH3h4Cx94yPnh4S3OJzy8xc8nPGR/eMh2eBjZbo2HUdQHHka2R+Nh
dPMwsl0aDyPbrvEwsq81HkaWYnh09RTLPO5hZCwtNSvnxTSCh5GN9/NM6PbP
4u+3RjY6YmFXfHAu//1Rb39rTP8hc8/z910TG/v++QULP8ojeJhY/Rexmw9S
AX//NTH13qAk2/PXCR4mZhr2WMuHj97k78MmdnDDz5/ONagEDxNL//7G3ez8
O/z92MSK4p9z3JhaTPAwsXmD180e03uPx/uAie2rye63qfdeDg8Te7jsYP7A
oHKCh4kd7t8e7ZhWwe8DJnbumzO2qIRKgoeJhbecz1i52sLvB2YW1P5W/OnP
rQQPM/thJhUvWGHj9wUz21IUEXIjxk7wMLPrBRmrFoRU8fuDmSmJS/xSOqsI
Hmb2jFE55ThUze8TZjZxcf9/WyNr+O/XetvTcpcPv1XD7xdmNujMsJcnzKjl
HmZWMWT8u7bjtdzDzAybnxhrNTu4h5nlvHEgRB/u4B4+7JH48rCARQ7u4cP+
kbA98eZKB/eQGR4yw8OHvcczPGSGh8zw8GHxPMNDZnjI/vDwYQt5hofM8PBh
C3jG8vqJdnj0E+PDo5/oDw+Z4SEzPGSGh8zwkPPBQ2Z4yAwPmeEhx4OHr9g/
PHzF+uEhMzxkf3jIdnj4ivng4Svmg4evm4dsh4fM8JAZHr7sXY2HHA8efiLD
w088Dw8/8Tw8ZIaHH5un8fBj8zUeMsNDZnjIDA+Z4SHHh4dsh4e/aIeHv2iH
h8zwkBkeMsNDZnjI8eEhMzz8WZzGQ2Z4yP7wkBkeMsMjQGR4yAwPmeEhMzwC
xPrhEeDmEeDmEeDmEeDmIceHR4Cbh8zwCHTbT6Cbj8y4zwW6ecmM/Qa6+QWK
84f7n8zwDHQ7nzLDN9DtvMoMb5lRr0A3/0Dhi/rJjPMgM+oZ6HY+ZEZ9Zcb9
V2bUO5DFas6PbEf95fpwX5bt8Ogv2p+fmHbnknd/0f5/p/RAbw==
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4.256637061435917}, {-0.9806450744411167, 
       1.0000000000000002`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {
        FormBox["\"time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {}, 
     PlotRange -> {{0, 4.256637061435917}, {-0.9806450744411167, 
       1.0000000000000002`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[LeftAngleBracket]X\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]Y\[RightAngleBracket]\"", 
       "\"\[LeftAngleBracket]Z\[RightAngleBracket]\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6370102482050543`*^9, {3.6370103264434*^9, 3.637010341900907*^9}, 
   3.637010432656271*^9, 3.637010477458557*^9, 3.637010566474657*^9, 
   3.63701067961094*^9, 3.637010762149208*^9, 3.637010802347435*^9, 
   3.6370109231635437`*^9, 3.637010990825654*^9, {3.63701109222723*^9, 
   3.6370111096164217`*^9}, 3.637011148406582*^9, 3.6370115200799828`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation Details", "Subsection",
 CellChangeTimes->{{3.6334434314442463`*^9, 3.63344343435846*^9}}],

Cell[TextData[{
 "All simulation is implemented using time slicing and the ",
 StyleBox["MatrixExp", "Input"],
 " function."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.63689122232233*^9, 3.636891236580373*^9}, {
  3.637002318171425*^9, 3.637002339085191*^9}}],

Cell[TextData[{
 "Memory consumption is minimized by storing only necessary information. For \
example, if the only output is ",
 StyleBox["Observables", "Input"],
 ", only a single unitary or density matrix will be stored in memory at a \
given time; it is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " the case that a list of density matrices will be internally computed and \
then successively applied to each observable."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6370023554666367`*^9, 3.6370023980228453`*^9}, {
  3.637002441020164*^9, 3.637002541572418*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Auxiliary Functions", "Section",
 CellChangeTimes->{{3.636887955154229*^9, 3.636887964179652*^9}, 
   3.6368881005937853`*^9}],

Cell[CellGroupData[{

Cell["LindbladForm", "Subsection",
 CellChangeTimes->{{3.636888125657147*^9, 3.6368881281376343`*^9}}],

Cell[TextData[{
 StyleBox["LindbladForm[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",{", "Input"],
 StyleBox["L1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["L2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",...,", "Input"],
 StyleBox["LN", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["}]", "Input"],
 " represents the Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " with Lindblad dissipators ",
 StyleBox["L1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontSlant->"Italic"],
 StyleBox["L2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ",...,",
 StyleBox["LN", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". It can be entered as the first argument to ",
 StyleBox["PulseSim", "Input"],
 " in place of a Hamiltonian. The arguments ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", ",
 StyleBox["L1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", ",
 StyleBox["L2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ",..., ",
 StyleBox["LN", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[" must all satisfy ",
  FontWeight->"Plain"],
 StyleBox["DriftHamConstQ", "Input",
  FontWeight->"Plain"],
 StyleBox[" or ",
  FontWeight->"Plain"],
 StyleBox["DriftHam", "Input",
  FontWeight->"Plain"],
 "TimeDep",
 StyleBox["Q", "Input",
  FontWeight->"Plain"],
 StyleBox[", but do not all have to satify the same one.",
  FontWeight->"Plain"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6368882621218348`*^9, 3.6368882669851923`*^9}, {
   3.636888308968995*^9, 3.636888496936801*^9}, 3.636975184195014*^9, {
   3.636992053265991*^9, 3.6369920617581053`*^9}},
 CellTags->"LindbladForm::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetPulseShapeMatrix", "Subsection",
 CellChangeTimes->{{3.6368888769397173`*^9, 3.6368888819012833`*^9}}],

Cell[TextData[{
 StyleBox["GetPulseShapeMatrix[", "Input"],
 StyleBox["in", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns in if ",
 StyleBox["in", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a matrix, but if in is a file name, returns the contents of that file \
as a matrix, assuming ",
 StyleBox["Get", "Input"],
 " can figure out how to make it into a matrix. Most CSV-like formats should \
work."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.63688889651088*^9, {3.63688926183421*^9, 3.636889297116604*^9}},
 CellTags->"GetPulseShapeMatrix::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetStepSize", "Subsection",
 CellChangeTimes->{{3.636889327929249*^9, 3.636889329759923*^9}, {
  3.636889376473263*^9, 3.6368893791140347`*^9}}],

Cell[TextData[{
 StyleBox["GetStepSize[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a tenth of the inverse of the maximum norm of ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[t]", "Input"],
 " over the time interval implicit in the pulse ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[", which sholud satisfy ",
  FontWeight->"Plain"],
 StyleBox["PulseQ", "Input"],
 ", rounded to one significant digit.",
 StyleBox["\nGetStepSize[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["stepsize", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["stepsize", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636889340667089*^9, {3.636889416161584*^9, 3.636889563032393*^9}, {
   3.6368896101814833`*^9, 3.636889621776079*^9}, {3.636889894308773*^9, 
   3.636889905956003*^9}},
 CellTags->"GetStepSize::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.636889584174727*^9, 3.63688958511833*^9}}],

Cell["Define a time dependent Hamiltonian.", "Text",
 CellChangeTimes->{{3.636889948475585*^9, 3.636889955413579*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ht", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], 
    RowBox[{"TP", "[", "X", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6368895864707727`*^9, 3.636889600198605*^9}, {
  3.636889640825899*^9, 3.63688964287087*^9}}],

Cell["The maximum norm happens at \[Pi]/2 and is equal to:", "Text",
 CellChangeTimes->{{3.63688993206717*^9, 3.636889942707922*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Tr", "[", 
   RowBox[{
    RowBox[{"TP", "[", "X", "]"}], ".", 
    RowBox[{"TP", "[", "X", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.636889654420164*^9, 3.636889658042221*^9}, {
  3.6368897184652452`*^9, 3.636889729723328*^9}, {3.636889773852014*^9, 
  3.63688978311733*^9}, {3.63688981655037*^9, 3.636889819884494*^9}}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{{3.63688977585255*^9, 3.6368897834579363`*^9}, 
   3.636889820219633*^9}]
}, Open  ]],

Cell["\<\
One tenth of the inverse is 0.00707107, rounded to one significant digit is:\
\>", "Text",
 CellChangeTimes->{{3.636889962732346*^9, 3.63688997654242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetStepSize", "[", 
  RowBox[{"Ht", ",", "\[Pi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.636889603312755*^9, 3.6368896056971407`*^9}, {
  3.636889645556335*^9, 3.63688964819868*^9}}],

Cell[BoxData[
 FractionBox["7", "100"]], "Output",
 CellChangeTimes->{
  3.636889649093692*^9, 3.636889710733705*^9, {3.636889770598969*^9, 
   3.636889772613285*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GetPollingInterval", "Subsection",
 CellChangeTimes->{{3.6368893829122267`*^9, 3.636889385537381*^9}}],

Cell[TextData[{
 StyleBox["GetPollingInterval[", "Input"],
 StyleBox["pollingInterval", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " if ",
 StyleBox["pollingInterval", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is ",
 StyleBox["Off", "Input"],
 ", and ",
 StyleBox["pollingInterval", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " otherwise. ",
 StyleBox["Fraction[", "Input"],
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " may also be used to  specify that the polling interval should be a \
fraction ",
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " of the total time ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636889358787075*^9, {3.636890008068036*^9, 3.636890008212018*^9}, {
   3.700934679061453*^9, 3.700934696501844*^9}},
 CellTags->"GetPollingInterval::usage"],

Cell[TextData[{
 StyleBox["Fraction[", "Input"],
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " specifies that the polling interval should be a fraction ",
 StyleBox["x", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " of the total time ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.7009346045492067`*^9, 3.700934666317678*^9}},
 CellTags->"Fraction::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DivideEvenly", "Subsection",
 CellChangeTimes->{{3.636889390248342*^9, 3.636889394000701*^9}}],

Cell[TextData[{
 StyleBox["DivideEvenly[", "Input"],
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the largest number no bigger than ",
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " such that ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["/", "Input"],
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is an integer."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636889363905881*^9, {3.636890020819748*^9, 3.636890020972156*^9}},
 CellTags->"DivideEvenly::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MakeMultipleOf", "Subsection",
 CellChangeTimes->{{3.63688939748836*^9, 3.636889401345023*^9}}],

Cell[TextData[{
 StyleBox["MakeMultipleOf[", "Input"],
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the largest integer multiple of ",
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " smaller than ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". If ",
 StyleBox["T", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["<", "Input"],
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", returns ",
 StyleBox["dt", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636889369691703*^9, {3.636890112547286*^9, 3.636890144839026*^9}},
 CellTags->"MakeMultipleOf::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DrawSequence", "Subsection",
 CellChangeTimes->{{3.646573195067824*^9, 3.646573201283882*^9}}],

Cell[TextData[{
 StyleBox["DrawSequence[", "Input"],
 StyleBox["pulseSequence", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a graphic depicting the given ",
 StyleBox["pulseSequence", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ", which should be in the same format as accepted by ",
 StyleBox["PulseSim", "Input"],
 "; ",
 StyleBox["{", "Input"],
 StyleBox["p1", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p2", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["p3", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["...", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["}", "Input"],
 ".\n\n",
 StyleBox["Note",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\nThis function has some formatting issues for complicated pulses.\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["DrawSequence", "Input"],
 " accepts all options accepted by ",
 StyleBox["Graphics.", "Input"]
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.646573349478078*^9, 3.646573382342309*^9}, {
  3.646573412366734*^9, 3.646573429327073*^9}, {3.646573469671152*^9, 
  3.6465735559653997`*^9}},
 CellTags->"DrawSequence::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.646573451486339*^9, 3.6465734522849913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"TP", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"U", ",", "1"}], "}"}], ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{"U", ",", "0.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawSequence", "[", 
  RowBox[{"seq", ",", 
   RowBox[{"ImageSize", "\[Rule]", "750"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.646573202788075*^9, 3.64657325891511*^9}, {
  3.64657332479027*^9, 3.646573329989053*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[0.02], ArrowBox[{{0, 0}, {500, 0}}, -25], 
   InsetBox["\<\"t\"\>", 
    NCache[{Rational[1600, 3], 0}, {533.3333333333334, 0}]], {{
     LineBox[{{0., 0}, {0., 80.}, {45.45454545454545, 80.}, {
       45.45454545454545, 0}}], 
     InsetBox["\<\"U\"\>", {22.727272727272727, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {22.727272727272727, -13.333333333333332}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {249.99999999999997, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {249.99999999999997, -20.}]}, {
     LineBox[{{454.5454545454545, 0}, {454.5454545454545, 80.}, {
       499.99999999999994`, 80.}, {499.99999999999994`, 0}}], 
     InsetBox["\<\"U\"\>", {477.27272727272725, 40.}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {477.27272727272725, -13.333333333333332}]}}},
  ImageSize->750]], "Output",
 CellChangeTimes->{{3.646573243407559*^9, 3.646573259321241*^9}, {
  3.6465733214776173`*^9, 3.646573330160129*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Predicates", "Section",
 CellChangeTimes->{{3.636885404935238*^9, 3.636885406359311*^9}}],

Cell[TextData[{
 "Predicate functions are used internally by QSim` to determine which \
simulator to run. They can also be useful to debug format errors in arguments \
entered to ",
 StyleBox["PulseSim", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6368854158655367`*^9, 3.6368855281455793`*^9}, {
  3.6369918355401707`*^9, 3.636991839914424*^9}}],

Cell[CellGroupData[{

Cell["Pulses", "Subsection",
 CellChangeTimes->{{3.6368856097835903`*^9, 3.636885616940919*^9}}],

Cell[TextData[{
 StyleBox["PulseQ[", "Input"],
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " satisfies at least one of the QSim` predicates ending in ",
 StyleBox["PulseQ", "Input"],
 " (",
 StyleBox["ShapedPulseQ", "Input"],
 ", ",
 StyleBox["DriftPulseQ", "Input"],
 ", ",
 StyleBox["UnitaryPulseQ", "Input"],
 ", ",
 StyleBox["ChannelPulseQ", "Input"],
 ")."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6368856974536123`*^9, {3.636885928141036*^9, 3.6368859283494873`*^9}, {
   3.636885974327917*^9, 3.636886006982918*^9}},
 CellTags->"PulseQ::usage"],

Cell[TextData[{
 StyleBox["PulseSequenceQ[", "Input"],
 StyleBox["seq", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["seq", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a list where each element satisfies ",
 StyleBox["PulseQ", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885766594297*^9},
 CellTags->"PulseSequenceQ::usage"],

Cell[TextData[{
 StyleBox["ShapedPulseQ[", "Input"],
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is of the form ",
 StyleBox["{pulse,{Hcontrol1,Hcontrol2,..}}", "Input"],
 " where the ",
 StyleBox["Hcontrols", "Input"],
 " are the control Hamiltonians and ",
 StyleBox["pulse", "Input"],
 " satisfies ",
 StyleBox["PulseShapeQ", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.636885625713066*^9, 3.636885635278036*^9}, {
   3.6368859288611937`*^9, 3.636885928989604*^9}, 3.636885963691141*^9},
 CellTags->"ShapedPulseQ::usage"],

Cell[TextData[{
 StyleBox["DriftPulseQ[p]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a real number or if ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a ",
 StyleBox["Symbol", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6368856414174128`*^9, {3.636885929557456*^9, 3.636885931083541*^9}, 
   3.636887379648258*^9},
 CellTags->"DriftPulseQ::usage"],

Cell[TextData[{
 StyleBox["UnitaryPulseQ[p]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is of the form ",
 StyleBox["{U,t}", "Input"],
 " where ",
 StyleBox["U", "Input"],
 " is a square matrix and ",
 StyleBox["t", "Input"],
 " is a number representing how much time you want the unitary pulse to \
occupy."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636885653156925*^9, {3.636885931700121*^9, 3.636885931836227*^9}, {
   3.636887349288393*^9, 3.636887349928522*^9}},
 CellTags->"UnitaryPulseQ::usage"],

Cell[TextData[{
 StyleBox["ChannelPulseQ[p]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["p", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is of the form ",
 StyleBox["{S,t}", "Input"],
 " where ",
 StyleBox["S", "Input"],
 " satisfies ",
 StyleBox["ChannelQ", "Input"],
 " from QuantumChannel` (i.e. is a super operator) and ",
 StyleBox["t", "Input"],
 " is a number representing how much time you want the channel to occupy."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636885690353043*^9, {3.636885932418709*^9, 3.636885932564328*^9}, {
   3.636887318512085*^9, 3.636887323080172*^9}},
 CellTags->"ChannelPulseQ::usage"],

Cell[TextData[{
 StyleBox["PulseShapeFileQ[", "Input"],
 StyleBox["str", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["str", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a string pointing to a text file containg a pulse."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885714581112*^9},
 CellTags->"PulseShapeFileQ::usage"],

Cell[TextData[{
 StyleBox["PulseShapeMatrixQ[", "Input"],
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["M", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a 2D matrix."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885722728549*^9, 3.636885935081846*^9},
 CellTags->"PulseShapeMatrixQ::usage"],

Cell[TextData[{
 StyleBox["PulseShapeQ[", "Input"],
 StyleBox["in", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff one of ",
 StyleBox["PulseShapeFileQ[", "Input"],
 StyleBox["in", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " or ",
 StyleBox["PulseShapeMatrixQ[", "Input"],
 StyleBox["in", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636885729493348*^9, 3.636885935579327*^9, {3.636887192424591*^9, 
   3.636887196880065*^9}},
 CellTags->"PulseShapeQ::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonians", "Subsection",
 CellChangeTimes->{{3.6368857405172853`*^9, 3.6368857417803783`*^9}}],

Cell[TextData[{
 StyleBox["DriftHamConstQ[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a square matrix."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885780330884*^9},
 CellTags->"DriftHamConstQ::usage"],

Cell[TextData[{
 StyleBox["DriftHam", "Input"],
 StyleBox["TimeDep", "Input"],
 StyleBox["Q[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a function which accepts a number and returns a square matrix."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885786497302*^9, 3.636887066465757*^9, 
  3.636975184293914*^9},
 CellTags->"DriftHamTimeDepQ::usage"],

Cell[TextData[{
 StyleBox["DriftHamQ[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff one of ",
 StyleBox["DriftHamConstQ[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " or ",
 StyleBox["DriftHam", "Input"],
 StyleBox["TimeDep", "Input"],
 StyleBox["Q[", "Input"],
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885793460854*^9, 3.6369751843714867`*^9},
 CellTags->"DriftHamQ::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lindbladians", "Subsection",
 CellChangeTimes->{{3.636885803101036*^9, 3.636885805765031*^9}}],

Cell[TextData[{
 StyleBox["LindbladConstQ[L]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["L", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " has the form ",
 StyleBox["LindbladForm[H,{L1,L2,...,LN}]", "Input"],
 " where all of ",
 StyleBox["H,L1,L2,...,LN", "Input"],
 " satisfy ",
 StyleBox["DriftHamConstQ", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636885815018725*^9, {3.6368859390482817`*^9, 3.6368859391787767`*^9}, {
   3.636887103275581*^9, 3.636887125833583*^9}},
 CellTags->"LindbladConstQ::usage"],

Cell[TextData[{
 StyleBox["Lindblad", "Input"],
 StyleBox["TimeDep", "Input"],
 StyleBox["[L]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["L", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " has the form ",
 StyleBox["LindbladForm[H,{L1,L2,...,LN}]", "Input"],
 " where all of ",
 StyleBox["H,L1,L2,...,LN", "Input"],
 " satisfy ",
 StyleBox["DriftHamQ", "Input"],
 " but at least one satisfies ",
 StyleBox["DriftHam", "Input"],
 "TimeDep",
 StyleBox["Q", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.636885823429289*^9, {3.636885940128366*^9, 3.636885940255877*^9}, {
   3.636886992123353*^9, 3.636887075304187*^9}, {3.63688711229079*^9, 
   3.636887112841625*^9}, {3.636975184425268*^9, 3.636975184470441*^9}},
 CellTags->"LindbladTimeDepQ::usage"],

Cell[TextData[{
 StyleBox["LindbladQ[", "Input"],
 StyleBox["L", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff one of ",
 StyleBox["DriftHamConstQ[", "Input"],
 StyleBox["L", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " or ",
 StyleBox["DriftHamTimeDepQ[", "Input"],
 StyleBox["L", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6368858330409603`*^9, {3.636888147913278*^9, 3.636888231026083*^9}, 
   3.6369751845253887`*^9, {3.636985778434299*^9, 3.636985778648261*^9}},
 CellTags->"LindbladQ::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generator", "Subsection",
 CellChangeTimes->{{3.636975372332378*^9, 3.6369753731857157`*^9}}],

Cell[TextData[{
 StyleBox["GeneratorQ[", "Input"],
 StyleBox["G", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff one of ",
 StyleBox["DriftHamQ[", "Input"],
 StyleBox["G", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " or ",
 StyleBox["LindbladQ[", "Input"],
 StyleBox["G", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " is ",
 StyleBox["True", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6369753764123898`*^9, 3.636975402608653*^9}},
 CellTags->"GeneratorQ::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions and Observables", "Subsection",
 CellChangeTimes->{{3.63688583650878*^9, 3.636885841243689*^9}}],

Cell[TextData[{
 StyleBox["ObservableListQ[", "Input"],
 StyleBox["obs", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["obs", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a list of square matrices."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885847913475*^9},
 CellTags->"ObservableListQ::usage"],

Cell[TextData[{
 StyleBox["FunctionListQ[", "Input"],
 StyleBox["lst", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " retruns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["lst", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is a ",
 StyleBox["List", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{3.636885855221108*^9},
 CellTags->"FunctionListQ::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distributions", "Subsection",
 CellChangeTimes->{{3.636885862271111*^9, 3.636885864096073*^9}}],

Cell[TextData[{
 StyleBox["DistributionQ[", "Input"],
 StyleBox["dist", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 StyleBox["True", "Input"],
 " iff ",
 StyleBox["dist", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is of the form ",
 StyleBox["{{prob1,prob2,...},{{symb1", "Input"],
 "\[Rule]",
 StyleBox["val11,symb2", "Input"],
 "\[Rule]",
 StyleBox["val12,...},{symb1", "Input"],
 "\[Rule]",
 StyleBox["val21,symb2", "Input"],
 "\[Rule]",
 StyleBox["val22,...},...}}", "Input"],
 ". Note that this is the same format as ",
 StyleBox["ParameterDistribution", "Input"],
 " from GRAPE`."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.63688587081949*^9, {3.6368859423596087`*^9, 3.6368859424903708`*^9}, {
   3.636886172259048*^9, 3.636886199021035*^9}},
 CellTags->"DistributionQ::usage"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1631, 1026},
WindowMargins->{{0, Automatic}, {2, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ChannelPulseQ::usage"->{
  Cell[827964, 16021, 692, 22, 32, "Text",
   CellTags->"ChannelPulseQ::usage"]},
 "DistributionQ::usage"->{
  Cell[836463, 16357, 878, 30, 53, "Text",
   CellTags->"DistributionQ::usage"]},
 "DivideEvenly::usage"->{
  Cell[817808, 15668, 738, 27, 33, "Text",
   CellTags->"DivideEvenly::usage"]},
 "DrawSequence::usage"->{
  Cell[819724, 15746, 1429, 49, 165, "Text",
   CellTags->"DrawSequence::usage"]},
 "DriftHamConstQ::usage"->{
  Cell[830442, 16117, 420, 16, 32, "Text",
   CellTags->"DriftHamConstQ::usage"]},
 "DriftHamQ::usage"->{
  Cell[831433, 16156, 717, 28, 32, "Text",
   CellTags->"DriftHamQ::usage"]},
 "DriftHamTimeDepQ::usage"->{
  Cell[830865, 16135, 565, 19, 32, "Text",
   CellTags->"DriftHamTimeDepQ::usage"]},
 "DriftPulseQ::usage"->{
  Cell[826816, 15976, 519, 20, 32, "Text",
   CellTags->"DriftPulseQ::usage"]},
 "ForceSuperoperator::usage"->{
  Cell[41262, 1263, 859, 21, 121, "Text",
   CellTags->"ForceSuperoperator::usage"]},
 "Fraction::usage"->{
  Cell[817147, 15642, 521, 18, 33, "Text",
   CellTags->"Fraction::usage"]},
 "FunctionListQ::usage"->{
  Cell[835880, 16331, 442, 18, 32, "Text",
   CellTags->"FunctionListQ::usage"]},
 "Functions::usage"->{
  Cell[16590, 467, 3407, 97, 300, "Text",
   CellTags->"Functions::usage"]},
 "GeneratorQ::usage"->{
  Cell[834628, 16279, 661, 26, 32, "Text",
   CellTags->"GeneratorQ::usage"]},
 "GetPollingInterval::usage"->{
  Cell[815942, 15595, 1202, 45, 55, "Text",
   CellTags->"GetPollingInterval::usage"]},
 "GetPulseShapeMatrix::usage"->{
  Cell[811782, 15452, 639, 19, 33, "Text",
   CellTags->"GetPulseShapeMatrix::usage"]},
 "GetStepSize::usage"->{
  Cell[812611, 15480, 1355, 47, 55, "Text",
   CellTags->"GetStepSize::usage"]},
 "InitialState::usage"->{
  Cell[36546, 1110, 384, 9, 33, "Text",
   CellTags->"InitialState::usage"]},
 "LindbladConstQ::usage"->{
  Cell[832290, 16192, 592, 20, 32, "Text",
   CellTags->"LindbladConstQ::usage"]},
 "LindbladForm::usage"->{
  Cell[809714, 15373, 1917, 71, 55, "Text",
   CellTags->"LindbladForm::usage"]},
 "LindbladQ::usage"->{
  Cell[833719, 16243, 770, 28, 32, "Text",
   CellTags->"LindbladQ::usage"]},
 "LindbladTimeDepQ::usage"->{
  Cell[832885, 16214, 831, 27, 32, "Text",
   CellTags->"LindbladTimeDepQ::usage"]},
 "MakeMultipleOf::usage"->{
  Cell[818687, 15703, 897, 35, 33, "Text",
   CellTags->"MakeMultipleOf::usage"]},
 "NumericEvaluation::usage"->{
  Cell[39751, 1213, 600, 19, 33, "Text",
   CellTags->"NumericEvaluation::usage"]},
 "ObservableListQ::usage"->{
  Cell[835441, 16313, 436, 16, 32, "Text",
   CellTags->"ObservableListQ::usage"]},
 "Observables::usage"->{
  Cell[20188, 573, 3157, 97, 282, "Text",
   CellTags->"Observables::usage"]},
 "PollingInterval::usage"->{
  Cell[34690, 1059, 1713, 43, 165, "Text",
   CellTags->"PollingInterval::usage"]},
 "PulseQ::usage"->{
  Cell[824832, 15899, 755, 28, 32, "Text",
   CellTags->"PulseQ::usage"]},
 "PulseSequenceQ::usage"->{
  Cell[825590, 15929, 480, 18, 32, "Text",
   CellTags->"PulseSequenceQ::usage"]},
 "PulseShapeFileQ::usage"->{
  Cell[828659, 16045, 460, 16, 32, "Text",
   CellTags->"PulseShapeFileQ::usage"]},
 "PulseShapeMatrixQ::usage"->{
  Cell[829122, 16063, 444, 16, 32, "Text",
   CellTags->"PulseShapeMatrixQ::usage"]},
 "PulseShapeQ::usage"->{
  Cell[829569, 16081, 729, 28, 32, "Text",
   CellTags->"PulseShapeQ::usage"]},
 "PulseSim::usage"->{
  Cell[25051, 726, 8643, 301, 583, "Text",
   CellTags->"PulseSim::usage"]},
 "SequenceMode::usage"->{
  Cell[40544, 1241, 569, 14, 55, "Text",
   CellTags->"SequenceMode::usage"]},
 "ShapedPulseQ::usage"->{
  Cell[826073, 15949, 740, 25, 32, "Text",
   CellTags->"ShapedPulseQ::usage"]},
 "SimulationOutput::section"->{
  Cell[8985, 230, 297, 4, 65, "Section",
   CellTags->"SimulationOutput::section"]},
 "SimulationOutput::usage"->{
  Cell[9799, 250, 2674, 77, 217, "Text",
   CellTags->"SimulationOutput::usage"]},
 "States::usage"->{
  Cell[15300, 425, 1100, 33, 59, "Text",
   CellTags->"States::usage"]},
 "StepSize::usage"->{
  Cell[34015, 1040, 529, 11, 55, "Text",
   CellTags->"StepSize::usage"]},
 "Superoperators::usage"->{
  Cell[23536, 679, 1172, 35, 56, "Text",
   CellTags->"Superoperators::usage"]},
 "TimeVector::usage"->{
  Cell[12648, 335, 1175, 38, 112, "Text",
   CellTags->"TimeVector::usage"]},
 "Unitaries::usage"->{
  Cell[14013, 382, 1102, 34, 56, "Text",
   CellTags->"Unitaries::usage"]},
 "UnitaryPulseQ::usage"->{
  Cell[827338, 15998, 623, 21, 32, "Text",
   CellTags->"UnitaryPulseQ::usage"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ChannelPulseQ::usage", 837682, 16402},
 {"DistributionQ::usage", 837791, 16405},
 {"DivideEvenly::usage", 837899, 16408},
 {"DrawSequence::usage", 838006, 16411},
 {"DriftHamConstQ::usage", 838117, 16414},
 {"DriftHamQ::usage", 838223, 16417},
 {"DriftHamTimeDepQ::usage", 838331, 16420},
 {"DriftPulseQ::usage", 838441, 16423},
 {"ForceSuperoperator::usage", 838553, 16426},
 {"Fraction::usage", 838661, 16429},
 {"FunctionListQ::usage", 838765, 16432},
 {"Functions::usage", 838870, 16435},
 {"GeneratorQ::usage", 838971, 16438},
 {"GetPollingInterval::usage", 839082, 16441},
 {"GetPulseShapeMatrix::usage", 839203, 16444},
 {"GetStepSize::usage", 839316, 16447},
 {"InitialState::usage", 839423, 16450},
 {"LindbladConstQ::usage", 839529, 16453},
 {"LindbladForm::usage", 839638, 16456},
 {"LindbladQ::usage", 839743, 16459},
 {"LindbladTimeDepQ::usage", 839851, 16462},
 {"MakeMultipleOf::usage", 839964, 16465},
 {"NumericEvaluation::usage", 840078, 16468},
 {"ObservableListQ::usage", 840191, 16471},
 {"Observables::usage", 840300, 16474},
 {"PollingInterval::usage", 840408, 16477},
 {"PulseQ::usage", 840512, 16480},
 {"PulseSequenceQ::usage", 840615, 16483},
 {"PulseShapeFileQ::usage", 840727, 16486},
 {"PulseShapeMatrixQ::usage", 840842, 16489},
 {"PulseShapeQ::usage", 840953, 16492},
 {"PulseSim::usage", 841055, 16495},
 {"SequenceMode::usage", 841158, 16498},
 {"ShapedPulseQ::usage", 841263, 16501},
 {"SimulationOutput::section", 841376, 16504},
 {"SimulationOutput::usage", 841491, 16507},
 {"States::usage", 841594, 16510},
 {"StepSize::usage", 841689, 16513},
 {"Superoperators::usage", 841792, 16516},
 {"TimeVector::usage", 841897, 16519},
 {"Unitaries::usage", 841998, 16522},
 {"UnitaryPulseQ::usage", 842101, 16525}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 202, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[649, 22, 196, 3, 44, "Subsection"],
Cell[848, 27, 166, 3, 33, "Text"],
Cell[1017, 32, 282, 4, 32, "Input"],
Cell[1302, 38, 182, 4, 33, "Text"],
Cell[1487, 44, 624, 10, 99, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2148, 59, 101, 1, 36, "Subsection"],
Cell[2252, 62, 531, 12, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[2820, 79, 110, 1, 51, "Section"],
Cell[2933, 82, 899, 16, 77, "Text"],
Cell[3835, 100, 812, 20, 55, "Text"],
Cell[CellGroupData[{
Cell[4672, 124, 1744, 41, 124, "Input"],
Cell[6419, 167, 2517, 57, 273, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8985, 230, 297, 4, 65, "Section",
 CellTags->"SimulationOutput::section"],
Cell[9285, 236, 511, 12, 32, "Text"],
Cell[9799, 250, 2674, 77, 217, "Text",
 CellTags->"SimulationOutput::usage"],
Cell[CellGroupData[{
Cell[12498, 331, 147, 2, 44, "Subsection"],
Cell[12648, 335, 1175, 38, 112, "Text",
 CellTags->"TimeVector::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13860, 378, 150, 2, 44, "Subsection"],
Cell[14013, 382, 1102, 34, 56, "Text",
 CellTags->"Unitaries::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15152, 421, 145, 2, 44, "Subsection"],
Cell[15300, 425, 1100, 33, 59, "Text",
 CellTags->"States::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16437, 463, 150, 2, 44, "Subsection"],
Cell[16590, 467, 3407, 97, 300, "Text",
 CellTags->"Functions::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20034, 569, 151, 2, 44, "Subsection"],
Cell[20188, 573, 3157, 97, 282, "Text",
 CellTags->"Observables::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23382, 675, 151, 2, 45, "Subsection"],
Cell[23536, 679, 1172, 35, 56, "Text",
 CellTags->"Superoperators::usage"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24757, 720, 291, 4, 51, "Section"],
Cell[25051, 726, 8643, 301, 583, "Text",
 CellTags->"PulseSim::usage"],
Cell[CellGroupData[{
Cell[33719, 1031, 169, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[33913, 1037, 99, 1, 35, "Subsubsection"],
Cell[34015, 1040, 529, 11, 55, "Text",
 CellTags->"StepSize::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34581, 1056, 106, 1, 35, "Subsubsection"],
Cell[34690, 1059, 1713, 43, 165, "Text",
 CellTags->"PollingInterval::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36440, 1107, 103, 1, 35, "Subsubsection"],
Cell[36546, 1110, 384, 9, 33, "Text",
 CellTags->"InitialState::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36967, 1124, 102, 1, 35, "Subsubsection"],
Cell[37072, 1127, 807, 22, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37916, 1154, 102, 1, 35, "Subsubsection"],
Cell[38021, 1157, 755, 19, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38813, 1181, 106, 1, 35, "Subsubsection"],
Cell[38922, 1184, 679, 21, 77, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39638, 1210, 110, 1, 35, "Subsubsection"],
Cell[39751, 1213, 600, 19, 33, "Text",
 CellTags->"NumericEvaluation::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40388, 1237, 153, 2, 35, "Subsubsection"],
Cell[40544, 1241, 569, 14, 55, "Text",
 CellTags->"SequenceMode::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41150, 1260, 109, 1, 35, "Subsubsection"],
Cell[41262, 1263, 859, 21, 121, "Text",
 CellTags->"ForceSuperoperator::usage"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42170, 1290, 257, 3, 37, "Subsection"],
Cell[CellGroupData[{
Cell[42452, 1297, 158, 2, 35, "Subsubsection"],
Cell[42613, 1301, 462, 10, 31, "Text"],
Cell[CellGroupData[{
Cell[43100, 1315, 453, 10, 55, "Input"],
Cell[43556, 1327, 1334, 34, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44939, 1367, 124, 1, 29, "Subsubsection"],
Cell[45066, 1370, 204, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[45295, 1381, 286, 7, 32, "Input"],
Cell[45584, 1390, 1263, 34, 32, "Output"]
}, Open  ]],
Cell[46862, 1427, 413, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[47300, 1441, 425, 9, 32, "Input"],
Cell[47728, 1452, 1218, 35, 48, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48995, 1493, 122, 1, 29, "Subsubsection"],
Cell[49120, 1496, 218, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[49363, 1504, 324, 7, 34, "Input"],
Cell[49690, 1513, 3935, 100, 80, "Output"]
}, Open  ]],
Cell[53640, 1616, 261, 7, 33, "Text"],
Cell[CellGroupData[{
Cell[53926, 1627, 335, 8, 34, "Input"],
Cell[54264, 1637, 1816, 49, 79, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56129, 1692, 166, 2, 29, "Subsubsection"],
Cell[56298, 1696, 287, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[56610, 1705, 723, 16, 32, "Input"],
Cell[57336, 1723, 1905, 44, 103, "Output"]
}, Open  ]],
Cell[59256, 1770, 265, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[59546, 1781, 298, 5, 55, "Input"],
Cell[59847, 1788, 1273, 27, 55, "Output"],
Cell[61123, 1817, 1825, 40, 225, "Output"]
}, Open  ]],
Cell[62963, 1860, 195, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[63183, 1869, 436, 10, 55, "Input"],
Cell[63622, 1881, 2868, 86, 169, "Output"],
Cell[66493, 1969, 1793, 41, 224, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[68335, 2016, 168, 2, 29, "Subsubsection"],
Cell[68506, 2020, 627, 10, 52, "Text"],
Cell[69136, 2032, 2196, 52, 165, "Input"],
Cell[71335, 2086, 461, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[71821, 2100, 271, 6, 32, "Input"],
Cell[72095, 2108, 458, 8, 32, "Output"]
}, Open  ]],
Cell[72568, 2119, 203, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[72796, 2127, 394, 9, 32, "Input"],
Cell[73193, 2138, 2571, 53, 260, "Output"]
}, Open  ]],
Cell[75779, 2194, 139, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[75943, 2199, 622, 14, 32, "Input"],
Cell[76568, 2215, 95723, 1645, 377, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[172340, 3866, 107, 1, 29, "Subsubsection"],
Cell[172450, 3869, 232, 4, 32, "Text"],
Cell[172685, 3875, 434, 11, 32, "Input"],
Cell[173122, 3888, 107, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[173254, 3893, 202, 5, 32, "Input"],
Cell[173459, 3900, 6440, 141, 120, "Output"]
}, Open  ]],
Cell[179914, 4044, 125, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[180064, 4049, 239, 5, 32, "Input"],
Cell[180306, 4056, 33566, 572, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[213921, 4634, 116, 1, 29, "Subsubsection"],
Cell[214040, 4637, 469, 9, 52, "Text"],
Cell[CellGroupData[{
Cell[214534, 4650, 778, 22, 55, "Input"],
Cell[215315, 4674, 3033, 79, 121, "Output"],
Cell[218351, 4755, 5252, 108, 173, "Output"]
}, Open  ]],
Cell[223618, 4866, 345, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[223988, 4878, 798, 21, 55, "Input"],
Cell[224789, 4901, 62831, 1058, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287669, 5965, 118, 1, 29, "Subsubsection"],
Cell[287790, 5968, 138, 1, 31, "Text"],
Cell[287931, 5971, 361, 11, 32, "Input"],
Cell[288295, 5984, 451, 10, 53, "Text"],
Cell[288749, 5996, 1232, 29, 77, "Input"],
Cell[289984, 6027, 161, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[290170, 6034, 978, 25, 121, "Input"],
Cell[291151, 6061, 3062, 65, 267, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[294262, 6132, 105, 1, 29, "Subsubsection"],
Cell[294370, 6135, 257, 5, 31, "Text"],
Cell[294630, 6142, 745, 21, 32, "Input"],
Cell[295378, 6165, 154, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[295557, 6172, 1635, 37, 121, "Input"],
Cell[297195, 6211, 4233, 83, 244, "Output"],
Cell[301431, 6296, 134307, 2229, 375, "Output"]
}, Open  ]],
Cell[435753, 8528, 166, 3, 31, "Text"],
Cell[435922, 8533, 847, 22, 37, "Input"],
Cell[CellGroupData[{
Cell[436794, 8559, 1494, 35, 121, "Input"],
Cell[438291, 8596, 4552, 90, 244, "Output"],
Cell[442846, 8688, 116383, 1934, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[559278, 10628, 161, 2, 29, "Subsubsection"],
Cell[559442, 10632, 205, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[559672, 10641, 363, 7, 32, "Input"],
Cell[560038, 10650, 3408, 71, 99, "Output"]
}, Open  ]],
Cell[563461, 10724, 221, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[563707, 10735, 272, 6, 32, "Input"],
Cell[563982, 10743, 3236, 69, 99, "Output"]
}, Open  ]],
Cell[567233, 10815, 310, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[567568, 10827, 908, 22, 77, "Input"],
Cell[568479, 10851, 2111, 47, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[570639, 10904, 103, 1, 29, "Subsubsection"],
Cell[570745, 10907, 412, 10, 52, "Text"],
Cell[571160, 10919, 2170, 53, 319, "Input"],
Cell[573333, 10974, 114, 1, 31, "Text"],
Cell[573450, 10977, 594, 16, 32, "Input"],
Cell[574047, 10995, 349, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[574421, 11007, 1051, 22, 55, "Input"],
Cell[575475, 11031, 31407, 628, 360, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[606943, 11666, 114, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[607082, 11671, 206, 3, 35, "Subsubsection"],
Cell[607291, 11676, 197, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[607513, 11684, 616, 16, 77, "Input"],
Cell[608132, 11702, 2406, 51, 141, "Output"]
}, Open  ]],
Cell[610553, 11756, 186, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[610764, 11764, 1240, 30, 55, "Input"],
Cell[612007, 11796, 2643, 56, 224, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[614699, 11858, 156, 2, 29, "Subsubsection"],
Cell[614858, 11862, 197, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[615080, 11870, 1522, 43, 99, "Input"],
Cell[616605, 11915, 4660, 103, 228, "Output"]
}, Open  ]],
Cell[621280, 12021, 186, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[621491, 12029, 1960, 45, 121, "Input"],
Cell[623454, 12076, 10925, 190, 225, "Output"],
Cell[634382, 12268, 82959, 1386, 375, "Output"],
Cell[717344, 13656, 1292, 28, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[718697, 13691, 121, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[718843, 13696, 103, 1, 35, "Subsubsection"],
Cell[718949, 13699, 557, 19, 36, "Text"],
Cell[719509, 13720, 1287, 40, 55, "Input"],
Cell[720799, 13762, 211, 4, 31, "Text"],
Cell[721013, 13768, 538, 14, 32, "Input"],
Cell[721554, 13784, 100, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[721679, 13789, 2126, 49, 187, "Input"],
Cell[723808, 13840, 52376, 885, 375, "Output"],
Cell[776187, 14727, 32165, 599, 253, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[808413, 15333, 111, 1, 45, "Subsection"],
Cell[808527, 15336, 283, 7, 32, "Text"],
Cell[808813, 15345, 590, 13, 52, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[809452, 15364, 132, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[809609, 15370, 102, 1, 44, "Subsection"],
Cell[809714, 15373, 1917, 71, 55, "Text",
 CellTags->"LindbladForm::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[811668, 15449, 111, 1, 45, "Subsection"],
Cell[811782, 15452, 639, 19, 33, "Text",
 CellTags->"GetPulseShapeMatrix::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[812458, 15476, 150, 2, 45, "Subsection"],
Cell[812611, 15480, 1355, 47, 55, "Text",
 CellTags->"GetStepSize::usage"],
Cell[CellGroupData[{
Cell[813991, 15531, 97, 1, 35, "Subsubsection"],
Cell[814091, 15534, 118, 1, 31, "Text"],
Cell[814212, 15537, 297, 8, 32, "Input"],
Cell[814512, 15547, 133, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[814670, 15552, 382, 8, 32, "Input"],
Cell[815055, 15562, 132, 3, 36, "Output"]
}, Open  ]],
Cell[815202, 15568, 165, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[815392, 15575, 208, 4, 32, "Input"],
Cell[815603, 15581, 167, 4, 49, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[815831, 15592, 108, 1, 45, "Subsection"],
Cell[815942, 15595, 1202, 45, 55, "Text",
 CellTags->"GetPollingInterval::usage"],
Cell[817147, 15642, 521, 18, 33, "Text",
 CellTags->"Fraction::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817705, 15665, 100, 1, 45, "Subsection"],
Cell[817808, 15668, 738, 27, 33, "Text",
 CellTags->"DivideEvenly::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[818583, 15700, 101, 1, 45, "Subsection"],
Cell[818687, 15703, 897, 35, 33, "Text",
 CellTags->"MakeMultipleOf::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[819621, 15743, 100, 1, 45, "Subsection"],
Cell[819724, 15746, 1429, 49, 165, "Text",
 CellTags->"DrawSequence::usage"],
Cell[CellGroupData[{
Cell[821178, 15799, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[821303, 15804, 583, 17, 77, "Input"],
Cell[821889, 15823, 2297, 50, 176, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[824259, 15881, 95, 1, 51, "Section"],
Cell[824357, 15884, 351, 8, 32, "Text"],
Cell[CellGroupData[{
Cell[824733, 15896, 96, 1, 44, "Subsection"],
Cell[824832, 15899, 755, 28, 32, "Text",
 CellTags->"PulseQ::usage"],
Cell[825590, 15929, 480, 18, 32, "Text",
 CellTags->"PulseSequenceQ::usage"],
Cell[826073, 15949, 740, 25, 32, "Text",
 CellTags->"ShapedPulseQ::usage"],
Cell[826816, 15976, 519, 20, 32, "Text",
 CellTags->"DriftPulseQ::usage"],
Cell[827338, 15998, 623, 21, 32, "Text",
 CellTags->"UnitaryPulseQ::usage"],
Cell[827964, 16021, 692, 22, 32, "Text",
 CellTags->"ChannelPulseQ::usage"],
Cell[828659, 16045, 460, 16, 32, "Text",
 CellTags->"PulseShapeFileQ::usage"],
Cell[829122, 16063, 444, 16, 32, "Text",
 CellTags->"PulseShapeMatrixQ::usage"],
Cell[829569, 16081, 729, 28, 32, "Text",
 CellTags->"PulseShapeQ::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[830335, 16114, 104, 1, 44, "Subsection"],
Cell[830442, 16117, 420, 16, 32, "Text",
 CellTags->"DriftHamConstQ::usage"],
Cell[830865, 16135, 565, 19, 32, "Text",
 CellTags->"DriftHamTimeDepQ::usage"],
Cell[831433, 16156, 717, 28, 32, "Text",
 CellTags->"DriftHamQ::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[832187, 16189, 100, 1, 44, "Subsection"],
Cell[832290, 16192, 592, 20, 32, "Text",
 CellTags->"LindbladConstQ::usage"],
Cell[832885, 16214, 831, 27, 32, "Text",
 CellTags->"LindbladTimeDepQ::usage"],
Cell[833719, 16243, 770, 28, 32, "Text",
 CellTags->"LindbladQ::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834526, 16276, 99, 1, 44, "Subsection"],
Cell[834628, 16279, 661, 26, 32, "Text",
 CellTags->"GeneratorQ::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835326, 16310, 112, 1, 44, "Subsection"],
Cell[835441, 16313, 436, 16, 32, "Text",
 CellTags->"ObservableListQ::usage"],
Cell[835880, 16331, 442, 18, 32, "Text",
 CellTags->"FunctionListQ::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836359, 16354, 101, 1, 44, "Subsection"],
Cell[836463, 16357, 878, 30, 53, "Text",
 CellTags->"DistributionQ::usage"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

