(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    149988,       3900]
NotebookOptionsPosition[    139857,       3573]
NotebookOutlinePosition[    142330,       3642]
CellTagsIndexPosition[    141688,       3625]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Perturbation Documentation", "Chapter",
 CellChangeTimes->{{3.6333515346579514`*^9, 3.63335154627586*^9}, {
  3.633364320690548*^9, 3.63336432261762*^9}, {3.633781291117386*^9, 
  3.633781292159832*^9}, {3.633781364287074*^9, 3.633781398056273*^9}, {
  3.6337814322542763`*^9, 3.633781434518094*^9}, {3.634304392561145*^9, 
  3.634304394886302*^9}}],

Cell[CellGroupData[{

Cell["Preamble", "Subsection",
 CellChangeTimes->{{3.636379689161282*^9, 3.6363796904310207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Perturbation`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.633351696261045*^9, 3.633351701530016*^9}, {
  3.633781146956828*^9, 3.633781148275402*^9}, {3.633781294331254*^9, 
  3.633781296275483*^9}, {3.633781369011711*^9, 3.633781370275049*^9}, {
  3.633781401233733*^9, 3.633781430288822*^9}, {3.634304397916306*^9, 
  3.6343043997977057`*^9}, {3.6343168373823338`*^9, 3.6343168385706367`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"AssignUsage", "::", "nousg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No usage message in \
\[NoBreak]\\!\\(\\*RowBox[{InterpretationBox[\\\"UsageData\\\", \\\"UsageData\
\\\"], \\\"[\\\", InterpretationBox[TagBox[RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"Grid\\\"], Null], \\\"]\\\"}]\\)\
\[NoBreak] for symbol \[NoBreak]\\!\\(\\*RowBox[{\\\"BCHExpansion\\\"}]\\)\
\[NoBreak] found; using a blank message instead.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.698076526775235*^9, 3.698079626026787*^9}]
}, Open  ]],

Cell["\<\
The following packages are needed to run some code found in this \
documentation notebook.\
\>", "Text",
 CellChangeTimes->{{3.633781139005548*^9, 3.6337811426309013`*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Tensor`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Visualization`\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6343095014776506`*^9, 3.634309506874428*^9}, {
  3.634309840365309*^9, 3.634309841590867*^9}, {3.634309893412298*^9, 
  3.63430989489682*^9}, {3.634310127176152*^9, 3.634310128430011*^9}, {
  3.634310879956975*^9, 3.63431088630688*^9}, {3.634313448232463*^9, 
  3.6343134491585693`*^9}, {3.6343167133891573`*^9, 3.634316719748117*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.6351824420646763`*^9, 3.635182446927919*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Open Source Code\"\>",
  Appearance->Automatic,
  ButtonFunction:>(Needs["QUDevTools`"]; NotebookOpen[
     FileNameJoin[{QUDevTools`$QUSourcePath, 
       StringJoin[
        FileBaseName[
         NotebookFileName[]], ".m"]}]]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.635182609676621*^9, 3.6351826444407997`*^9}, {
  3.635182842680962*^9, 3.63518284820653*^9}, {3.635182903083259*^9, 
  3.635182906619155*^9}, {3.635182952870352*^9, 3.635182956778173*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction and Overview", "Section",
 CellChangeTimes->{{3.633351563673402*^9, 3.633351567143589*^9}}],

Cell[TextData[{
 "This package provides a varied collection of tools which are commonly used \
to approximate and perturb quantum systems, although they can be used more \
generally. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ability to manipulate symbolic expressions is heavily \
exploited."
}], "Text",
 CellChangeTimes->{{3.6343079942006617`*^9, 3.6343080255678368`*^9}, 
   3.634308056127495*^9, {3.634308094880814*^9, 3.634308095527034*^9}, {
   3.634308126663557*^9, 3.6343082843108683`*^9}, {3.634309233626235*^9, 
   3.6343092358176537`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Magnus Expansion", "Section",
 CellChangeTimes->{{3.63335202563237*^9, 3.6333520385490847`*^9}, {
  3.633441643373975*^9, 3.633441643471745*^9}, {3.6343049566689663`*^9, 
  3.634304966570752*^9}}],

Cell[CellGroupData[{

Cell["ClearMagnusCache", "Subsection",
 CellChangeTimes->{{3.634481457957713*^9, 3.634481459925721*^9}}],

Cell[TextData[{
 StyleBox["ClearMagnusCache[]", "Input"],
 " clears all stored values used in generating terms in ",
 StyleBox["MagnusExpansionTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}, {3.634485674487269*^9, 
  3.634485750850669*^9}},
 CellTags->"ClearMagnusCache::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusExpansionTerm", "Subsection",
 CellChangeTimes->{{3.634305070939259*^9, 3.634305080482708*^9}, {
  3.6343083259914618`*^9, 3.634308331070911*^9}}],

Cell[TextData[{
 StyleBox["MagnusExpansionTerm[", "Input"],
 StyleBox["{A,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th term in the magnus expansions (",
 StyleBox["k", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "=1,2,..) of the time dependent matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is memoized.\n\
\n",
 StyleBox["MagnusExpansionTerm[", "Input"],
 StyleBox["{A,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses memoization. Therefore, if the definition of \
",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6343056005143633`*^9, 3.634305603305471*^9}, {
   3.634305647097501*^9, 3.634305649859612*^9}, {3.634305744959845*^9, 
   3.634305751863228*^9}, 3.634307173153048*^9, {3.634307540356827*^9, 
   3.634307699267864*^9}, {3.634307750252082*^9, 3.6343077929397993`*^9}, {
   3.63430782416461*^9, 3.634307860943009*^9}, 3.634308409535462*^9, {
   3.6343121510569267`*^9, 3.634312155354227*^9}, {3.634326118145029*^9, 
   3.634326119008779*^9}, {3.634472206437723*^9, 3.634472220814378*^9}, {
   3.63447226014537*^9, 3.634472265849544*^9}, {3.63447229616856*^9, 
   3.634472359968954*^9}, {3.634472449982347*^9, 3.6344724749017353`*^9}, {
   3.634472547432765*^9, 3.634472591083488*^9}, {3.6344730374272957`*^9, 
   3.6344730377531757`*^9}, {3.634473157995775*^9, 3.634473262004147*^9}, {
   3.634473293775454*^9, 3.634473386927519*^9}, {3.634478810934701*^9, 
   3.6344788215972958`*^9}, {3.634479343587699*^9, 3.6344793437678413`*^9}, {
   3.634479412449011*^9, 3.6344794314259977`*^9}, {3.634479489971114*^9, 
   3.634479510390069*^9}, {3.644072143852416*^9, 3.644072432383821*^9}, {
   3.644072475792265*^9, 3.644072504293023*^9}},
 CellTags->"MagnusExpansionTerm::usage"],

Cell[CellGroupData[{

Cell["Example 1", "Subsubsection",
 CellChangeTimes->{{3.6343256242681417`*^9, 3.634325625746148*^9}, {
   3.634325880303872*^9, 3.634325881658627*^9}, 3.634326155741663*^9, {
   3.634472977113866*^9, 3.634472977282152*^9}}],

Cell["\<\
We demonstrate two ways of inputing a time dependent operator\
\>", "Text",
 CellChangeTimes->{{3.634472387385248*^9, 3.634472396149316*^9}}],

Cell["The first is to define a pure input function", "Text",
 CellChangeTimes->{{3.6344802165983543`*^9, 3.634480225968779*^9}, {
  3.634480292804517*^9, 3.63448029795687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "X", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "Y", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A0", ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634472412587201*^9, 3.63447244426805*^9}, {
  3.634480234666789*^9, 3.634480255379594*^9}, {3.634480457551936*^9, 
  3.634480468655304*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634472437924308*^9, 3.6344724445151157`*^9}, 
   3.634472967785165*^9, 3.634479875791308*^9, 3.634480178808449*^9, {
   3.63448024547923*^9, 3.634480255711776*^9}, {3.634480461208692*^9, 
   3.634480469030126*^9}, 3.634481338581512*^9, 3.698076527832288*^9, 
   3.6980796268796797`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 2", "Subsubsection",
 CellChangeTimes->{{3.634481416512143*^9, 3.634481417389443*^9}}],

Cell["Alternatively one may define a function as follows", "Text",
 CellChangeTimes->{{3.6344802284995203`*^9, 3.634480269123611*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634325628498866*^9, 3.634325681419886*^9}, {
   3.634325766119524*^9, 3.6343257727570267`*^9}, 3.634325806147058*^9, {
   3.634325836340673*^9, 3.634325843525778*^9}, {3.634325896803735*^9, 
   3.634325899351165*^9}, {3.634325965271186*^9, 3.6343259845751753`*^9}, {
   3.634326210600319*^9, 3.634326216787332*^9}, {3.634472369340538*^9, 
   3.63447241091072*^9}, {3.634472442263481*^9, 3.634472442366967*^9}, {
   3.6344802751183233`*^9, 3.634480279001605*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634325663208611*^9, 3.634325681695957*^9}, {
   3.634325763493328*^9, 3.63432580710528*^9}, 3.634325844774642*^9, 
   3.634325900059366*^9, {3.634325959239512*^9, 3.634325984848881*^9}, 
   3.63432613050591*^9, 3.634326219831832*^9, {3.634472435256173*^9, 
   3.634472446059585*^9}, {3.6344728754598713`*^9, 3.634472894179648*^9}, 
   3.634472924181588*^9, 3.634472966153612*^9, 3.634479874245057*^9, {
   3.634480281705164*^9, 3.634480286905581*^9}, 3.634481339657466*^9, 
   3.698076527989324*^9, 3.698079627109333*^9}]
}, Open  ]],

Cell["\<\
The latter method can run into problems with memoization if the definition of \
A1 changes it will still return the previously cached value:\
\>", "Text",
 CellChangeTimes->{{3.634472399580571*^9, 3.6344724010320807`*^9}, {
  3.634480300825639*^9, 3.634480336972677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Turtle\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.63448034111068*^9, 3.634480364515329*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6344803694651823`*^9, 3.634481340538495*^9, 
  3.698076528048131*^9, 3.698079627307363*^9}]
}, Open  ]],

Cell[TextData[{
 "The cached values can be cleared by running ",
 StyleBox["Remove[A1]", "Input"],
 " first, or the function ",
 StyleBox["ClearMagnusCache[]", "Input"]
}], "Text",
 CellChangeTimes->{{3.634480385258376*^9, 3.634480417409594*^9}, {
  3.634480486450974*^9, 3.6344804976001053`*^9}, {3.634481344569306*^9, 
  3.634481370645241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", "A1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Turtle\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6344804016849127`*^9, 3.634480420167822*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
    RowBox[{
     RowBox[{"Com", "[", 
      RowBox[{
       RowBox[{"\<\"Turtle\"\>", " ", "Perturbation`Private`t1"}], 
       ",", "\<\"Turtle\"\>"}], "]"}], 
     RowBox[{"\[DifferentialD]", "Perturbation`Private`t1"}]}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6344804048540154`*^9, 3.63448042068646*^9}, 
   3.634481372901725*^9, 3.698076528265325*^9, 3.698079627457384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearMagnusCache", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "[", 
   RowBox[{"\[Omega]_", ",", "t_"}], "]"}], ":=", 
  "\"\<Rabbit\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A1", "[", 
        RowBox[{"\[Omega]", ",", "#"}], "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634481376295223*^9, 3.634481384630185*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "\[Omega]"]], 
    RowBox[{
     RowBox[{"Com", "[", 
      RowBox[{
       RowBox[{"\<\"Rabbit\"\>", " ", "Perturbation`Private`t1"}], 
       ",", "\<\"Rabbit\"\>"}], "]"}], 
     RowBox[{"\[DifferentialD]", "Perturbation`Private`t1"}]}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.634481385278714*^9, 3.6980765283339376`*^9, 
  3.6980796275137377`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example 3", "Subsubsection",
 CellChangeTimes->{{3.634472980364563*^9, 3.634472981140852*^9}, {
  3.6344814247013817`*^9, 3.63448142480237*^9}}],

Cell["Symbolical evaluating for an arbitrary period T:", "Text",
 CellChangeTimes->{{3.634472982254715*^9, 3.634472991851099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "X", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]", " ", "#"}], "]"}], 
      RowBox[{"TP", "[", "Y", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansionTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"A2", ",", "T"}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6344729964578753`*^9, 3.634473012878306*^9}, {
  3.634473044413766*^9, 3.634473058827334*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"T", " ", "\[Omega]"}], "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"T", " ", "\[Omega]"}], "]"}]}], ")"}]}], 
       SuperscriptBox["\[Omega]", "2"]], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"T", " ", "\[Omega]"}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"T", " ", "\[Omega]"}], "]"}]}], ")"}]}], 
        SuperscriptBox["\[Omega]", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.63447299973516*^9, 3.634473013460679*^9}, {
   3.6344730510029383`*^9, 3.634473061551684*^9}, 3.634479879851974*^9, 
   3.698076528647574*^9, 3.6980796278638906`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.634472970369646*^9, 3.634472971184598*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusExpansion", "Subsection",
 CellChangeTimes->{{3.63430508467657*^9, 3.634305089528215*^9}}],

Cell[TextData[{
 StyleBox["MagnusExpansion[", "Input"],
 StyleBox["{A,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns a list of the first ",
 StyleBox["k", "Input"],
 " (",
 StyleBox["k", "Input"],
 "=1,2,3,..) terms of the Magnus expansion of  time dependent matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. \n\n",
 StyleBox["MagnusExpansion[", "Input"],
 StyleBox["{A,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally. Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.6343056812007637`*^9, 3.634305722967993*^9, {3.634305757880176*^9, 
   3.634305765807232*^9}, 3.6343071772992773`*^9, {3.634307877097534*^9, 
   3.6343078780281143`*^9}, {3.634326165904249*^9, 3.634326166634109*^9}, {
   3.63447314223615*^9, 3.634473142392983*^9}, {3.634473419783413*^9, 
   3.6344735210300493`*^9}, {3.634478835461425*^9, 3.634478850117378*^9}, {
   3.634479333248878*^9, 3.6344793334512787`*^9}, {3.6344794080384502`*^9, 
   3.6344794294910507`*^9}, {3.6440725373045053`*^9, 3.644072566201829*^9}, {
   3.644072642032359*^9, 3.644072645693797*^9}},
 CellTags->"MagnusExpansion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343256242681417`*^9, 3.634325625746148*^9}, {
   3.634325880303872*^9, 3.634325881658627*^9}, 3.634326155741663*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagnusExpansion", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "3", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixListForm"}]}], "Input",
 CellChangeTimes->{{3.634325628498866*^9, 3.634325681419886*^9}, {
   3.634325766119524*^9, 3.6343257727570267`*^9}, 3.634325806147058*^9, {
   3.634325836340673*^9, 3.634325843525778*^9}, {3.634325896803735*^9, 
   3.634325899351165*^9}, {3.634325965271186*^9, 3.6343259845751753`*^9}, {
   3.634326188088539*^9, 3.63432623674481*^9}, {3.634473108204939*^9, 
   3.634473126563107*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", "0"}, {"0", "0"}}, RowSpacings -> 1, ColumnSpacings -> 1,
        RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
          SuperscriptBox["\[Omega]", "2"]], "0"}, {"0", 
         RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
            SuperscriptBox["\[Omega]", "2"]]}]}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         FractionBox[
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
          SuperscriptBox["\[Omega]", "3"]]}, {
         RowBox[{"-", 
           FractionBox[
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
            SuperscriptBox["\[Omega]", "3"]]}], "0"}}, RowSpacings -> 1, 
       ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.634325663208611*^9, 3.634325681695957*^9}, {
   3.634325763493328*^9, 3.63432580710528*^9}, 3.634325844774642*^9, 
   3.634325900059366*^9, {3.634325959239512*^9, 3.634325984848881*^9}, 
   3.63432613050591*^9, {3.6343261938323507`*^9, 3.6343261996475058`*^9}, {
   3.6343262314918823`*^9, 3.634326237317747*^9}, {3.634473104595085*^9, 
   3.634473129427848*^9}, 3.698076615030038*^9, 3.69807962902577*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MagnusConvergenceTest", "Subsection",
 CellChangeTimes->{{3.634305091948043*^9, 3.634305095530253*^9}}],

Cell[TextData[{
 StyleBox["MagnusConvergenceTest[", "Input"],
 StyleBox["{A,t0,tf},opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs the integral ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Integral]", "t0"], "tf"], 
    RowBox[{"||", 
     RowBox[{"A", "(", "t", ")"}], "||", "dt"}]}], TraditionalForm]]],
 " where \[RightDoubleBracketingBar]\[CenterDot]\[RightDoubleBracketingBar] \
is the operator norm. If this quantity is less than \[Pi], then the Magnus \
series converges. This condition is sufficient but not necessary.\n\n",
 StyleBox["MagnusConvergenceTest[", "Input"],
 StyleBox["{A,tf},opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes the inital integration time is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0.", "Input"],
 "\n\n",
 StyleBox["Options",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\n\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ". Using ",
 StyleBox["Integrate", "Input"],
 " will usually be very slow."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}},
 CellTags->"MagnusConvergenceTest::usage"],

Cell[CellGroupData[{

Cell["Analytic Example", "Subsubsection",
 CellChangeTimes->{{3.634326259192459*^9, 3.634326260394794*^9}, {
  3.63432707514718*^9, 3.634327079931094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MagnusConvergenceTest", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6343263279479923`*^9, 3.634326343264789*^9}, {
  3.634326485759177*^9, 3.634326486306519*^9}, {3.634326831456401*^9, 
  3.6343268391990356`*^9}, {3.6343268991207047`*^9, 3.634326917795491*^9}, {
  3.6344737729483223`*^9, 3.63447379842761*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", "\[Pi]"}], "\[Omega]"]], "Output",
 CellChangeTimes->{{3.634326343759815*^9, 3.634326359356421*^9}, 
   3.634326486669191*^9, 3.634326759832837*^9, {3.634326822654332*^9, 
   3.634326839828986*^9}, {3.6343268911892633`*^9, 3.6343269364861183`*^9}, 
   3.634327146421774*^9, 3.634327242446415*^9, 3.634327567693515*^9, {
   3.634473787357182*^9, 3.634473804533936*^9}, 3.6344738349627047`*^9, 
   3.698076615280027*^9, 3.698079632695264*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numeric Example", "Subsubsection",
 CellChangeTimes->{{3.63432708276285*^9, 3.634327085002358*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2.5", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2.5", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MagnusConvergenceTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", "#", "]"}], "&"}], ",", "0", ",", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "2.5"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"2", " ", 
  SqrtBox["2"], " ", 
  RowBox[{"\[Pi]", "/", "2.5"}]}]}], "Input",
 CellChangeTimes->{{3.634327154228034*^9, 3.634327216000905*^9}, {
  3.634473830917234*^9, 3.634473845363221*^9}}],

Cell[BoxData["3.554306350526698`"], "Output",
 CellChangeTimes->{{3.634327165302024*^9, 3.6343272163026667`*^9}, 
   3.6344738484563007`*^9, 3.6980766155104933`*^9, 3.6980796330866613`*^9}],

Cell[BoxData["3.554306350526693`"], "Output",
 CellChangeTimes->{{3.634327165302024*^9, 3.6343272163026667`*^9}, 
   3.6344738484563007`*^9, 3.6980766155104933`*^9, 3.698079633087886*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.6343104496626873`*^9, 3.634310450556806*^9}}],

Cell["The wikipedia article is correct and concise.", "Text",
 CellChangeTimes->{{3.634310480489222*^9, 3.634310495774012*^9}}],

Cell["\<\
W. Magnus (1954). \[OpenCurlyDoubleQuote]On the exponential solution of \
differential equations for a linear operator\[CloseCurlyDoubleQuote]. Comm. \
Pure and Appl. Math. VII (4): 649\[Dash]673.\
\>", "Text",
 CellChangeTimes->{3.6343104747475986`*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Average Hamiltonians", "Section",
 CellChangeTimes->{{3.633352040880207*^9, 3.633352042744746*^9}, {
  3.634304969674283*^9, 3.634304973813038*^9}}],

Cell[CellGroupData[{

Cell["AverageHamiltonianTerm", "Subsection",
 CellChangeTimes->{{3.634308366509553*^9, 3.634308371958828*^9}}],

Cell[TextData[{
 StyleBox["AverageHamiltonianTerm[", "Input"],
 StyleBox["{H,t0,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th term in the average Hamiltonian expansion (",
 StyleBox["k", "Input"],
 "=0,1,2,..) terms of the Magnus expansion of  time dependent Hamiltonian \
matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is implemented \
by appropriately renormalizing the ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " function. \n\n",
 StyleBox["AverageHamiltonianTerm[", "Input"],
 StyleBox["{H,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally",
 ". Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634308376574415*^9, 3.6343084994394093`*^9}, 
   3.634308577389997*^9, {3.63447886722923*^9, 3.634478898460561*^9}, {
   3.634479360677597*^9, 3.63447945224968*^9}, {3.6344795175493317`*^9, 
   3.634479588803793*^9}, {3.634479679898574*^9, 3.634479680876418*^9}, {
   3.644072590967845*^9, 3.6440726080680103`*^9}},
 CellTags->"AverageHamiltonianTerm::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634328179843957*^9, 3.63432818309077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AverageHamiltonianTerm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "1", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634328190282669*^9, 3.6343282073701487`*^9}, {
  3.6344739536040983`*^9, 3.6344739683977537`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "\[Omega]"], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "\[Omega]"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634328197554905*^9, 3.6343282083013697`*^9}, 
   3.634473969454956*^9, 3.698076615753614*^9, 3.69807963330801*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AverageHamiltonian", "Subsection",
 CellChangeTimes->{{3.634308507037368*^9, 3.6343085098192387`*^9}}],

Cell[TextData[{
 StyleBox["AverageHamiltonian[", "Input"],
 StyleBox["{Ht,t,T}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the ",
 StyleBox["k", "Input"],
 "-th average Hamiltonian (",
 StyleBox["k", "Input"],
 "=0,1,2,..) of the time dependent Hamiltonian ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 ", integrated over the time period ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " to ",
 StyleBox["tf", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 ". The matrix ",
 StyleBox["H", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " must be a pure function of a single argument. This function is equivalent \
to summing the results of ",
 StyleBox["AverageHamiltonianTerm", "Input"],
 " from ",
 StyleBox["0", "Input"],
 " to ",
 StyleBox["k", "Input"],
 ".\n\n",
 StyleBox["AverageHamiltonian[", "Input"],
 StyleBox["{H,tf}", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["k,opts", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " assumes that the initial time for integration is ",
 StyleBox["t0", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=0", "Input"],
 ".\n\n",
 StyleBox["Warning\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] This function uses the memoizing function ",
 StyleBox["MagnusExpansionTerm", "Input"],
 " internally. Therefore, if the definition of ",
 StyleBox["A[t]", "Input"],
 " is changed between calls to this function, previous solutions may be \
returned in the later calls. Use ",
 StyleBox["ClearMagnusCache[]", "Input"],
 " to delete the memoization cache.\n\n",
 StyleBox["Options\n",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 "\[Bullet] ",
 StyleBox["NIntegrate\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["NIntegrate", "Input"],
 " should be used rather than the default ",
 StyleBox["Integrate", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Chop\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Chop", "Input"],
 " is called intermittently during the generation of the Magnus terms. The \
default value is ",
 StyleBox["False", "Input"],
 ".\n\[Bullet] ",
 StyleBox["Simplify\[Rule]True", "Input"],
 " specifies that ",
 StyleBox["Simplify", "Input"],
 " is called intermittently during the generation of the Magnus terms. This \
will often improve speed for symbolic expressions.\n\[Bullet] ",
 StyleBox["Simplify\[Rule]", "Input"],
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " specifies that the function ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 " is called intermittently during the evaluation of the Magnus terms. The \
default value is ",
 StyleBox["Identity", "Input"],
 " which does no simplificaations during evaluation.\n",
 StyleBox["Example:",
  FontSlant->"Italic"],
 " ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify", "Input"],
 ",  or ",
 StyleBox["fun", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["=FullSimplify[#,", "Input"],
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]&", "Input"],
 " for ",
 StyleBox["Assumptions", "Input"],
 " ",
 StyleBox["assum", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634308376574415*^9, 3.6343084994394093`*^9}, {
   3.634308575294209*^9, 3.634308699828203*^9}, 3.634479437695404*^9, {
   3.634479611687923*^9, 3.634479674033877*^9}, 3.6440726336784887`*^9},
 CellTags->"AverageHamiltonian::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343282219714527`*^9, 3.63432822332397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "X", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]", " ", "t"}], "]"}], 
     RowBox[{"TP", "[", "Y", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AverageHamiltonian", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "[", "#", "]"}], "&"}], ",", 
      RowBox[{"2", 
       RowBox[{"\[Pi]", "/", "\[Omega]"}]}]}], "}"}], ",", "2", ",", 
    RowBox[{"Simplify", "\[Rule]", "True"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.634328226484346*^9, 3.6343282442264147`*^9}, {
  3.634473973885852*^9, 3.6344739821428547`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "\[Omega]"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]"}], 
        SuperscriptBox["\[Omega]", "2"]]}]},
     {
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]"}], 
       SuperscriptBox["\[Omega]", "2"]], 
      RowBox[{"-", 
       FractionBox["1", "\[Omega]"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.634328232120059*^9, 3.6343282445596323`*^9}, 
   3.634473984527727*^9, 3.6980766167854567`*^9, 3.69807963380408*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.63431039114738*^9, 3.634310392033146*^9}}],

Cell["\<\
Haeberlen, U., Waugh, J.S., 1968. Coherent Averaging Effects in Magnetic \
Resonance. Phys. Rev. 175, 453\[Dash]467. doi:10.1103/PhysRev.175.453\
\>", "Text",
 CellChangeTimes->{{3.6343103958499327`*^9, 3.634310397024755*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Perturbations", "Section",
 CellChangeTimes->{{3.634304980124794*^9, 3.634304985770728*^9}}],

Cell[CellGroupData[{

Cell["Eigenvectors", "Subsection",
 CellChangeTimes->{{3.634308777459964*^9, 3.6343087802984858`*^9}}],

Cell[TextData[{
 StyleBox["FirstOrderEigenvector[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Lambda]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs first order perturbation theory on the eigenvectors corresponding \
to eigenvalue ",
 StyleBox["\[Lambda]", "Input"],
 " of ",
 StyleBox["A", "Input"],
 " where ",
 StyleBox["B", "Input"],
 " is the perturbation matrix. ",
 StyleBox["A", "Input"],
 " does not have to be Hermitian, nor even Normal. \[Lambda] can correspond \
to an eigenspace of dimension greater than 1. ",
 StyleBox["\[Lambda]", "Input"],
 " can also be a list of eigenvalues you want to perturb, or ",
 StyleBox["All", "Input"],
 ", in which case perturbation theory is attempted on all eigenvaules.\n\n\
Output is of the form ",
 StyleBox["{{v11,v12,...},{v21,v22,...},...}", "Input"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"n", ",", "m"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " degenerate eigenvector of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " eigenvalue."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.6343087901227016`*^9, 3.6343087978637257`*^9}, 
   3.634308847724977*^9, {3.634311131551207*^9, 3.634311228317461*^9}},
 CellTags->"FirstOrderEigenvector::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634310895238284*^9, 3.634310896989567*^9}, {
  3.634311257981473*^9, 3.634311260223876*^9}}],

Cell["\<\
Define a simple A and B for which we don\[CloseCurlyQuote]t actually need \
perturbation theory.\
\>", "Text",
 CellChangeTimes->{{3.63431127187777*^9, 3.634311284772531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", 
    RowBox[{"XI", "+", "IX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"TP", "[", 
     RowBox[{"YI", "+", "IY"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634310899680348*^9, 3.634310932275866*^9}, {
  3.634311017827776*^9, 3.6343110218368797`*^9}}],

Cell["Here are the eigenvalues:", "Text",
 CellChangeTimes->{{3.6343113165717583`*^9, 3.634311324395546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"A", "+", "B"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6343109502967243`*^9, 3.6343109533701887`*^9}, {
  3.634311290643304*^9, 3.634311302980942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.634310953841914*^9, 3.634311024105358*^9, {3.634311299394498*^9, 
   3.634311303339422*^9}, 3.698076617011771*^9, 3.698079634048648*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}], ",", 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.634310953841914*^9, 3.634311024105358*^9, {3.634311299394498*^9, 
   3.634311303339422*^9}, 3.698076617011771*^9, 3.6980796340696697`*^9}]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s compute the corrected perturbative eigenvalues for the \
non-zero eigenvalues:\
\>", "Text",
 CellChangeTimes->{{3.634311335507519*^9, 3.634311361946492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecondOrderEigenvalue", "[", 
  RowBox[{"A", ",", "B", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6343109583377733`*^9, 3.634310994945565*^9}, {
  3.634311039503518*^9, 3.634311042077916*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "+", 
    SuperscriptBox["\[Epsilon]", "2"]}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], "-", 
    SuperscriptBox["\[Epsilon]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.634310980854052*^9, 3.6343109953147*^9}, {
   3.634311031952711*^9, 3.63431104285998*^9}, 3.698076617179687*^9, 
   3.698079634155324*^9}]
}, Open  ]],

Cell["\<\
Note that this matches the Taylor expansion of the true eigenvalues:\
\>", "Text",
 CellChangeTimes->{{3.63431136660446*^9, 3.634311379204114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["\[Epsilon]", "2"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.634311064721781*^9, 3.634311088741434*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "+", 
   SuperscriptBox["\[Epsilon]", "2"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "3"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {2, 0, 1}, 0, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.634311089370296*^9, 3.6980766172418013`*^9, 
  3.6980796342290287`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues", "Subsection",
 CellChangeTimes->{{3.63430878460332*^9, 3.634308785901949*^9}}],

Cell[TextData[{
 StyleBox["SecondOrderEigenvalue[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["\[Lambda]", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " performs second order perturbation theory on the eigenvalue ",
 StyleBox["\[Lambda]", "Input"],
 " of ",
 StyleBox["A", "Input"],
 " where ",
 StyleBox["B", "Input"],
 " is the perturbation matrix. ",
 StyleBox["A", "Input"],
 " does not have to be Hermitian, nor even Normal. ",
 StyleBox["\[Lambda]", "Input"],
 " can correspond to an eigenspace of dimension greater than 1. ",
 StyleBox["\[Lambda]", "Input"],
 " can also be a list of eigenvalues you want to perturb, or ",
 StyleBox["All", "Input"],
 ", in which case perturbation theory is attempted on all eigenvaules."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.634308801557314*^9, {3.63430887953866*^9, 3.6343089016912107`*^9}},
 CellTags->"SecondOrderEigenvalue::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634310895238284*^9, 3.634310896989567*^9}, {
  3.634311257981473*^9, 3.634311260223876*^9}}],

Cell["\<\
Define a simple A and B for which we don\[CloseCurlyQuote]t actually need \
perturbation theory.\
\>", "Text",
 CellChangeTimes->{{3.63431127187777*^9, 3.634311284772531*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", 
    RowBox[{"XI", "+", "IX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"TP", "[", 
     RowBox[{"YI", "+", "IY"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634310899680348*^9, 3.634310932275866*^9}, {
  3.634311017827776*^9, 3.6343110218368797`*^9}}],

Cell["Let\[CloseCurlyQuote]s compute the corrections for the eigenvalue 2:", \
"Text",
 CellChangeTimes->{{3.634311335507519*^9, 3.634311361946492*^9}, {
  3.634311433059778*^9, 3.634311456306636*^9}, {3.6343118577381697`*^9, 
  3.634311859781971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstOrderEigenvector", "[", 
  RowBox[{"A", ",", "B", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6343109583377733`*^9, 3.634310994945565*^9}, {
  3.634311039503518*^9, 3.634311042077916*^9}, {3.634311422684306*^9, 
  3.634311427535871*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Epsilon]"}], ",", "0", ",", "0",
      ",", 
     RowBox[{"\[ImaginaryI]", " ", "\[Epsilon]"}]}], "}"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.634310980854052*^9, 3.6343109953147*^9}, {
   3.634311031952711*^9, 3.63431104285998*^9}, 3.634311462956067*^9, 
   3.698076617292453*^9, 3.698079634407366*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.63431023876372*^9, 3.6343102397138357`*^9}, {
  3.6343104367748013`*^9, 3.634310437861994*^9}}],

Cell["\<\
Hinch, E.J., 1991. Perturbation Methods. Cambridge University Press. \
\>", "Text",
 CellChangeTimes->{{3.634310293513311*^9, 3.634310301371792*^9}, 
   3.634310861910351*^9}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zassenhaus Formula", "Section",
 CellChangeTimes->{{3.634304992020028*^9, 3.634304997003388*^9}}],

Cell[CellGroupData[{

Cell["ClearZassenhausCache", "Subsection",
 CellChangeTimes->{{3.634481457957713*^9, 3.634481459925721*^9}, {
  3.6344858008358192`*^9, 3.63448580414119*^9}}],

Cell[TextData[{
 StyleBox["ClearZassenhausCache[]", "Input"],
 " clears all stored values used in generating terms in ",
 StyleBox["ZassenhausTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634305312004458*^9, 3.634305394873015*^9}, {
  3.634305434069941*^9, 3.634305454964443*^9}, {3.634327060067974*^9, 
  3.634327065862412*^9}, {3.634327104060679*^9, 3.634327136077113*^9}, {
  3.634327754158472*^9, 3.6343277633513813`*^9}, {3.6344735301875687`*^9, 
  3.634473556561553*^9}, {3.634473741479323*^9, 3.634473751468328*^9}, {
  3.634479455726617*^9, 3.634479459585073*^9}, {3.634485674487269*^9, 
  3.634485750850669*^9}, {3.63448580625633*^9, 3.634485825887493*^9}},
 CellTags->"ClearZassenhausCache::usage"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausTerm", "Subsection",
 CellChangeTimes->{{3.6343170608365307`*^9, 3.634317062691887*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausTerm[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (with ",
 StyleBox["n", "Input"],
 "=0,1,2,...) from the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "0"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "1"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SuperscriptBox["t", "2"], 
       SubscriptBox["C", "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["t", "3"], 
        SubscriptBox["C", "3"]}]], "\[CenterDot]", "\[CenterDot]", 
      "\[CenterDot]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  where ",
 StyleBox["A", "Input"],
 " and ",
 StyleBox["B", "Input"],
 " are square matrices. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], "=", "A"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "1"], "=", "B"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "2"], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"[", 
       RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc. This term is generated using ",
 StyleBox["ZassenhausGenerator", "Input"],
 ". This function is memoized."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634317066251998*^9, 3.6343171505007057`*^9}, {
  3.634320165367777*^9, 3.634320448396018*^9}},
 CellTags->"ZassenhausTerm::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343205890924177`*^9, 3.634320589899886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"TP", "[", "Y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZassenhausTerm", "[", 
   RowBox[{"A", ",", "B", ",", "2"}], "]"}], "//", "MatrixForm"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6343206070485353`*^9, 3.634474721501945*^9, 
  3.698076617336472*^9, 3.6980796344760027`*^9}]
}, Open  ]],

Cell[TextData[{
 "As expected, this is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"[", 
      RowBox[{"X", ",", "Y"}], "]"}]}], "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":"
}], "Text",
 CellChangeTimes->{{3.634320617836194*^9, 3.634320634660974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Com", "[", 
     RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6343206378599653`*^9, 3.634320645961609*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[ImaginaryI]"}], "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6343206462135677`*^9, 3.634474723947267*^9, 
  3.6980766173413877`*^9, 3.698079634551302*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausSeries", "Subsection",
 CellChangeTimes->{{3.63432045937265*^9, 3.63432046180179*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausSeries[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["C", "0"], ",", 
     SubscriptBox["C", "1"], ",", 
     SubscriptBox["C", "2"], ",", "...", ",", 
     SubscriptBox["C", "n"]}]}], TraditionalForm]]],
 "} from the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "0"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", 
       SubscriptBox["C", "1"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SuperscriptBox["t", "2"], 
       SubscriptBox["C", "2"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["t", "3"], 
        SubscriptBox["C", "3"]}]], "\[CenterDot]", "\[CenterDot]", 
      "\[CenterDot]"}]}]}], TraditionalForm]]],
 "  where ",
 StyleBox["A", "Input"],
 " and ",
 StyleBox["B", "Input"],
 " are square matrices. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "0"], "=", "A"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "1"], "=", "B"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "2"], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"[", 
       RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]}], TraditionalForm]]],
 ", etc. This these terms are generated using ",
 StyleBox["ZassenhausGenerator", "Input"],
 " and ",
 StyleBox["ZassenhausTerm", "Input"],
 "."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634317066251998*^9, 3.6343171505007057`*^9}, {
  3.634320165367777*^9, 3.634320562518149*^9}},
 CellTags->"ZassenhausSeries::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6343205890924177`*^9, 3.634320589899886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"TP", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"TP", "[", "Y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZassenhausSeries", "[", 
   RowBox[{"A", ",", "B", ",", "3"}], "]"}], "//", 
  "MatrixListForm"}]}], "Input",
 CellChangeTimes->{{3.6343206597099323`*^9, 3.6343206602508163`*^9}, {
  3.634320693686355*^9, 3.6343206990405903`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", "1"}, {"1", "0"}}, RowSpacings -> 1, ColumnSpacings -> 1,
        RowAlignments -> Baseline, ColumnAlignments -> Center], "\[NoBreak]", 
      ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         RowBox[{"-", "\[ImaginaryI]"}]}, {"\[ImaginaryI]", "0"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{
         RowBox[{"-", "\[ImaginaryI]"}], "0"}, {"0", "\[ImaginaryI]"}}, 
       RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
       ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],"\",\"",TagBox[
    RowBox[{"(", "\[NoBreak]", 
      GridBox[{{"0", 
         RowBox[{
           RowBox[{"-", 
             FractionBox["4", "3"]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}, {
         RowBox[{
           RowBox[{"-", 
             FractionBox["4", "3"]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}], "0"}}, RowSpacings -> 
       1, ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
       Center], "\[NoBreak]", ")"}], 
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.6343206070485353`*^9, {3.634320689298135*^9, 3.634320699292156*^9}, 
   3.634474729107785*^9, 3.634475415952018*^9, 3.6980766173806343`*^9, 
   3.69807963462929*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ZassenhausExpansion", "Subsection",
 CellChangeTimes->{{3.634309001890463*^9, 3.634309005384186*^9}}],

Cell[TextData[{
 StyleBox["ZassenhausExpansion[", "Input"],
 StyleBox["t", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " calculates the right hand size of the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "A"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "B"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["t", "2"], "[", 
          RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]], "\[CenterDot]", 
      "\[CenterDot]", "\[CenterDot]"}]}]}], TraditionalForm]]],
 "  to order ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     SuperscriptBox["t", "n"]], "."}], TraditionalForm]]],
 " ",
 StyleBox["\nZassenhausExpansion[", "Input"],
 StyleBox["A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " calculates the right hand size of the Zassenhaus formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"t", "(", 
      RowBox[{"A", "+", "B"}], ")"}]], "=", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "A"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"t", " ", "B"}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["t", "2"], "[", 
          RowBox[{"A", ",", "B"}], "]"}]}], "/", "2"}]], "\[CenterDot]", 
      "\[CenterDot]", "\[CenterDot]"}]}]}], TraditionalForm]]],
 "  to order ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    SuperscriptBox["t", "n"]], TraditionalForm]]],
 " and then (effectively) sets ",
 StyleBox["t=1", "Input"],
 ". \n\nThis is done by first computing the Zassenhaus series using ",
 StyleBox["ZassenhausTerm", "Input"],
 " and ",
 StyleBox["ZassenhausGenerator", "Input"],
 ". See also ",
 StyleBox["ZassenhausSeries", "Input"],
 ". This function is memoized."
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{
  3.634309014500841*^9, {3.634309048288368*^9, 3.634309186290958*^9}, {
   3.6343119782790737`*^9, 3.6343119857818327`*^9}, {3.634312136175186*^9, 
   3.6343121406062393`*^9}, 3.634317095020178*^9, {3.634320743347694*^9, 
   3.634320862833806*^9}, {3.634320954603911*^9, 3.634321011076398*^9}},
 CellTags->"ZassenhausExpansion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.634312109980947*^9, 3.634312111499946*^9}}],

Cell["\<\
Compute orders 2 through 5 of the Zassenhaus expansion. Also compute the \
exact value.\
\>", "Text",
 CellChangeTimes->{{3.6343221012650957`*^9, 3.63432212469871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"-", "I"}], " ", 
    RowBox[{"TP", "[", "X", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"-", "I"}], " ", 
    RowBox[{"TP", "[", "Y", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ze", "[", "n", "]"}], "=", 
     RowBox[{"ZassenhausExpansion", "[", 
      RowBox[{"t", ",", "A", ",", "B", ",", "n"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ze", "[", "1", "]"}], "=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"t", 
     RowBox[{"(", 
      RowBox[{"A", "+", "B"}], ")"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.634312232233507*^9, 3.634312259592136*^9}, 
   3.634316704154706*^9, {3.634316735672658*^9, 3.634316766317823*^9}, {
   3.634317274876029*^9, 3.634317324478438*^9}, {3.6343182589160423`*^9, 
   3.634318261301787*^9}, {3.6343210690127563`*^9, 3.634321121048031*^9}, {
   3.634321184793353*^9, 3.6343212570363894`*^9}, {3.634321296638329*^9, 
   3.6343213106496897`*^9}, {3.634321453754994*^9, 3.6343214564139557`*^9}, {
   3.6343215163466587`*^9, 3.6343215261438427`*^9}, {3.634321782596129*^9, 
   3.634321877483976*^9}, {3.698076187998395*^9, 3.698076188262204*^9}}],

Cell["Plot the results.", "Text",
 CellChangeTimes->{{3.6343221360880404`*^9, 3.634322138011355*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"functions", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"ze", "[", "n", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"functions", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<Zassenhaus order \>\"", "<>", 
           RowBox[{"ToString", "[", "n", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "2", ",", "5"}], "}"}]}], "]"}], ",", 
        "\"\<Exact\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Absolute value of 1,1 element of matrix\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.634321133680304*^9, 3.634321160199954*^9}, {
   3.634321234799851*^9, 3.634321236377483*^9}, {3.634321276247572*^9, 
   3.634321290528595*^9}, {3.634321380242447*^9, 3.634321422562669*^9}, 
   3.6343215873022614`*^9, 3.634321665502515*^9, {3.6343217121216583`*^9, 
   3.634321767942007*^9}, {3.6343218950370827`*^9, 3.634322068092751*^9}, {
   3.634322160987262*^9, 3.634322165525853*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
R7wWzuYIsnBXWpj3617mKfWKOctj4v8GIR7f
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wv8BofoCyw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
IHXqBgH/AxwHgvY=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
IHXqBgH/AxwHgvY=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6X//J43O5xxosqbB/wEAjich
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Absolute value of 1,1 element of matrix\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 1.2}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Exact\"", "\"Zassenhaus order 2\"", "\"Zassenhaus order 3\"", 
       "\"Zassenhaus order 4\"", "\"Zassenhaus order 5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6343213886301203`*^9, 3.63432142294214*^9}, 
   3.634321471000111*^9, 3.634321537302589*^9, 3.634321622585712*^9, 
   3.634321666476922*^9, {3.634321716993577*^9, 3.634321768548869*^9}, {
   3.634321920767069*^9, 3.634321987929991*^9}, {3.6343220302394257`*^9, 
   3.634322068942733*^9}, 3.634322166079812*^9, 3.6344755141235113`*^9, 
   3.6980766179687653`*^9, 3.69807963519914*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.634310829711055*^9, 3.63431083062437*^9}}],

Cell["\<\
Casas, F., Murua, A., Nadinic, M., 2012. Efficient computation of the \
Zassenhaus formula. Computer Physics Communications 183, 2386\[Dash]2391\
\>", "Text",
 CellChangeTimes->{{3.6343108353538933`*^9, 3.634310840409165*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BCH Expansion", "Section",
 CellChangeTimes->{{3.698075324930928*^9, 3.69807533163422*^9}}],

Cell[CellGroupData[{

Cell["BCHExpansion", "Subsection",
 CellChangeTimes->{{3.698075339122303*^9, 3.698075345301302*^9}}],

Cell[TextData[{
 StyleBox["BCHExpansion[\[Lambda]", "Input"],
 StyleBox[",A", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["B", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[",", "Input"],
 StyleBox["n", "Input",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox["]", "Input"],
 " returns the nth order BCH Expansion from the formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Ad", 
      SuperscriptBox["\[ExponentialE]", "A"]], "B"}], "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "A"}]], 
      SuperscriptBox["B\[ExponentialE]", "A"]}], "=", 
     RowBox[{"B", "+", 
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"B", ",", "A"}], "]"}], "+", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Lambda]", "2"], 
         RowBox[{"2", "!"}]], "[", 
        RowBox[{
         RowBox[{"[", 
          RowBox[{"B", ",", "A"}], "]"}], ",", "A"}], "]"}], "\[CenterDot]", 
       "\[CenterDot]", "\[CenterDot]"}]}]}]}], TraditionalForm]]],
 "  where ",
 StyleBox["A", "Input"],
 " and ",
 StyleBox["B", "Input"],
 " are square matrices or quantum utils tensor operators. "
}], "Text",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.634317066251998*^9, 3.6343171505007057`*^9}, {
  3.634320165367777*^9, 3.634320562518149*^9}, {3.698075544133608*^9, 
  3.6980755511492023`*^9}, {3.69807558146327*^9, 3.698075746894142*^9}, {
  3.698075853516789*^9, 3.698075857452248*^9}, {3.69807593674039*^9, 
  3.698076068863826*^9}, {3.69807614007121*^9, 3.698076160158934*^9}},
 CellTags->"BCHExpansion::usage"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6980761634625587`*^9, 3.698076164501967*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"Spin", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"Spin", "[", "Y", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.698076180236709*^9, 3.6980761835343943`*^9}, {
  3.698076470290495*^9, 3.698076489161996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BCHExpansion", "[", 
  RowBox[{"a", ",", "A", ",", "B", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.698076497651114*^9, 3.6980765233792152`*^9}, 
   3.6980767046342583`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Spin", "[", "Y", "]"}], "+", 
  RowBox[{"2", " ", "a", " ", 
   RowBox[{"Com", "[", 
    RowBox[{
     RowBox[{"Spin", "[", "Y", "]"}], ",", 
     RowBox[{"Spin", "[", "X", "]"}]}], "]"}]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"Com", "[", 
    RowBox[{
     RowBox[{"Com", "[", 
      RowBox[{
       RowBox[{"Spin", "[", "Y", "]"}], ",", 
       RowBox[{"Spin", "[", "X", "]"}]}], "]"}], ",", 
     RowBox[{"Spin", "[", "X", "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6980766185280457`*^9, 3.6980767053037643`*^9, 
  3.698079635432012*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AverageHamiltonianTerm::usage"->{
  Cell[36672, 1083, 4143, 133, 341, "Text",
   CellTags->"AverageHamiltonianTerm::usage"]},
 "AverageHamiltonian::usage"->{
  Cell[42782, 1284, 3992, 133, 341, "Text",
   CellTags->"AverageHamiltonian::usage"]},
 "BCHExpansion::usage"->{
  Cell[136786, 3473, 1688, 50, 50, "Text",
   CellTags->"BCHExpansion::usage"]},
 "ClearMagnusCache::usage"->{
  Cell[4608, 126, 703, 14, 33, "Text",
   CellTags->"ClearMagnusCache::usage"]},
 "ClearZassenhausCache::usage"->{
  Cell[58839, 1815, 751, 14, 33, "Text",
   CellTags->"ClearZassenhausCache::usage"]},
 "FirstOrderEigenvector::usage"->{
  Cell[49475, 1510, 1682, 52, 101, "Text",
   CellTags->"FirstOrderEigenvector::usage"]},
 "MagnusConvergenceTest::usage"->{
  Cell[30961, 911, 1789, 49, 150, "Text",
   CellTags->"MagnusConvergenceTest::usage"]},
 "MagnusExpansionTerm::usage"->{
  Cell[5509, 149, 4767, 141, 319, "Text",
   CellTags->"MagnusExpansionTerm::usage"]},
 "MagnusExpansion::usage"->{
  Cell[23385, 688, 4203, 132, 319, "Text",
   CellTags->"MagnusExpansion::usage"]},
 "SecondOrderEigenvalue::usage"->{
  Cell[55214, 1698, 1116, 33, 55, "Text",
   CellTags->"SecondOrderEigenvalue::usage"]},
 "ZassenhausExpansion::usage"->{
  Cell[69438, 2167, 3096, 99, 115, "Text",
   CellTags->"ZassenhausExpansion::usage"]},
 "ZassenhausSeries::usage"->{
  Cell[64680, 2013, 2200, 79, 61, "Text",
   CellTags->"ZassenhausSeries::usage"]},
 "ZassenhausTerm::usage"->{
  Cell[59734, 1837, 2217, 79, 61, "Text",
   CellTags->"ZassenhausTerm::usage"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AverageHamiltonianTerm::usage", 140163, 3583},
 {"AverageHamiltonian::usage", 140287, 3586},
 {"BCHExpansion::usage", 140401, 3589},
 {"ClearMagnusCache::usage", 140512, 3592},
 {"ClearZassenhausCache::usage", 140627, 3595},
 {"FirstOrderEigenvector::usage", 140749, 3598},
 {"MagnusConvergenceTest::usage", 140874, 3601},
 {"MagnusExpansionTerm::usage", 140996, 3604},
 {"MagnusExpansion::usage", 141112, 3607},
 {"SecondOrderEigenvalue::usage", 141231, 3610},
 {"ZassenhausExpansion::usage", 141353, 3613},
 {"ZassenhausSeries::usage", 141471, 3616},
 {"ZassenhausTerm::usage", 141583, 3619}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 355, 5, 66, "Chapter"],
Cell[CellGroupData[{
Cell[960, 31, 98, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1083, 36, 438, 6, 32, "Input"],
Cell[1524, 44, 597, 11, 23, "Message"]
}, Open  ]],
Cell[2136, 58, 182, 4, 33, "Text"],
Cell[2321, 64, 512, 7, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2870, 76, 101, 1, 36, "Subsection"],
Cell[2974, 79, 531, 12, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[3542, 96, 110, 1, 51, "Section"],
Cell[3655, 99, 582, 12, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4274, 116, 202, 3, 65, "Section"],
Cell[CellGroupData[{
Cell[4501, 123, 104, 1, 45, "Subsection"],
Cell[4608, 126, 703, 14, 33, "Text",
 CellTags->"ClearMagnusCache::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5348, 145, 158, 2, 45, "Subsection"],
Cell[5509, 149, 4767, 141, 319, "Text",
 CellTags->"MagnusExpansionTerm::usage"],
Cell[CellGroupData[{
Cell[10301, 294, 224, 3, 35, "Subsubsection"],
Cell[10528, 299, 151, 3, 30, "Text"],
Cell[10682, 304, 176, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[10883, 310, 833, 25, 46, "Input"],
Cell[11719, 337, 1149, 29, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12917, 372, 100, 1, 29, "Subsubsection"],
Cell[13020, 375, 134, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[13179, 380, 1279, 32, 46, "Input"],
Cell[14461, 414, 1384, 32, 70, "Output"]
}, Open  ]],
Cell[15860, 449, 281, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[16166, 458, 593, 17, 46, "Input"],
Cell[16762, 477, 953, 26, 70, "Output"]
}, Open  ]],
Cell[17730, 506, 346, 8, 31, "Text"],
Cell[CellGroupData[{
Cell[18101, 518, 657, 18, 63, "Input"],
Cell[18761, 538, 639, 18, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19437, 561, 659, 18, 63, "Input"],
Cell[20099, 581, 595, 18, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20743, 605, 150, 2, 29, "Subsubsection"],
Cell[20896, 609, 130, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[21051, 614, 716, 22, 46, "Input"],
Cell[21770, 638, 1354, 37, 70, "Output"]
}, Open  ]],
Cell[23139, 678, 92, 1, 28, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23280, 685, 102, 1, 45, "Subsection"],
Cell[23385, 688, 4203, 132, 319, "Text",
 CellTags->"MagnusExpansion::usage"],
Cell[CellGroupData[{
Cell[27613, 824, 172, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[27810, 830, 1109, 29, 55, "Input"],
Cell[28922, 861, 1866, 40, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30849, 908, 109, 1, 45, "Subsection"],
Cell[30961, 911, 1789, 49, 150, "Text",
 CellTags->"MagnusConvergenceTest::usage"],
Cell[CellGroupData[{
Cell[32775, 964, 155, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[32955, 970, 867, 23, 46, "Input"],
Cell[33825, 995, 511, 9, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34385, 1010, 105, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[34515, 1015, 876, 27, 68, "Input"],
Cell[35394, 1044, 189, 2, 70, "Output"],
Cell[35586, 1048, 187, 2, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35834, 1057, 100, 1, 44, "Subsection"],
Cell[35937, 1060, 127, 1, 30, "Text"],
Cell[36067, 1063, 264, 5, 30, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36380, 1074, 154, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[36559, 1080, 110, 1, 45, "Subsection"],
Cell[36672, 1083, 4143, 133, 341, "Text",
 CellTags->"AverageHamiltonianTerm::usage"],
Cell[CellGroupData[{
Cell[40840, 1220, 97, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[40962, 1225, 836, 25, 46, "Input"],
Cell[41801, 1252, 809, 22, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42671, 1281, 108, 1, 45, "Subsection"],
Cell[42782, 1284, 3992, 133, 341, "Text",
 CellTags->"AverageHamiltonian::usage"],
Cell[CellGroupData[{
Cell[46799, 1421, 99, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[46923, 1426, 830, 25, 46, "Input"],
Cell[47756, 1453, 1038, 29, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48855, 1489, 97, 1, 44, "Subsection"],
Cell[48955, 1492, 236, 4, 31, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49240, 1502, 105, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[49370, 1507, 102, 1, 45, "Subsection"],
Cell[49475, 1510, 1682, 52, 101, "Text",
 CellTags->"FirstOrderEigenvector::usage"],
Cell[CellGroupData[{
Cell[51182, 1566, 147, 2, 35, "Subsubsection"],
Cell[51332, 1570, 185, 4, 30, "Text"],
Cell[51520, 1576, 403, 11, 46, "Input"],
Cell[51926, 1589, 109, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[52060, 1594, 273, 5, 46, "Input"],
Cell[52336, 1601, 273, 6, 70, "Output"],
Cell[52612, 1609, 566, 16, 70, "Output"]
}, Open  ]],
Cell[53193, 1628, 191, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[53409, 1636, 294, 7, 28, "Input"],
Cell[53706, 1645, 372, 10, 70, "Output"]
}, Open  ]],
Cell[54093, 1658, 157, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[54275, 1665, 317, 9, 45, "Input"],
Cell[54595, 1676, 457, 12, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55113, 1695, 98, 1, 45, "Subsection"],
Cell[55214, 1698, 1116, 33, 55, "Text",
 CellTags->"SecondOrderEigenvalue::usage"],
Cell[CellGroupData[{
Cell[56355, 1735, 147, 2, 35, "Subsubsection"],
Cell[56505, 1739, 185, 4, 30, "Text"],
Cell[56693, 1745, 403, 11, 46, "Input"],
Cell[57099, 1758, 252, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[57376, 1766, 273, 5, 28, "Input"],
Cell[57652, 1773, 450, 12, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58163, 1792, 150, 2, 44, "Subsection"],
Cell[58316, 1796, 185, 4, 31, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58550, 1806, 103, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[58678, 1811, 158, 2, 44, "Subsection"],
Cell[58839, 1815, 751, 14, 33, "Text",
 CellTags->"ClearZassenhausCache::usage"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59627, 1834, 104, 1, 44, "Subsection"],
Cell[59734, 1837, 2217, 79, 61, "Text",
 CellTags->"ZassenhausTerm::usage"],
Cell[CellGroupData[{
Cell[61976, 1920, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[62101, 1925, 332, 9, 63, "Input"],
Cell[62436, 1936, 746, 20, 70, "Output"]
}, Open  ]],
Cell[63197, 1959, 313, 11, 31, "Text"],
Cell[CellGroupData[{
Cell[63535, 1974, 230, 7, 28, "Input"],
Cell[63768, 1983, 746, 20, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64575, 2010, 102, 1, 44, "Subsection"],
Cell[64680, 2013, 2200, 79, 61, "Text",
 CellTags->"ZassenhausSeries::usage"],
Cell[CellGroupData[{
Cell[66905, 2096, 100, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[67030, 2101, 462, 12, 63, "Input"],
Cell[67495, 2115, 1772, 42, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69328, 2164, 107, 1, 45, "Subsection"],
Cell[69438, 2167, 3096, 99, 115, "Text",
 CellTags->"ZassenhausExpansion::usage"],
Cell[CellGroupData[{
Cell[72559, 2270, 98, 1, 35, "Subsubsection"],
Cell[72660, 2273, 178, 4, 33, "Text"],
Cell[72841, 2279, 1403, 35, 99, "Input"],
Cell[74247, 2316, 101, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[74373, 2321, 1807, 42, 187, "Input"],
Cell[76183, 2365, 59932, 1080, 267, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136176, 3452, 97, 1, 44, "Subsection"],
Cell[136276, 3455, 236, 4, 33, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136561, 3465, 97, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[136683, 3470, 100, 1, 45, "Subsection"],
Cell[136786, 3473, 1688, 50, 50, "Text",
 CellTags->"BCHExpansion::usage"],
Cell[CellGroupData[{
Cell[138499, 3527, 100, 1, 35, "Subsubsection"],
Cell[138602, 3530, 338, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[138965, 3542, 204, 4, 32, "Input"],
Cell[139172, 3548, 621, 18, 34, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

